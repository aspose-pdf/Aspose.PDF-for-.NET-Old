<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.Cells.GridDesktop</name>
  </assembly>
  <members>
    <member name="T:Aspose.Cells.GridDesktop.BorderLineType">
      <summary>
            Specifies the border line type for a gridCell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.None">
      <summary>
            No border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.Thin">
      <summary>
            A solid line border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.Medium">
      <summary>
            A solid line border.Line width is 2f.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.Dashed">
      <summary>
            A dashed line border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.Dotted">
      <summary>
            A dotted line border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.Thick">
      <summary>
            A solid line border.Line width is 3f.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.MediumDashed">
      <summary>
            A dashed line border.Line width is 2f.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.ThinDashDotted">
      <summary>
            A dashDotted line border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.MediumDashDotted">
      <summary>
            A dashDotted line border.Line width is 2f.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.ThinDashDotDotted">
      <summary>
            A dashDotDotted line border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderLineType.MediumDashDotDotted">
      <summary>
            A dashDotDotted line border.Line width is 2f.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellControl">
      <summary>
            Represents a cell control.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellRelative">
      <summary>
            Internal use only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellControl.Text">
      <summary>
            Gets or sets the text associated with this control.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Button">
      <summary>
            Represents a cell button control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Button.Width">
      <summary>
            Gets or sets the width of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Button.Height">
      <summary>
            Gets or sets the height of the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Button.AlwaysVisible">
      <summary>
            Gets or sets if the Button should always visible, only work for Cell Control Button.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Button.Image">
      <summary>
            Gets or sets the background image.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CheckBox">
      <summary>
            Represents a cell checkbox control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CheckBox.Checked">
      <summary>
            Gets or set a value indicating whether the check box is in the checked state.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.ComboBox">
      <summary>
            Represents a cell combobox control.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.ComboBox.SetSelectedIndex(System.Int32)">
      <summary>
            Sets the Selected index of the ComboBox.
            This will not calculate formula. 
            To calculate formula,need to call GridDesktop.RunAllFormulas manually.
            It will not auto calculate formulas in any case even GridDesktop.RecalculateFormulas is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ComboBox.SelectedIndex">
      <summary>
            Gets or sets the index specifying the currently selected item.
            Setting the index will call GridDesktop.RunAllFormulas method 
            automatic if GridDesktop.RecalculateFormulas property is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ComboBox.Width">
      <summary>
            Gets or sets the width of the list control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ComboBox.Height">
      <summary>
            Gets or sets the height of the list control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ComboBox.Items">
      <summary>
            Gets an object representing the collection of the items contained in this ComboBox.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ComboBox.Values">
      <summary>
            Gets an object representing the collection of the values contained in this ComboBox.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ComboBox.IsInputable">
      <summary>
            Indicates if the user can input text to the combobox.
            The inputted text will be saved as the cell's value.
            The default value is "false".
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellControlCollection">
      <summary>
            Encapsulates a collection of cell control. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellRelativeCollection">
      <summary>
            Internal use only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellRelativeCollection.Remove(System.Int32,System.Int32)">
      <summary>
            Removes the item at the specified row column index of the cell.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellRelativeCollection.Remove(System.String)">
      <summary>
            Removes the item by cell name.
            </summary>
      <param name="cellName">cell name(in excel name format, like 'A1', 'F22')</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellControlCollection.AddButton(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a button to a specified cell at row column index.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
      <param name="width">Width of button.</param>
      <param name="height">Height of button.</param>
      <param name="text">Button text.</param>
      <returns>The added button.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellControlCollection.AddButton(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a button to a specified cell by cell name.
            </summary>
      <param name="cellName">Name of grid cell.</param>
      <param name="width">Width of button.</param>
      <param name="height">Height of button.</param>
      <param name="text">Button text.</param>
      <returns>The added button.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellControlCollection.AddButton(System.Int32,System.Int32,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Adds a button to a specified cell at row column index.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
      <param name="width">Width of button.</param>
      <param name="height">Height of button.</param>
      <param name="text">Button text.</param>
      <param name="alwaysVisible">If the Button should always visible, only work for Cell Control Button.</param>
      <returns>The added button.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellControlCollection.AddButton(System.String,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Adds a button to a specified cell by cell name.
            </summary>
      <param name="cellName">Name of grid cell.</param>
      <param name="width">Width of button.</param>
      <param name="height">Height of button.</param>
      <param name="text">Button text.</param>
      <param name="alwaysVisible">If the Button should always visible, only work for Cell Control Button.</param>
      <returns>The added button.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellControlCollection.AddCheckBox(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Adds a checkbox to a specified cell at row column index.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
      <param name="check">Checkbox checked property state.</param>
      <returns>The added checkbox.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellControlCollection.AddCheckBox(System.String,System.Boolean)">
      <summary>
            Adds a checkbox to a specified cell by cell name.
            </summary>
      <param name="cellName">Name of grid cell.</param>
      <param name="check">Checkbox checked property state.</param>
      <returns>The added checkbox.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellControlCollection.AddComboBox(System.Int32,System.Int32,System.Collections.ICollection)">
      <summary>
            Adds a combobox to a specified cell at row column index.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
      <param name="items">The collection of the items contained in ComboBox.</param>
      <returns>The added combobox.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellControlCollection.AddComboBox(System.Int32,System.Int32,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>
            Adds a combobox to a specified cell at row column index.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
      <param name="items">The collection of the items contained in ComboBox.</param>
      <param name="values">The collection of the values contained in ComboBox.</param>
      <returns>The added combobox.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellControlCollection.AddComboBox(System.String,System.Collections.ICollection)">
      <summary>
            Adds a combobox to a specified cell by cell name.
            </summary>
      <param name="cellName">Name of grid cell.</param>
      <param name="items">The collection of the items contained in ComboBox.</param>
      <returns>The added combobox.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellControlCollection.AddComboBox(System.String,System.Collections.ICollection,System.Collections.ICollection)">
      <summary>
            Adds a combobox to a specified cell by cell name.
            </summary>
      <param name="cellName">Name of grid cell.</param>
      <param name="items">The collection of the items contained in ComboBox.</param>
      <param name="values">The collection of the values contained in ComboBox.</param>
      <returns>The added combobox.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellControlCollection.Item(System.Int32,System.Int32)">
      <summary>
            Gets the cell control at specified row and column index.
            </summary>
      <param name="row">row index.</param>
      <param name="col">column index.</param>
      <remarks>
            If there is not a CellControl object at specified row column index,
            this will check the column CellControl object.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellControlCollection.Item(System.String)">
      <summary>
            Gets the cell control by specified cell name.
            </summary>
      <param name="cellName">cell name(in excel name format, like 'A1', 'F22')
            </param>
      <remarks>
            If there is not a CellControl object at specified row column index,
            this will check the column CellControl object.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellLocation">
      <summary>
            Indicates the cell location.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellLocation.#ctor">
      <summary>
      </summary>
      <example>
        <code>
        </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellLocation.#ctor(System.Int32,System.Int32)">
      <summary>
      </summary>
      <example>
        <code>
        </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellLocation.ToString">
      <summary>
            Override the ToString() of the object.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellLocation.Equals(System.Object)">
      <summary>
            Determines whether the specified Object is equal to the current Object.
            </summary>
      <param name="obj">The Object to compare with the current Object.</param>
      <returns>true if the specified Object is equal to the current Object; otherwise, false.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellLocation.GetHashCode">
      <summary>
            Serves as a hash function for a particular type, suitable for use in hashing algorithms and data structures like a hash table.
            </summary>
      <returns>A hash code for the current Object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellLocation.op_Equality(Aspose.Cells.GridDesktop.CellLocation,Aspose.Cells.GridDesktop.CellLocation)">
      <summary>
            Overload operator ==
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellLocation.op_Inequality(Aspose.Cells.GridDesktop.CellLocation,Aspose.Cells.GridDesktop.CellLocation)">
      <summary>
            Overload opertor !=
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellLocation.Column">
      <summary>
            Gets or sets the column of the cell location.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellLocation.Row">
      <summary>
            Gets or sets the row of the cell location.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellRange">
      <summary>
            Encapsulates the object that represents a range of cells within a spreadsheet. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellRange.#ctor">
      <summary>
            Default Constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            CellRange Constructor.
            </summary>
      <param name="cStartRow">Start Row index.</param>
      <param name="cStartCol">Start Column index.</param>
      <param name="cEndRow">End Row index.</param>
      <param name="cEndCol">End Column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellRange.#ctor(System.String,System.String)">
      <summary>
            CellRange Constructor.
            </summary>
      <param name="startCellName">Start cell name.</param>
      <param name="endCellName">End cell name.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellRange.Inside(Aspose.Cells.GridDesktop.CellRange)">
      <summary>
            check whether current CellRange is inside in the target CellRange
            </summary>
      <param name="r">target CellRange.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellRange.Copy(Aspose.Cells.GridDesktop.CellRange)">
      <summary>
            Copies from another CellRange object.
            </summary>
      <param name="cellRange">The CellRange object to copy from.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CellRange.ToString">
      <summary>
            Returns a String that represents the current CellRange.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellRange.Worksheet">
      <summary>
            Gets worksheet object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellRange.StartRow">
      <summary>
            Gets or sets the index of the start row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellRange.EndRow">
      <summary>
            Gets or sets the index of the end row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellRange.StartColumn">
      <summary>
            Gets or sets the index of the start column of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellRange.EndColumn">
      <summary>
            Gets or sets the index of the end column of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellRange.Address">
      <summary>
            Gets the address of CellRange object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.ContextMenuManager">
      <summary>
            Represents context menu item's available status.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.ContextMenu">
      <summary>
            Gets the shortcut menu associated with the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_Cut">
      <summary>
            Gets or sets a value indicating whether the context menu item "Cut" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_Copy">
      <summary>
            Gets or sets a value indicating whether the context menu item "Copy" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_Paste">
      <summary>
            Gets or sets a value indicating whether the context menu item "Paste" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_Separator1">
      <summary>
            Gets or sets a value indicating whether the context menu item separator "Separator1" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_AddRow">
      <summary>
            Gets or sets a value indicating whether the context menu item "AddRow" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_Insert">
      <summary>
            Gets or sets a value indicating whether the context menu item "Insert" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_InsertRow">
      <summary>
            Gets or sets a value indicating whether the context menu item "InsertRow" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_InsertColumn">
      <summary>
            Gets or sets a value indicating whether the context menu item "InsertColumn" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_Delete">
      <summary>
            Gets or sets a value indicating whether the context menu item "Delete" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_DeleteRow">
      <summary>
            Gets or sets a value indicating whether the context menu item "DeleteRow" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_DeleteColumn">
      <summary>
            Gets or sets a value indicating whether the context menu item "DeleteColumn" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_ClearContents">
      <summary>
            Gets or sets a value indicating whether the context menu item "ClearContents" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_Separator2">
      <summary>
            Gets or sets a value indicating whether the context menu item separator "Separator2" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_InsertComment">
      <summary>
            Gets or sets a value indicating whether the context menu item "InsertComment" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_DeleteComment">
      <summary>
            Gets or sets a value indicating whether the context menu item "DeleteComment" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_Separator3">
      <summary>
            Gets or sets a value indicating whether the context menu item separator "Separator3" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_FormatCells">
      <summary>
            Gets or sets a value indicating whether the context menu item "FormatCells" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_Hyperlink">
      <summary>
            Gets or sets a value indicating whether the context menu item "Hyperlink" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_EditHyperlink">
      <summary>
            Gets or sets a value indicating whether the context menu item "EditHyperlink" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_OpenHyperlink">
      <summary>
            Gets or sets a value indicating whether the context menu item "OpenHyperlink" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_RemoveHyperlink">
      <summary>
            Gets or sets a value indicating whether the context menu item "RemoveHyperlink" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_Hide">
      <summary>
            Gets or sets a value indicating whether the context menu item "Hide" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_UnHide">
      <summary>
            Gets or sets a value indicating whether the context menu item "UnHide" is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ContextMenuManager.MenuItemAvailable_All">
      <summary>
            Sets a value indicating whether all the context menu items are available.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CustomProperty">
      <summary>
            Represents identifier information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CustomProperty.Name">
      <summary>
            Returns or sets the name of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CustomProperty.StringValue">
      <summary>
            Returns or sets the value of the custom property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CustomPropertyCollection">
      <summary>
            A collection of CustomProperty objects that represent additional information. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.CustomPropertyCollection.Add(System.String,System.String)">
      <summary>
            Adds custom property information.
            </summary>
      <param name="name">The name of the custom property.</param>
      <param name="value">The value of the custom property.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CustomPropertyCollection.Item(System.Int32)">
      <summary>
            Gets the custom property by the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>The custom property</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CustomPropertyCollection.Item(System.String)">
      <summary>
            Gets the custom property by the property name.
            </summary>
      <param name="name">The property name.</param>
      <returns>The custom property</returns>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.FileFormatType">
      <summary>
            Enumerates spreadsheet file format types
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FileFormatType.Default">
      <summary>
            Represents an Excel2003 file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FileFormatType.Excel2007Xlsx">
      <summary>
            Represents an Excel2007 xlsx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FileFormatType.SpreadsheetML">
      <summary>
            Represents a SpreadSheetML file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.FormatConditionType">
      <summary>
            Conditional format rule type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.CellValue">
      <summary>
            This conditional formatting rule compares a cell value
            to a formula calculated result, using an operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.Expression">
      <summary>
            This conditional formatting rule contains a formula to
            evaluate. When the formula result is true, the cell is
            highlighted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.ColorScale">
      <summary>
            This conditional formatting rule creates a gradated
            color scale on the cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.DataBar">
      <summary>
            This conditional formatting rule displays a gradated
            data bar in the range of cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.IconSet">
      <summary>
            This conditional formatting rule applies icons to cells
            according to their values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.Top10">
      <summary>
            This conditional formatting rule highlights cells whose
            values fall in the top N or bottom N bracket, as
            specified.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.UniqueValues">
      <summary>
            This conditional formatting rule highlights unique
            values in the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.DuplicateValues">
      <summary>
            This conditional formatting rule highlights duplicated
            values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.ContainsText">
      <summary>
            This conditional formatting rule highlights cells
            containing given text. Equivalent to using the SEARCH()
            sheet function to determine whether the cell contains
            the text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.NotContainsText">
      <summary>
            This conditional formatting rule highlights cells that
            are not blank. Equivalent of using LEN(TRIM()). This
            means that if the cell contains only characters that
            TRIM() would remove, then it is considered blank. An
            empty cell is also considered blank.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.BeginsWith">
      <summary>
            This conditional formatting rule highlights cells in the
            range that begin with the given text. Equivalent to
            using the LEFT() sheet function and comparing values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.EndsWith">
      <summary>
            This conditional formatting rule highlights cells ending
            with given text. Equivalent to using the RIGHT() sheet
            function and comparing values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.ContainsBlanks">
      <summary>
            This conditional formatting rule highlights cells that
            are completely blank. Equivalent of using LEN(TRIM()).
            This means that if the cell contains only characters
            that TRIM() would remove, then it is considered blank.
            An empty cell is also considered blank.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.NotContainsBlanks">
      <summary>
            This conditional formatting rule highlights cells that
            are not blank. Equivalent of using LEN(TRIM()). This
            means that if the cell contains only characters that
            TRIM() would remove, then it is considered blank. An
            empty cell is also considered blank.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.ContainsErrors">
      <summary>
            This conditional formatting rule highlights cells with
            formula errors. Equivalent to using ISERROR() sheet
            function to determine if there is a formula error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.NotContainsErrors">
      <summary>
            This conditional formatting rule highlights cells
            without formula errors. Equivalent to using ISERROR()
            sheet function to determine if there is a formula error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.TimePeriod">
      <summary>
            This conditional formatting rule highlights cells
            containing dates in the specified time period. The
            underlying value of the cell is evaluated, therefore the
            cell does not need to be formatted as a date to be
            evaluated. For example, with a cell containing the
            value 38913 the conditional format shall be applied if
            the rule requires a value of 7/14/2006.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.FormatConditionType.AboveAverage">
      <summary>
            This conditional formatting rule highlights cells that
            are above or below the average for all values in the
            range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.GridDesktop">
      <summary>
            Aspose GridDesktop class
            Represents a root object to create an GridDesktop control. To use this control, simply drag it from your toolbox to a form or usercontrol. 
            </summary>
      <remarks>
            Please refer to .NET SDK document about further information about System.Windows.Forms.UserControl.
            </remarks>
      <example>
        <code>
            [C#]
            gridDesktop1.Worksheets[0].Cells[0, 0].Value = "2";
            gridDesktop1.Worksheets[0].Cells[1, 0].Value = "3";
            gridDesktop1.Worksheets[0].Cells[2, 1].Value = "=a1*a2";
            gridDesktop1.RunAllFormulas();
            gridDesktop1.Invalidate();
            
            [Visual Basic]
            gridDesktop1.Worksheets(0).Cells(0, 0).Value = "2"
            gridDesktop1.Worksheets(0).Cells(1, 0).Value = "3"
            gridDesktop1.Worksheets(0).Cells(2, 1).Value = "=a1*a2"
            gridDesktop1.RunAllFormulas()
            gridDesktop1.Invalidate()
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.GetVersion">
      <summary>
            Get the release version.
            </summary>
      <returns>The release version.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.#ctor">
      <summary>
            Aspose GridDesktop class
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.Clear">
      <summary>
            Clears GridDesktop control.
            </summary>
      <example>
        <code>
            [C#]
            gridDesktop1.Clear();
            gridDesktop1.Worksheets.Add();
            gridDesktop1.Worksheets.Insert(0);
            
            [Visual Basic]
            gridDesktop1.Clear()
            gridDesktop1.Worksheets.Add()
            gridDesktop1.Worksheets.Insert(0)
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.GetActiveWorksheet">
      <summary>
            Gets current active worksheet.
            </summary>
      <returns>Worksheet object.</returns>
      <example>
        <code>
            [C#]
            Worksheet worksheet = gridDesktop1.GetActiveWorksheet();
            
            [Visual Basic]
            Dim worksheet As Worksheet =  gridDesktop1.GetActiveWorksheet()
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.RefreshControl">
      <summary>
            Refresh the GridDesktop control.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.ShowStyleDialog">
      <summary>
            Opens a style dialog,to set cells style,font,colors etc.
            </summary>
      <example>
        <code>
            [C#]
            gridDesktop1.ShowStyleDialog();
            
            [Visual Basic]
            gridDesktop1.ShowStyleDialog()
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.ImportExcelFile(System.IO.Stream)">
      <summary>
            Imports from an excel file stream, including disk file stream or memory stream. 
            </summary>
      <example>
        <code>
            [C#]
            private void button1_Click(object sender, System.EventArgs e)
            {
            	FileStream fs = new FileStream("d:\\bookx.xls", FileMode.Open);
            	try
            	{
            		gridDesktop1.ImportExcelFile(fs);
            	}
            	catch(Exception ex)
            	{
            	}
            	finally
            	{
            		fs.Close();
            	}
            }
            
            [Visual Basic]
            Private Sub menuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles menuItem6.Click
            	Dim fs As FileStream =  New FileStream("d:\bookx.xls",FileMode.Open)
            	Try
            		gridDesktop1.ImportExcelFile(fs)
            	Catch ex As Exception
            		Throw ex
            	Finally
            		fs.Close()
            	End Try
            End Sub
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.ImportExcelFile(System.IO.Stream,System.Boolean)">
      <summary>
            Imports from an excel file stream, including disk file stream or memory stream. 
            </summary>
      <param name="stream">stream object.</param>
      <param name="runFormulas">if true, this method will invoke RunAllFormulas method.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.ImportExcelFile(System.String)">
      <summary>
            Imports from an excel file. 
            </summary>
      <example>
        <code>
            [C#]
            private void button1_Click(object sender, System.EventArgs e)
            {
            	gridDesktop1.ImportExcelFile("FinancialPlan.xls");
            }
            
            [Visual Basic]
            Private Sub menuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles menuItem6.Click
            	gridDesktop1.ImportExcelFile("FinancialPlan.xls")
            End Sub
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.ImportExcelFile(System.String,System.Boolean)">
      <summary>
            Imports from an excel file. 
            </summary>
      <param name="fileName">excel file name.</param>
      <param name="runFormulas">if true, this method will invoke RunAllFormulas method.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.ImportExcelFile(System.String,System.Int32)">
      <summary>
            Imports a worksheet from an excel file.
            </summary>
      <param name="fileName">excel file name.</param>
      <param name="sheetIndex">index of sheet to be imported.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.ExportExcelFile(System.IO.Stream)">
      <summary>
            Exports to a excel file stream, including disk IO stream or memory stream. 
            </summary>
      <example>
        <code>
            [C#]
            private void button1_Click(object sender, System.EventArgs e)
            {
            	FileStream fs = new FileStream("d:\\bookx.xls", FileMode.OpenOrCreate);
            	try
            	{
            		gridDesktop1.Worksheets.ExportExcelFile(fs);
            	}
            	catch(Exception ex)
            	{
            	}
            	finally
            	{
            		fs.Close();
            	}
            }
            
            [Visual Basic]
            Private Sub menuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles menuItem6.Click
            	Dim fs As FileStream =  New FileStream("d:\bookx.xls", FileMode.OpenOrCreate)
            	Try
            		gridDesktop1.Worksheets.ExportExcelFile(fs)
            	Catch ex As Exception
            		Throw ex
            	Finally
            		fs.Close()
            	End Try
            End Sub
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.ExportExcelFile(System.IO.Stream,Aspose.Cells.GridDesktop.FileFormatType)">
      <summary>
            Exports to a excel file stream, including disk IO stream or memory stream. 
            </summary>
      <param name="stream">Stream where to save the spreadsheet.</param>
      <param name="fileFormatType">Excel file format type.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.ExportExcelFile(System.String)">
      <summary>
            Exports to an excel file. 
            </summary>
      <example>
        <code>
            [C#]
            private void button1_Click(object sender, System.EventArgs e)
            {
            	gridDesktop1.Worksheets.ExportExcelFile("savedemo.xls");
            }
            
            [Visual Basic]
            Private Sub menuItem1_Click(ByVal sender As System.Object, ByVal e As System.EventArgs) Handles menuItem7.Click
            	gridDesktop1.Worksheets.ExportExcelFile("savedemo.xls")
            End Sub
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.ExportExcelFile(System.String,Aspose.Cells.GridDesktop.FileFormatType)">
      <summary>
            Exports to a excel file. 
            </summary>
      <param name="fileName">The name of created file.</param>
      <param name="fileFormatType">Excel file format type.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.StartFormatPainter(System.Boolean)">
      <summary>
            Notifies GridDesktop to start FormatPainter.
            </summary>
      <param name="formatOnce">
            if formatOnce is true,FormatPainter can use once,
            if formatOnce is false,FormatPainter can use multi-times,until invokes EndFormatPainter().
            </param>
      <example>
        <code>
            [C#]
            gridDesktop1.StartFormatPainter(true);
            
            [Visual Basic]
            gridDesktop1.StartFormatPainter(True)
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.EndFormatPainter">
      <summary>
            Notifies GridDesktop to end FormatPainter.
            </summary>
      <example>
        <code>
            [C#]
            gridDesktop1.StartFormatPainter(false);
            ...
            //User Interface Operation
            ...
            gridDesktop1.EndFormatPainter();
            
            [Visual Basic]
            gridDesktop1.StartFormatPainter(False)
            ...
            'User Interface Operation
            ...
            gridDesktop1.EndFormatPainter()
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.OpenFindReplaceDialog(System.Boolean)">
      <summary>
            Opens the FindReplace dialog to find or replace cells.
            </summary>
      <param name="findMode">If true, open the Find dialog; else open the Replace dialog.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.Copy">
      <summary>
            Copies focused cell content to clipboard.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.Cut">
      <summary>
            Cuts focused cell content to clipboard.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.Paste">
      <summary>
            Pastes clipboard content to focused cell.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.RunAllFormulas">
      <summary>
            Runs all the cells's formula.
            </summary>
      <example>
        <code>
            [C#]
            gridDesktop1.Worksheets[0].Cells[0, 0].Value = "2";
            gridDesktop1.Worksheets[0].Cells[1, 0].Value = "3";
            gridDesktop1.Worksheets[0].Cells[2, 1].Value = "=a1*a2";
            gridDesktop1.RunAllFormulas();
            gridDesktop1.Invalidate();
            
            [Visual Basic]
            gridDesktop1.Worksheets(0).Cells(0, 0).Value = "2"
            gridDesktop1.Worksheets(0).Cells(1, 0).Value = "3"
            gridDesktop1.Worksheets(0).Cells(2, 1).Value = "=a1*a2"
            gridDesktop1.RunAllFormulas()
            gridDesktop1.Invalidate()
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.Dispose(System.Boolean)">
      <summary>
            Clean up any resources being used.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.SetAllScrollBarsVisible">
      <summary>
            Sets all scrollbars visible.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.DoSplit">
      <summary>
            Sets Split view.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridDesktop.UnDoSplit">
      <summary>
            Unset Split view.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.DefaultCellFont">
      <summary>
            Gets or sets the default font of the cell 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.DefaultCellFontColor">
      <summary>
            Gets or sets the default font color of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.CommentDisplayingFont">
      <summary>
            Gets or sets the default displaying font of comment text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.SheetNameFont">
      <summary>
            Gets or sets the default displaying font of sheet bar.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.ActiveSheetNameFont">
      <summary>
            Gets or sets the active sheet displaying font of sheet bar.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.ColumnHeaderVisible">
      <summary>
            Gets or sets a value indicating whether column header is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.RowHeaderVisible">
      <summary>
            Gets or sets a value indicating whether row header is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.R1C1">
      <summary>
            Gets or sets a value indicating whether the control using R1C1 reference style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.ShowContextMenu">
      <summary>
            Gets or sets a value indicating whether the control can show context menu.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.AlwasysRecalculateAllFormulas">
      <summary>
            Gets or sets a value indicating whether we need to run all formulas,as when we run all formulas,
            when update one cell value,and it affect others ,and others affect others ,more and more,
            cause the whole cells need recalculate ,just like the Butterfly Effect,it needs lots of stack opertation ,
            it will get very low performance,
            like in CELLSNET-41921,this issue contains the very file that can show this scenario
            we'd better just run all formulas,
            ,as when  run all formulas we may have some optimization.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.EnableCopyWithLockedOption">
      <summary>
            Gets or sets a value indicating whether the copy operation will copy the style's CellLocked attribute value of a cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.EnableCopyWithExtension">
      <summary>
            Gets or sets a value indicating whether the copy operation will extend the number of rows or columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.BorderStyle">
      <summary>
            Indicates the border style for the control.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.SheetsBarVisible">
      <summary>
            Gets or sets a value indicating whether sheet bar is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.ActiveSheetIndex">
      <summary>
            Gets or sets the selected sheet index.
            </summary>
      <example>
        <code>
            [C#]
            gridDesktop1.ActiveSheetIndex = 0;
            
            [Visual Basic]
            gridDesktop1.ActiveSheetIndex = 0
            
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.Names">
      <summary>
            Gets the collection of all the Name objects in the spreadsheet.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.SelectedSheetIndexChanged">
      <summary>
            Occurs when the SelectedSheetIndex property is changed.
            </summary>
      <example>
        <code>
            [C#]
            private void gridDesktop1_SelectedSheetIndexChanged(object sender, System.EventArgs e)
            {
            	MessageBox.Show("selected index changed!");
            }
            
            [Visual Basic]
            Private  Sub gridDesktop1_SelectedSheetIndexChanged(ByVal sender As Object, ByVal e As System.EventArgs) Handles gridDesktop1.SelectedSheetIndexChanged
            	MessageBox.Show("selected index changed!")
            End Sub
            
            </code>
      </example>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellDataChanged">
      <summary>
            Occurs when the grid cell data property is changed.
            </summary>
      <example>
        <code>
            [C#]
            private void gridDesktop1_CellDataChanged(object sender, Aspose.Cells.GridDesktop.Event.CellEventArgs e)
            {
            	MessageBox.Show("Cell Data changed!");
            }
            
            [Visual Basic]
            Private  Sub gridDesktop1_CellDataChanged(ByVal sender As Object, ByVal e As Aspose.Cells.GridDesktop.Event.CellEventArgs) Handles gridDesktop1.CellDataChanged
            	MessageBox.Show("Cell Data changed!")
            End Sub
            
            </code>
      </example>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.BeforeLoadFile">
      <summary>
            Occurs when the grid workbook state is changed.
            </summary>
      <example>
        <code>
            [C#]
            private void gridDesktop1_BeforeLoadFile(object sender, Aspose.Cells.GridDesktop.Event.WorkBookEvents e)
            {
            	MessageBox.Show("before load file!");
            }
            
            [Visual Basic]
            Private  Sub gridDesktop1_BeforeLoadFile(ByVal sender As Object, ByVal e As Aspose.Cells.GridDesktop.Event.WorkBookEvents) Handles gridDesktop1.CellDataChanged
            	MessageBox.Show("before load file!")
            End Sub
            
            </code>
      </example>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.FinishLoadFile">
      <summary>
            Occurs when the grid workbook state is changed.
            </summary>
      <example>
        <code>
            [C#]
            private void gridDesktop1_FinishLoadFile(object sender, Aspose.Cells.GridDesktop.WorkBookEvents e)
            {
            	MessageBox.Show("finish load file!");
            }
            
            [Visual Basic]
            Private  Sub gridDesktop1_FinishLoadFile(ByVal sender As Object, ByVal e As Aspose.Cells.GridDesktop.WorkBookEvents) Handles gridDesktop1.CellDataChanged
            	MessageBox.Show("finish load file!")
            End Sub
            
            </code>
      </example>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.BeforeCalculate">
      <summary>
            Occurs when the grid workbook state is changed.
            </summary>
      <example>
        <code>
            [C#]
            private void gridDesktop1_BeforeCalculate(object sender, Aspose.Cells.GridDesktop.Event.WorkBookEvents e)
            {
            	MessageBox.Show("before calculate formula!");
            }
            
            [Visual Basic]
            Private  Sub gridDesktop1_BeforeCalculate(ByVal sender As Object, ByVal e As Aspose.Cells.GridDesktop.Event.WorkBookEvents) Handles gridDesktop1.CellDataChanged
            	MessageBox.Show("before calculate formula!")
            End Sub
            
            </code>
      </example>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.FinishCalculate">
      <summary>
            Occurs when the grid workbook state is changed.
            </summary>
      <example>
        <code>
            [C#]
            private void gridDesktop1_FinishCalculate(object sender, Aspose.Cells.GridDesktop.Event.WorkBookEvents e)
            {
            	MessageBox.Show("finish calculate formula!");
            }
            
            [Visual Basic]
            Private  Sub gridDesktop1_FinishCalculate(ByVal sender As Object, ByVal e As Aspose.Cells.GridDesktop.Event.WorkBookEvents) Handles gridDesktop1.CellDataChanged
            	MessageBox.Show("finish calculate formula!")
            End Sub
            
            </code>
      </example>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.FocusedCellChanged">
      <summary>
            Occurs when the focused cell is changed.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellClick">
      <summary>
            Occurs when the gridcell is clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.ShapeClick">
      <summary>
            Occurs when the shape is clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellDoubleClick">
      <summary>
            Occurs when the gridcell is double clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellKeyPressed">
      <summary>
            Occurs when a key is pressed while a cell has focus.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellValidationFailed">
      <summary>
            Occurs when a grid cell validates failed.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellComboBoxCopy">
      <summary>
            Occurs when a grid cell ComboBox is being copied.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.RowHeaderClick">
      <summary>
            Occurs when the row header clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.RowHeaderDoubleClick">
      <summary>
            Occurs when the row header double clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.ColumnHeaderClick">
      <summary>
            Occurs when the column header clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.ColumnHeaderDoubleClick">
      <summary>
            Occurs when the column header double clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.AfterInsertRows">
      <summary>
            Occurs after new row is inserted.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.AfterInsertColumns">
      <summary>
            Occurs after new column is inserted.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.AfterDeleteRows">
      <summary>
            Occurs after   row is deleted.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.AfterDeleteColumns">
      <summary>
            Occurs after   column is deleted.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellButtonClick">
      <summary>
            Occurs when the cell button clicked.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellCheckedChanged">
      <summary>
            Occurs when the cell checkbox Checked property is changed.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellSelectedIndexChanged">
      <summary>
            Occurs when the cell combobox SelectedIndex property has changed.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CommentDataChanged">
      <summary>
            Occurs when the comment data has changed. 
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.SelectedCellRangeChanged">
      <summary>
            Occurs when the selected cellrange is changed.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellFormatChanged">
      <summary>
            Occurs when the cell format is changed via Format Cells dialog box.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.RowColumnHiddenChanged">
      <summary>
            Occurs when the row/column hide status changed.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.CellTextBoxChanging">
      <summary>
            Occurs when typing characters in a grid cell.
            </summary>
    </member>
    <member name="E:Aspose.Cells.GridDesktop.GridDesktop.RowFilteredEvent">
      <summary>
            Occurs after row filter item selected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.Worksheets">
      <summary>
            Gets the Worksheets.
            </summary>
      <example>
        <code>
            [C#]
            gridDesktop1.Worksheets.Add();
            gridDesktop1.Worksheets.Insert(0);
            
            [Visual Basic]
            gridDesktop1.Worksheets.Add()
            gridDesktop1.Worksheets.Insert(0)
            
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.RecalculateFormulas">
      <summary>
            Gets or sets a value indicating whether to recalculate 
            all the cells' formula when a cell's value changed.
            The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.ShowStatus">
      <summary>
            Gets or sets a value indicating whether to show the calculate status
            The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.EnableClipboardCopyPaste">
      <summary>
            Indicates whether to copy/paste based on clipboard,so that it can copy/paste with MS-EXCEL.
            It only copys/pastes cell value ,It does not copy any other setting of the cell like format,border style and so on
            The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.UndoManager">
      <summary>
            Gets the UndoManager instance.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.EnableUndo">
      <summary>
            Gets or sets a value indicating whether the Undo function is enabled. The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.PasteType">
      <summary>
            Indicates which paste type when do paste action，only available when EnableClipboardCopyPaste is false .
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.ContextMenuManager">
      <summary>
            Gets the ContextMenuManager instance.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.IsVerticalScrollBarVisible">
      <summary>
            Sets visible statue for Vertical ScrollBar.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.IsHorizontalScrollBarVisible">
      <summary>
            Sets visible statue for Horizontal ScrollBar.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridDesktop.SheetTabWidth">
      <summary>
            Sets /Gets width of Sheet Tab.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.RowFilterSettings">
      <summary>
            Summary description for RowFilter.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.RowFilterSettings.FilterRows(System.Int32,System.String)">
      <summary>
            Filters rows using criteria string.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.RowFilterSettings.ClearFilter">
      <summary>
            Clears all filter settings and display all rows.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.RowFilterSettings.Compare(System.Object,System.Object)">
      <summary>
            internal uses only.
            </summary>
      <param name="a">
      </param>
      <param name="b">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowFilterSettings.EnableAutoFilter">
      <summary>
            Enables auto filtering. The HeaderRow will display dropdown buttons to let user select the column's value to be filtered.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowFilterSettings.StartRow">
      <summary>
            The start row number of the filter range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowFilterSettings.EndRow">
      <summary>
            The end row number of the filter range. If this value is set to -1, the last row number of the sheet is used.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowFilterSettings.StartCol">
      <summary>
            The start col number of the filter range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowFilterSettings.EndCol">
      <summary>
            The end col number of the filter range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowFilterSettings.HeaderRow">
      <summary>
            The header row number which will display filter dropdown buttons.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowFilterSettings.Criteria">
      <summary>
            The filter criteria string. 
            </summary>
      <remarks>
            The filter criteria string.
            below are the criteria string examples:
            CELL0 = 12.3
            CELL1 = "ABC"
            AND(CELL0 = 123, CELL1 = "ABC")
            OR(CELL0 = 123, CELL1 = "ABC")
            CELL0 = B1 + 4
            </remarks>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.SortOrientation">
      <summary>
            Represents sorting orientation
            </summary>
      <remarks>
            SortOrientation.SortTopToBottom represents sorting datas from top to bottom and exchanging data row by row.
            SortOrientation.SortLeftToRight represents sorting datas from left to right and exchanging data column by column.
            </remarks>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.SortOrientation.SortTopToBottom">
      <summary>
            Represents sorting datas from top to bottom and exchanging data row by row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.SortOrientation.SortLeftToRight">
      <summary>
            Represents sorting datas from left to right and exchanging data column by column.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.SortOrder">
      <summary>
            Represents what order the data sort by.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.SortOrder.Ascending">
      <summary>
            Sorts by ascending
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.SortOrder.Descending">
      <summary>
            Sorts by descending
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.SortRange">
      <summary>
            Indicates a range of a Worksheet and provide method to sort the range datas by row or column.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.SortRange.#ctor(Aspose.Cells.GridDesktop.Worksheet,System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Cells.GridDesktop.SortOrientation,System.Boolean)">
      <summary>
            Intializes a new instance of the <see cref="T:Aspose.Cells.GridDesktop.SortRange" /> class by specifing a worksheet range and sort orientation.
            </summary>
      <param name="worksheet">The Worksheet that contains the range.</param>
      <param name="startRow">The start row of the range.</param>
      <param name="startColumn">The start column of the range.</param>
      <param name="rows">The number of the rows.</param>
      <param name="columns">The number of the columns</param>
      <param name="orientation">The sort orientation: top to bottom or left to right.</param>
      <param name="isCaseSensitive">Determines whether the sort datas is case sensitive if datas are string</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.SortRange.Sort(System.Int32)">
      <summary>
            Sorts the datas ascend in the range by index.
            </summary>
      <param name="index">The column(or row) index that specifis the sort column(or row).
            If sort orientation is top to bottom, the index represents column index.
            If sort orientation is left to right, the index represents row index.
            </param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.SortRange.Sort(System.Int32,Aspose.Cells.GridDesktop.SortOrder)">
      <summary>
            Sorts the datas in the range by index.
            </summary>
      <param name="index">The column(or row) index that specifis the sort column(or row).
            If sort orientation is top to bottom, the index represents column index.
            If sort orientation is left to right, the index represents row index.
            </param>
      <param name="order">The sort order</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.SortRange.Sort(System.Int32[])">
      <summary>
             Sorts the datas ascend in the range by some field that are specifed by array indexes.
            </summary>
      <param name="indexes">The index array that specifies the data sorted by.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.SortRange.Sort(System.Int32[],Aspose.Cells.GridDesktop.SortOrder[])">
      <summary>
            Sorts the datas in the range by some field that are specifed by array indexes.
            </summary>
      <param name="indexes">The index array that specifies the data sorted by.</param>
      <param name="orders">The sort order array</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellEventArgs">
      <summary>
            Provides data for grid cell events. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellEventArgs.Cell">
      <summary>
            Represents a grid cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellEventArgs.Argument">
      <summary>
            The argument of the event. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellEventHandler">
      <summary>
            Represents the method that intend to handle cell events. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellRangeEventArgs">
      <summary>
            Provides data for grid cellrange events. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellRangeEventArgs.CellRange">
      <summary>
            Represents a cellrange object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellRangeEventHandler">
      <summary>
            Represents the method that intend to handle cellrange events. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.WorksheetEvents">
      <summary>
            Worksheet Events category.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.RowHeaderClick">
      <summary>
            Row header is clicked.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.RowHeaderDoubleClick">
      <summary>
            Row header is double clicked.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.ColumnHeaderClick">
      <summary>
            Column header is clicked.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.ColumnHeaderDoubleClick">
      <summary>
            Column header is double clicked.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.ColumnsHide">
      <summary>
            Columns are hidden.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.ColumnsUnHide">
      <summary>
            Columns are unhidden.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.RowsHide">
      <summary>
            Rows are hidden.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.RowsUnHide">
      <summary>
            Rows are unhidden.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.RowInserted">
      <summary>
            new row inserted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.ColumnInserted">
      <summary>
            new column inserted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.RowFiltered">
      <summary>
            row filtered.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.RowDeleted">
      <summary>
             row deleted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorksheetEvents.ColumnDeleted">
      <summary>
            column deleted.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.WorkBookEvents">
      <summary>
            WorkBook Events category.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorkBookEvents.BeforeLoad">
      <summary>
            before load workbook.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorkBookEvents.LoadFinish">
      <summary>
            finish load workbook.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorkBookEvents.BeforeCalculate">
      <summary>
            before calculate formula.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.WorkBookEvents.CalculateFinish">
      <summary>
            finish calculate formula.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.WorksheetEventArgs">
      <summary>
            Provides data for worksheet events.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.WorksheetEventArgs.Index">
      <summary>
            Gets row or column index of worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.WorksheetEventArgs.IndexArray">
      <summary>
            Gets row or column index array of worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.WorksheetEventArgs.SheetEvents">
      <summary>
            Gets event category.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.WorksheetEventHandler">
      <summary>
            Represents the method that intend to handle worksheet events. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.WorkbookEventHandler">
      <summary>
            Represents the method that intend to handle workbook events. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellControlEventArgs">
      <summary>
            Provides data for cell control events.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellControlEventArgs.Row">
      <summary>
            Gets row index of worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellControlEventArgs.Column">
      <summary>
            Gets column index of worksheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellControlEventHandler">
      <summary>
            Represents the method that intend to handle cell control events. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellComboBoxEventArgs">
      <summary>
            Provides data for cell ComboBox events.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellComboBoxEventArgs.NewValue">
      <summary>
            Gets the new value to be set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellComboBoxEventArgs.Handled">
      <summary>
            Gets or sets the value indicating whether the event should be handled.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellComboBoxEventHandler">
      <summary>
            Represents the method that intend to handle cell ComboBox events. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellKeyEventArgs">
      <summary>
            Provides data for grid cell key events. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellKeyEventArgs.Row">
      <summary>
            Gets row index of worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellKeyEventArgs.Column">
      <summary>
            Gets column index of worksheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellKeyEventHandler">
      <summary>
            Represents the method that intend to handle cell key events. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CommentEventArgs">
      <summary>
            Provides data for comment events.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CommentEventArgs.Row">
      <summary>
            Gets row index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CommentEventArgs.Column">
      <summary>
            Gets column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CommentEventArgs.OldText">
      <summary>
            Gets old text data of comment
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CommentEventArgs.NewText">
      <summary>
            Gets new text data of comment
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CommentEventHandler">
      <summary>
            Represents the method that intend to handle comment events. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellValidationEventArgs">
      <summary>
            Provides data for grid cell validation events.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellValidationEventArgs.Cell">
      <summary>
            Represents a grid cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellValidationEventArgs.NewValue">
      <summary>
            Gets the new value set to cell. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellValidationEventArgs.Handled">
      <summary>
            Gets or sets the value indicating whether the event should be handled.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellValidationEventHandler">
      <summary>
            Represents the method that intend to handle cell validation events. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellFormatEventArgs">
      <summary>
            Provides data for grid cell format event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellFormatEventArgs.Sources">
      <summary>
            Gets the format sources, list of CellRange.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellFormatEventArgs.Style">
      <summary>
            Gets the new style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellFormatEventArgs.Font">
      <summary>
            Gets the new font.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellFormatEventArgs.FontColor">
      <summary>
            Gets the new font color.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellFormatEventHandler">
      <summary>
            Represents the method that intend to handle cell format events. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellCopyComboBoxEventArgs">
      <summary>
            Provides data for cell copy ComboBox events.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellCopyComboBoxEventArgs.Row">
      <summary>
            Gets row index of worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellCopyComboBoxEventArgs.Column">
      <summary>
            Gets column index of worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellCopyComboBoxEventArgs.Handled">
      <summary>
            Gets or sets the value indicating whether the event should be handled.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellCopyComboBoxEventArgs.ComboBoxItems">
      <summary>
            Gets an object representing the collection of the items contained in this ComboBox.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.CellCopyComboBoxEventArgs.comboBoxValues">
      <summary>
            Gets an object representing the collection of the values contained in this ComboBox.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.CellCopyComboBoxEventHandler">
      <summary>
            Represents the method that intend to handle cell copy events. 
            </summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.ICustomColumnCaption">
      <summary>
            Interface for custom row caption.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.ICustomColumnCaption.GetCaption(System.Int32)">
      <summary>
            get the custom column caption.
            </summary>
      <param name="column">column index.</param>
      <returns>return the column caption.</returns>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.ICustomRowCaption">
      <summary>
            Interface for custom row caption.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.ICustomRowCaption.GetCaption(System.Int32)">
      <summary>
            get the custom row caption.
            </summary>
      <param name="row">Row index.</param>
      <returns>return the row caption.</returns>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.CellEventHandler">
      <summary>
            Represents the interface that intend to handle cell events.
            <para>void <b>handleCellEvent</b>(Object sender, CellEventArgs e);</para></summary>
      <param name="sender">The source grid of the event. </param>
      <param name="e">The event argument. The e.Cell is the cell who fires the event. The e.Argument contains the argument of the event.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.CellEventStringHandler">
      <summary>
            Represents the method that intend to handle cell events.
            same as CellEventHandler interface,but return string result
            <para>String <b>handleCellEvent</b>(Object sender, CellEventArgs e);</para></summary>
      <param name="sender">The source grid of the event. </param>
      <param name="e">The event argument. The e.Cell is the cell who fires the event. The e.Argument contains the argument of the event.</param>
      <returns>string value</returns>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.CustomCommandEventHandler">
      <summary>
             Represents the interface that intend to handle Custom Command events.
             <para>void <b>handleCellEvent</b>(Object sender, String command);</para></summary>
      <param name="sender">The source grid of the event. </param>
      <param name="command">The command string user send.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.DefaultEmptyStyle.#ctor(Aspose.Cells.GridDesktop.GridDesktop)">
      <summary>
            Style Constructor.
            </summary>
      <param name="gridDesktop">GridDesktop object.</param>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.DefaultEmptyStyle.Shrink">
      <summary>
            Gets or sets Shrink to fit attribute.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.DefaultEmptyStyle.Custom">
      <summary>
            Gets or sets the custom number format string.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.BorderType">
      <summary>
            Specifies the border type for a gridCell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderType.Left">
      <summary>
            GridCell has Left border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderType.Right">
      <summary>
            GridCell has Right border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderType.Top">
      <summary>
            GridCell has Top border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderType.Bottom">
      <summary>
            GridCell has Bottom border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderType.DiagonalDown">
      <summary>
            GridCell has DiagonalDown border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.BorderType.DiagonalUp">
      <summary>
            GridCell has DiagonalUp border.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridPasteType">
      <summary>
            Represents the paste special type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.All">
      <summary>
            Copies all data of the ranage.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.Default">
      <summary>
            It works as "All" behavior of MS Excel.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.AllExceptBorders">
      <summary>
            Copies all data of the ranage withoutd the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.DefaultExceptBorders">
      <summary>
             It works as "All except borders" behavior of MS Excel.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.ColumnWidths">
      <summary>
            Only copies the widths of the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.RowHeights">
      <summary>
            Only copies the heights of the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.Comments">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.Formats">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.Formulas">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.FormulasAndNumberFormats">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.Validation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.Values">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPasteType.ValuesAndNumberFormats">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.GridCell">
      <summary>
             Represents a cell object.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.ToString">
      <summary>
            Returns a string represents the current Cell object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.Copy(Aspose.Cells.GridDesktop.GridCell)">
      <summary>
            Copies data from a source cell.
            </summary>
      <param name="source">Source <see cref="T:Aspose.Cells.GridDesktop.GridCell" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.PutValue(System.DateTime)">
      <summary>
            Puts a DateTime value into the cell.
            </summary>
      <param name="param_date">Input value</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.PutValue(System.String)">
      <summary>
            Puts a String value into the cell.
            </summary>
      <param name="param_string">Input value</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.PutValue(System.Object)">
      <summary>
            Puts an object value into the cell.same as setValue(Object param_object)
            </summary>
      <param name="objectValue">input value</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.PutValue(System.Int32)">
      <summary>
            Puts a int value into the cell.
            </summary>
      <param name="param_int">Input value</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.PutValue(System.String,System.Boolean,System.Boolean)">
      <summary>
            Puts a value into the cell, if appropriate the value will be converted to other data type and cell's number format will be reset.
            </summary>
      <param name="stringValue">Input value</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
      <param name="setStyle">True: set the number format to cell's style when converting to other data type</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.PutValue(System.String,System.Boolean)">
      <summary>
            Puts a string value into the cell and converts the value to other data type if appropriate.
            </summary>
      <param name="stringValue">Input value</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.PutValue(System.Boolean)">
      <summary>
            Puts a boolean value into the cell.
            </summary>
      <param name="param_boolean">Input value</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.PutValue(System.Double)">
      <summary>
            Puts a double value into the cell.
            </summary>
      <param name="param_double">Input value</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.IsFormula">
      <summary>
            Represents if the specified cell contains formula.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.GetWorksheet">
      <summary>
            Gets the parent worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.SetFormula(System.String,System.Object)">
      <summary>
            Set the formula and the value of the formula.
            </summary>
      <param name="formula">The formula.</param>
      <param name="value">The value of the formula.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.CopyStyle(Aspose.Cells.GridDesktop.Style)">
      <summary>
             copy the style and set the style for the cell
            </summary>
      <param name="style">The source style.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.SetCustom(System.String)">
      <summary>
            sets the custom format, null or empty string means no custom format.
            </summary>
      <param name="custom">the custom string presentation</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.PutValueAndSetFormatByValue(System.String)">
      <summary>
            Sets the cell's value with a string value and set cell format by this value.
            </summary>
      <param name="stringValue">Input value.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.SetNumberType(System.Int32)">
      <summary>
            set the display format of numbers and dates
            </summary>
      <param name="numbertype">the value of ther numbertype,see GridTableItemStyle.NumberType</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.IsErrorValue">
      <summary>
            Checks if a formula can properly evaluate a result.
            </summary>
      <remarks>Only applies to formula cell.</remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.ContainsExternalLink">
      <summary>
            Indicates wether this cell contains an external link.
            Only applies when the cell is a formula cell.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.GetWidthOfValue">
      <summary>
            Gets the width of the value in unit of pixels.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.SetCellValue(System.Object)">
      <summary>
            If the value is a formula,this method set cell's value as FormulaType,
            </summary>
      <param name="value">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.GetStyle">
      <summary>
            Gets cell style.
            When change the style,you should invoke "SetStyle" method,
            to set style to cell.
            </summary>
      <returns>return copy of cell style.</returns>
      <example>
        <code>
            [C#]
            Style style = sheet.GetCell(0, 0).GetStyle();
            style.CellLocked = true;
            style.VAlignment = VerticalAlignmentType.Top;
            ...
            sheet.GetCell(0, 0).SetStyle(style);
            
            [Visual Basic]
            Dim style As Style =  sheet.GetCell(0,0).GetStyle() 
            style.CellLocked = True
            style.VAlignment = VerticalAlignmentType.Top
            ...
            sheet.GetCell(0, 0).SetStyle(style)
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.SetStyle(Aspose.Cells.GridDesktop.Style)">
      <summary>
            Sets style to cell.
            To improve performance,implement "SetStyle" method,
            not implement "Style" property.
            </summary>
      <param name="style">style to be set.</param>
      <example>
        <code>
            [C#]
            Style style = sheet.GetCell(0, 0).GetStyle();
            style.CellLocked = true;
            style.VAlignment = VerticalAlignmentType.Top;
            ...
            sheet.GetCell(0, 0).SetStyle(style);
            
            [Visual Basic]
            Dim style As Style =  sheet.GetCell(0,0).GetStyle() 
            style.CellLocked = True
            style.VAlignment = VerticalAlignmentType.Top
            ...
            sheet.GetCell(0, 0).SetStyle(style)
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.SetFont(System.Drawing.Font)">
      <summary>
            Sets font to cell.
            To improve performance,implement "SetFont" method,
            not implement "Font" property.
            </summary>
      <param name="font">font to be set.</param>
      <example>
        <code>
            [C#]
            GridCell cell = gridDesktop1.GetActiveWorksheet().Cells[0, 0];
            Font font = new Font("Courier New", 8, FontStyle.Italic);
            cell.SetFont(font);
            Color color = cell.GetFontColor();
            color = Color.Black;
            cell.SetFontColor(color);
            
            [Visual Basic]
            Dim cell As GridCell =  gridDesktop1.GetActiveWorksheet().Cells(0, 0) 
            Dim font As Font =  New Font("Courier New",8,FontStyle.Italic) 
            cell.SetFont(font)
            Dim color As Color =  cell.GetFontColor() 
            color = Color.Black
            cell.SetFontColor(color)
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.GetFont">
      <summary>
            Gets cell font.
            When change the font, you should invoke "SetFont" method,
            to set font to cell.
            </summary>
      <returns>return copy of cell font.</returns>
      <example>
        <code>
            [C#]
            GridCell cell = gridDesktop1.GetActiveWorksheet().Cells[0, 0];
            Font font = new Font("Courier New", 8, FontStyle.Italic);
            cell.SetFont(font);
            Color color = cell.GetFontColor();
            color = Color.Black;
            cell.SetFontColor(color);
            
            [Visual Basic]
            Dim cell As GridCell =  gridDesktop1.GetActiveWorksheet().Cells(0, 0) 
            Dim font As Font =  New Font("Courier New",8,FontStyle.Italic) 
            cell.SetFont(font)
            Dim color As Color =  cell.GetFontColor() 
            color = Color.Black
            cell.SetFontColor(color)
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.SetFontColor(System.Drawing.Color)">
      <summary>
            Sets font color to cell.
            To improve performance,implement "SetFontColor" method,
            not implement "FontColor" property.
            </summary>
      <param name="color">font color to be set.</param>
      <example>
        <code>
            [C#]
            GridCell cell = gridDesktop1.GetActiveWorksheet().Cells[0, 0];
            Font font = new Font("Courier New", 8, FontStyle.Italic);
            cell.SetFont(font);
            Color color = cell.GetFontColor();
            color = Color.Black;
            cell.SetFontColor(color);
            
            [Visual Basic]
            Dim cell As GridCell =  gridDesktop1.GetActiveWorksheet().Cells(0, 0) 
            Dim font As Font =  New Font("Courier New",8,FontStyle.Italic) 
            cell.SetFont(font)
            Dim color As Color =  cell.GetFontColor() 
            color = Color.Black
            cell.SetFontColor(color)
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.GridCell.GetFontColor">
      <summary>
            Gets cell font color.
            When change the color,you should invoke "SetFontColor" method,
            to set font color to cell.
            </summary>
      <returns>return cell font color.</returns>
      <example>
        <code>
            [C#]
            GridCell cell = gridDesktop1.GetActiveWorksheet().Cells[0, 0];
            Font font = new Font("Courier New", 8, FontStyle.Italic);
            cell.SetFont(font);
            Color color = cell.GetFontColor();
            color = Color.Black;
            cell.SetFontColor(color);
            
            [Visual Basic]
            Dim cell As GridCell =  gridDesktop1.GetActiveWorksheet().Cells(0, 0) 
            Dim font As Font =  New Font("Courier New",8,FontStyle.Italic) 
            cell.SetFont(font)
            Dim color As Color =  cell.GetFontColor() 
            color = Color.Black
            cell.SetFontColor(color)
            
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.Name">
      <summary>
            Gets the name of the cell.
            For example: A1, F102.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.Value">
      <summary>
            Gets the value contained in this cell.
            </summary>
      <remarks>Possible type:
            <p>null,</p><p>Boolean,</p><p>DateTime,</p><p>Double,</p><p>Integer</p><p>String.</p></remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.Type">
      <summary>
            return the cell value type ,the meaning can see GridCellValueType.java
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.Formula">
      <summary>
             Gets or sets a formula of the <see cref="T:Aspose.Cells.Cell" />.
             </summary>
      <remarks>A formula string always begins with an equal sign (=).
            And please always use comma(,) as parameters delimeter, such as "=SUM(A1, E1, H2)".<p></p>
            User can set any formula in Workbook designer file. Aspose.Cells will keep all the formulas.
            If user use this property to set a formula to a cell, major part of Workbook built-in functions
            is supported. And more is coming. If you have any special need for Workbook built-in functions,
            please let us know.
            </remarks>
      <example>
        <code>
             [C#]
            		cell.Formula = "=SUM(A1:C3) + E6*2";
            	[Visual Basic]
            		cell.Formula = "=SUM(A1:C3) + E6*2"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.StringValue">
      <summary>
            Gets the string value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.Style">
      <summary>
            Gets the copy of cell style. set the style for the cell.
            </summary>
      <returns>Style object.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.DateValue">
      <summary>
            Gets the DateTime value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.Worksheet">
      <summary>
            Gets worksheet object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.Row">
      <summary>
            Gets row number (zero based) of the cell.
            </summary>
      <value>Cell row number</value>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.Column">
      <summary>
            Gets column number (zero based) of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.DisplayStringValue">
      <summary>
            Gets the formatted string value of this cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.IntValue">
      <summary>
            Gets the integer value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.DoubleValue">
      <summary>
            Gets the double value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.FloatValue">
      <summary>
            Gets the float value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.BoolValue">
      <summary>
            Gets the boolean value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.IsStyleSet">
      <summary>
            Indicates if the cell's style is set. If return false, it means this cell has a default cell format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.HtmlString">
      <summary>
            Gets and sets the html string which contains data and some formattings in this cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.GridCell.Protected">
      <summary>
            Indicates if the cell is protected.
            If the value is "true", user can not modify the cell through the user interface.
            This attribute has nothing to do with the Style.CellLocked property  
            and will not be saved to file when grid data exported.
            The default value is "false".
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridCellArea">
      <summary>
             Represents an area of cells.
             </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridCellArea.StartRow">
      <summary>
            Gets or sets the start row of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridCellArea.EndRow">
      <summary>
            Gets or sets the end row of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridCellArea.StartColumn">
      <summary>
            Gets or sets the start column of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridCellArea.EndColumn">
      <summary>
            Gets or sets the end column of this area.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCellArea.Equals(System.Object)">
      <summary>
            Test if the object equals to another WebCellArea object.
            </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCellArea.GetHashCode">
      <summary>
            Get the hashcode.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridCellErrorType">
      <summary>
            Used in WebCellException. Represents the cell error type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridCellErrorType.ValidationError">
      <summary>
            The cell's validation failed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridCellErrorType.DataSourceInsertError">
      <summary>
            When insert the sheet's binding row to datasource, an error occured.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridCellErrorType.DataSourceUpdateError">
      <summary>
            When update the sheet's binding row or object's field, an error occured.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridCellErrorType.DataSourceDeleteError">
      <summary>
            When delete the sheet's binding row to datasource, an error occured.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridCellException">
      <summary>
            Represents a cell operation error.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCellException.Cell">
      <summary>
            Gets the error cell. If the Cell is null, the error is cause by an CommitNewBindRow operation, that means the DataTable rejected the new created row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCellException.ErrorType">
      <summary>
            Gets the error type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCellException.ErrorValue">
      <summary>
            Get the error value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridCells">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.Cell" /> objects.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.Merge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Merges a specified range of cells into a single cell.
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="totalRows">Number of rows(one based)</param>
      <param name="totalColumns">Number of columns(one based)</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetCell(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element or null at the specified cell row index and column index.
            </summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <returns>Return Cell object if a Cell object exists.
            Return null if the cell does not exist.
            </returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetRow(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Row" /> element or at the specified cell row index.
            </summary>
      <param name="row">Row index</param>
      <returns>
            If the row object does exist return Row object 
            </returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetColumn(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Column" /> element or at the specified cell column index.
            </summary>
      <param name="column">Column index</param>
      <returns>
            If the column object does exist return column object 
            </returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.IsRowHidden(System.Int32)">
      <summary>
            Checks whether a row at given index is hidden.
            </summary>
      <param name="rowIndex">row index</param>
      <returns>true if the row is hidden</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.IsColumnHidden(System.Int32)">
      <summary>
            Checks whether a column at given index is hidden.
            </summary>
      <param name="columnIndex">column index</param>
      <returns>true if the column is hidden.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.UnMerge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Unmerges a specified range of merged cells.
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="totalRows">Number of rows(one based)</param>
      <param name="totalColumns">Number of columns(one based)</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.HideRow(System.Int32)">
      <summary>
            Hides a row.
            </summary>
      <param name="row">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.SetRowHeight(System.Int32,System.Double)">
      <summary>
            Sets the height of the specified row.
            </summary>
      <param name="row">Row index.</param>
      <param name="height">Height of row.In unit of point It should be between 0 and 409.5.</param>
      <remarks>To hide a row, sets row height to zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.SetRowHeightPixel(System.Int32,System.Int32)">
      <summary>
            Sets row height in unit of pixels.
            </summary>
      <param name="row">Row index.</param>
      <param name="pixels">Number of pixels.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.SetRowHeightInch(System.Int32,System.Double)">
      <summary>
            Sets row height in unit of inches.
            </summary>
      <param name="row">Row index.</param>
      <param name="inches">Number of inches.It should be between 0 and 409.5/72.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetRowHeight(System.Int32)">
      <summary>
            Gets the height of a specified row.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetRowHeightPixel(System.Int32)">
      <summary>
            Gets the height of a specified row in unit of pixel.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetRowHeightInch(System.Int32)">
      <summary>
            Gets the height of a specified row in unit of inches.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.SetColumnWidth(System.Int32,System.Double)">
      <summary>
            Sets the width of the specified column.
            </summary>
      <param name="column">Column index.</param>
      <param name="width">Width of column.Column width must be between 0 and 255.</param>
      <remarks>To hide a column, sets column width to zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.SetColumnWidthPixel(System.Int32,System.Int32)">
      <summary>
            Sets column width in unit of pixels.
            </summary>
      <param name="column">Column index.</param>
      <param name="pixel">Number of pixels.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.SetColumnWidthInch(System.Int32,System.Double)">
      <summary>
            Sets column width in unit of inches.
            </summary>
      <param name="column">Column index.</param>
      <param name="inches">Number of inches.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetViewColumnWidthPixel(System.Int32)">
      <summary>
            Get the width in different view type.
            </summary>
      <param name="column">The column index.</param>
      <returns>the column width in unit of pixels</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetColumnWidth(System.Int32)">
      <summary>
            Gets the width of the specified column
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetColumnWidthPixel(System.Int32)">
      <summary>
            Gets the width of the specified column, in units of pixel.
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column in normal view.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GetColumnWidthInch(System.Int32)">
      <summary>
            Gets the width of the specified column, in units of inches.
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.UnhideRow(System.Int32)">
      <summary>
            Unhides a row.
            </summary>
      <param name="row">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.HideColumn(System.Int32)">
      <summary>
            Hides a column.
            </summary>
      <param name="column">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.UnhideColumn(System.Int32,System.Double)">
      <summary>
            Unhides a column
            </summary>
      <param name="column">Column index.</param>
      <param name="width">Column width..Column width must be between 0 and 255</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.CopyColumn(Aspose.Cells.GridDesktop.Data.GridCells,System.Int32,System.Int32)">
      <summary>
            Copies data and formattings of a whole column.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceColumnIndex">Source column index.</param>
      <param name="destinationColumnIndex">Destination column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.CopyColumns(Aspose.Cells.GridDesktop.Data.GridCells,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies data and formattings of a whole column.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceColumnIndex">Source column index.</param>
      <param name="destinationColumnIndex">Destination column index.</param>
      <param name="columnNumber">The copied column number.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.CopyRow(Aspose.Cells.GridDesktop.Data.GridCells,System.Int32,System.Int32)">
      <summary>
            Copies data and formattings of a whole row.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceRowIndex">Source row index.</param>
      <param name="destinationRowIndex">Destination row index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.CopyRows(Aspose.Cells.GridDesktop.Data.GridCells,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies data and formattings of some whole rows.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formattings to copy.</param>
      <param name="sourceRowIndex">Source row index.</param>
      <param name="destinationRowIndex">Destination row index.</param>
      <param name="rowNumber">The copied row number.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.UngroupColumns(System.Int32,System.Int32)">
      <summary>
            Ungroups columns.
            </summary>
      <param name="firstIndex">The first column index to be ungrouped.</param>
      <param name="lastIndex">The last column index to be ungrouped.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GroupColumns(System.Int32,System.Int32)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstIndex">The first column index to be grouped.</param>
      <param name="lastIndex">The last column index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GroupColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstIndex">The first column index to be grouped.</param>
      <param name="lastIndex">The last column index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped columns are hidden.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.UngroupRows(System.Int32,System.Int32)">
      <summary>
            Ungroups rows.
            </summary>
      <param name="firstIndex">The first row index to be ungrouped.</param>
      <param name="lastIndex">The last row index to be ungrouped.</param>
      <remarks>
            Only removes outter group info.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.GroupRows(System.Int32,System.Int32)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstIndex">The first row index to be grouped.</param>
      <param name="lastIndex">The last row index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.DeleteColumn(System.Int32)">
      <summary>
            Deletes a column.
            </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.DeleteColumn(System.Int32,System.Boolean)">
      <summary>
            Deletes a column.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.DeleteColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Deletes several columns.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="totalColumns">Number of columns to be deleted.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.InsertColumns(System.Int32,System.Int32)">
      <summary>
            Inserts some columns into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="totalColumns">The number of columns.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.InsertColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Inserts some columns into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="totalColumns">The number of columns.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>v
        </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.InsertColumn(System.Int32,System.Boolean)">
      <summary>
            Inserts a new column into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.InsertColumn(System.Int32)">
      <summary>
            Inserts a new column into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.DeleteRows(System.Int32,System.Int32)">
      <summary>
            Deletes several rows.
            </summary>
      <param name="rowIndex">The first row index to be deleted.</param>
      <param name="totalRows">Number of rows to be deleted.</param>
      <remarks>
            If the deleted range contains the top part(not whole) of the table(ListObject),
            the ranged could not be deleted and nothing will be done.It works as MS Excel.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.DeleteRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Deletes multiple rows in the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="totalRows">Number of rows to be deleted.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.DeleteRow(System.Int32)">
      <summary>
            Deletes a row.
            </summary>
      <param name="rowIndex">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.InsertRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Inserts multiple rows into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="totalRows">Number of rows to be inserted.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts multiple rows into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="totalRows">Number of rows to be inserted.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.InsertRow(System.Int32)">
      <summary>
            Inserts a new row into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.DeleteBlankColumns">
      <summary>
            Delete all blank columns which do not contain any data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.IsBlankColumn(System.Int32)">
      <summary>
            Checks whether given column is blank(does not contain any data).
            </summary>
      <param name="columnIndex">the column index</param>
      <returns>true if given column does not contain any data</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.DeleteBlankRows">
      <summary>
            Delete all blank rows which do not contain any data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.ClearRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears contents and formatting of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.ClearRange(Aspose.Cells.GridDesktop.Data.GridCellArea)">
      <summary>
            Clears contents and formatting of a range.
            </summary>
      <param name="range">Range to be cleared.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.ClearContents(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears contents of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.ClearContents(Aspose.Cells.GridDesktop.Data.GridCellArea)">
      <summary>
            Clears contents of a range.
            </summary>
      <param name="range">Range to be cleared.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.ClearFormats(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears formatting of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.ClearFormats(Aspose.Cells.GridDesktop.Data.GridCellArea)">
      <summary>
            Clears formatting of a range.
            </summary>
      <param name="range">Range to be cleared.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.SetStyle(System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Cells.GridDesktop.Style)">
      <summary>
            Sets the style to a specified range of cells.
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="rowNumber">Number of rows(one based)</param>
      <param name="columnNumber">Number of columns(one based)</param>
      <param name="style">The style object to be set</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.SetStyle(System.String,Aspose.Cells.GridDesktop.Style)">
      <summary>
            Sets the style to a specified range of cells.
            </summary>
      <param name="cellRange">The range of cells' names, like "A1:D6"</param>
      <param name="style">The style object to be set</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.RemoveFormulas">
      <summary>
            Removes all formula and replaces with the value of the formula.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.Sort(System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean,System.Boolean)">
      <summary>
             Sorts the datas ascend/decend top to bottom in a range of a Worksheet by specified column index.
             Sorts the datas ascend/decend left to right in a range of a Worksheet by specified row index.
             </summary>
      <param name="startRow">The row number of the first cell to sort.</param>
      <param name="startColumn">The column number of the first cell to sort.</param>
      <param name="rows">Number of rows to be imported.</param>
      <param name="columns">Number of columns to be imported.</param>
      <param name="index">The column index that specifis the sort column.
             if the Orientation is top to bottom ,it stand for the column index that specifis the sort column.
             if the Orientation is from left to right,it stand for the row index that specifis the sort row.</param>
      <param name="isAsending">whether the sorting order is asending .</param>
      <param name="isCaseSensitive">whether the sort is casesensitive .</param>
      <param name="islefttoright">whether the sort orientation is from left to right</param>
      <example>
        <code>
            
             [C#]
            
             GridWeb1.WebWorksheets[0].Cells.Sort(1,0,25,6,3,true,true,false);
            
             [VB]
            
             GridWeb1.WebWorksheets(0).Cells.Sort(1,0,25,6,3,true,true,false)
            
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.Clear">
      <summary>
            Clear all cells in the collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.ColumnNameToIndex(System.String)">
      <summary>
            Gets column index according to column name.
            </summary>
      <param name="columnName">Column name.</param>
      <returns>Column index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.ColumnIndexToName(System.Int32)">
      <summary>
            Gets column name according to column index.
            </summary>
      <param name="column">Column index.</param>
      <returns>Name of column.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.CellIndexToName(System.Int32,System.Int32)">
      <summary>
            Gets cell name according to its row and column indexes.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>Name of cell.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCells.CellNameToIndex(System.String,System.Int32@,System.Int32@)">
      <summary>
            Gets the cell row and column indexes according to its name
            </summary>
      <param name="cellName">Name of cell.</param>
      <param name="row">Output row index</param>
      <param name="column">Output column index</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.RowEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enuerator.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.Item(System.Int32)">
      <summary>
             Gets <see cref="T:Aspose.Cells.Cell" /> item within the worksheet
             </summary>
      <param name="index">The zero based index of the element.</param>
      <value>The element at the specified index.</value>
      <remarks>
             This is the indexer for the Cells class.
             Gets the cell element at the specified index.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.Item(System.Int32,System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Cell" /> element at the specified cell row index and column index.
             </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>The <see cref="T:Aspose.Cells.Cell" /> object.</returns>
      <example>
        <code>
             [C#]
            
             Cells cells = excel.Worksheets[0].Cells;
             Cell cell = cells[0, 0];	//Gets the cell at "A1"
            
             [Visual Basic]
            
             Dim cells As Cells =  excel.WorkSheets(0).Cells
             Dim cell As Cell =  cells(0,0)  'Gets the cell at "A1"
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.Item(System.String)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Cell" /> element at the specified cell name.
             </summary>
      <param name="cellName">Cell name,including its column letter and row number, for example A5.</param>
      <returns>A <see cref="T:Aspose.Cells.Cell" /> object</returns>
      <example>
        <code>
             [C#]
            
             Cells cells = excel.Worksheets[0].Cells;
             Cell cell = cells["A1"];	//Gets the cell at "A1"
            
             [Visual Basic]
            
             Dim cells As Cells =  excel.Worksheets(0).Cells
             Dim cell As Cell =  cells("A1")  'Gets the cell at "A1"
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.Count">
      <summary>
            Gets the number of cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.StandardWidth">
      <summary>
            Gets or sets the default column width in the worksheet,in unit of characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.StandardHeight">
      <summary>
            Gets or sets the default row height in this worksheet,in unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.StandardHeightPixels">
      <summary>
            Gets or sets the default row height in this worksheet,in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.MergedCells">
      <summary>
            Gets the collection of merged cells.
            </summary>
      <remarks>In this collection, each item is a <see cref="T:Aspose.Cells.GridDesktop.Data.GridCellArea" /> structure which represents an area of merged cells.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.MaxRow">
      <summary>
            Maximum row index of cell which contains data or style.
            </summary>
      <remarks>
            Return -1 if there is no cell whiche contains data or style in the worksheet.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCells.MaxColumn">
      <summary>
            Maximum column index of cell which contains data or style.
            </summary>
      <remarks>
            Return -1 if ther is not cell.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridColumn">
      <summary>
             Represents a single column in a worksheet.
             </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridColumn.DEFAULT_WIDTH">
      <summary>
            Default width of gridcolumn.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridColumn.RemoveCellControl">
      <summary>
            Removes the CellControl object of the column.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridColumn.AddButton(System.Int32,System.Int32,System.String)">
      <summary>
            Adds a button to the column.
            </summary>
      <param name="width">Width of button.</param>
      <param name="height">Height of button.</param>
      <param name="text">Button text.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridColumn.AddValidation(System.Boolean,System.String)">
      <summary>
            Adds a validation to the column.
            </summary>
      <param name="isRequired">Value indicating whether cell value of this column is required.</param>
      <param name="regEx">Regular expression.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridColumn.AddComboBox(System.Collections.ICollection)">
      <summary>
            Adds a combobox to the column.
            </summary>
      <param name="items">The collection of the items contained in ComboBox.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridColumn.AddComboBox(System.Collections.ICollection,System.Collections.ICollection)">
      <summary>
            Adds a combobox to the column.
            </summary>
      <param name="items">The collection of the items contained in ComboBox.</param>
      <param name="values">The collection of the values contained in ComboBox.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridColumn.AddCheckBox">
      <summary>
            Adds a checkbox to the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridColumn.Index">
      <summary>
            Gets the index of this column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridColumn.Hidden">
      <summary>
            Indicates whether the column is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridColumn.Width">
      <summary>
            Gets or sets the width of column object.in unit of pixel
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridColumn.CellControl">
      <summary>
            Gets the CellControl object of the column.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridColumnCollection">
      <summary>
              Collects the <seealso cref="T:Aspose.Cells.Column" /> objects that represent the individual columns in a worksheet.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridColumnCollection.GetEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridColumnCollection.GetColumnByIndex(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Column" /> object by the position in the list.
            </summary>
      <param name="index">The position in the list.</param>
      <returns>Returns the column object.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridColumnCollection.Item(System.Int32)">
      <summary>
            Gets a <seealso cref="T:Aspose.Cells.Column" /> object by column index. The Column object of given column index will be instantiated if it does not exist before.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridComment">
      <summary>
             Encapsulates the object that represents a cell comment.
             </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridComment.Width">
      <summary>
            Get or set the width of the comment. Default value is 140.
            The input value should between 20 and 1000.
            It will be set to 20 if a value less than 20 is inputted.
            It will be set to 1000 if a value greater than 1000 is inputed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridComment.Height">
      <summary>
            Get or set the height of the comment. Default value is 120.
            The input value should between 20 and 1000.
            It will be set to 20 if a value less than 20 is inputted.
            It will be set to 1000 if a value greater than 1000 is inputed.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridCommentCollection">
      <summary>
              Encapsulates a collection of <see cref="T:Aspose.Cells.Comment" /> objects.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCommentCollection.GetEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCommentCollection.Add(System.Int32,System.Int32)">
      <summary>
            Adds a comment to the collection.
            </summary>
      <param name="row">Cell row index.</param>
      <param name="column">Cell column index.</param>
      <returns>
        <see cref="T:Aspose.Cells.Comment" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCommentCollection.Add(System.String)">
      <summary>
            Adds a comment to the collection.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>
        <see cref="T:Aspose.Cells.Comment" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCommentCollection.RemoveAt(System.String)">
      <summary>
            Removes the comment of the specific cell.
            </summary>
      <param name="cellName">The name of cell which contains a comment.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCommentCollection.RemoveAt(System.Int32,System.Int32)">
      <summary>
            Removes the comment of the specific cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column">the column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCommentCollection.Clear">
      <summary>
            Removes all comments;
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCommentCollection.Add(System.String,System.String)">
      <summary>
            Adds a comment to a specified cell by cell name.
            </summary>
      <param name="cellName">Name of grid cell.</param>
      <param name="text">Text of comment.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridCommentCollection.Remove(System.Int32,System.Int32)">
      <summary>
            Removes the comment at the specified row column index of the cell.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCommentCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Comment" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCommentCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Comment" /> element at the specified cell.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>The element at the specified cell.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridCommentCollection.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Comment" /> element at the specified row index and column index.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>The element at the specified cell.</returns>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridHyperlink">
      <summary>
             Encapsulates the object that represents a hyperlink.
             </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridHyperlink.Address">
      <summary>
            Represents the address of a hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridHyperlink.Command">
      <summary>
            Returns or sets the self defined command value text for the specified hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridHyperlink.TextToDisplay">
      <summary>
            Represents the text to be displayed for the specified hyperlink. The default value is the address of the hyperlink. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridHyperlink.Area">
      <summary>
            Gets the range of hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridHyperlink.ScreenTip">
      <summary>
            Returns or sets the ScreenTip text for the specified hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridHyperlink.Target">
      <summary>
            Get or Set web link target type,please note this is an extension attribute and can not keep in excel file
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridHyperlink.DiscardInput">
      <summary>
            Indicates whether to discard user input at client browser when user click this CellCommand hyperlink. Could be used as an "undo" action.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridHyperlink.ImageURL">
      <summary>
            Get or Set Image URL for the link, there is no imageurl properties in hyperlink,
            so actually use TextToDisplay to record this value ,TextToDisplay will be set to &lt;img src=value &gt;
            so  it will change the value of TextToDisplay
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridHyperlinkCollection">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.Hyperlink" /> objects.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridHyperlinkCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
             Adds a hyperlink to a specified cell or a range of cells.
             </summary>
      <param name="firstRow">First row of the hyperlink range.</param>
      <param name="firstColumn">First column of the hyperlink range.</param>
      <param name="totalRows">Number of rows in this hyperlink range.</param>
      <param name="totalColumns">Number of columns of this hyperlink range.</param>
      <param name="address">Address of the hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
      <example>
        <code>
             [C#]
            
             Worksheet worksheet = excel.Worksheets[0];
             worksheet.Hyperlinks.Add("A4", 1, 1, "http://www.aspose.com");
             worksheet.Hyperlinks.Add("A5", 1, 1, "c:\\book1.xls");
            
             [Visual Basic]
            
             Dim worksheet as Worksheet = excel.Worksheets(0)
             worksheet.Hyperlinks.Add("A4", 1, 1, "http://www.aspose.com")
             worksheet.Hyperlinks.Add("A5", 1, 1, "c:\\book1.xls")
            
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridHyperlinkCollection.Add(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a hyperlink to a specified cell or a range of cells.
            </summary>
      <param name="cellName">Cell name.</param>
      <param name="totalRows">Number of rows in this hyperlink range.</param>
      <param name="totalColumns">Number of columns of this hyperlink range.</param>
      <param name="address">Address of the hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridHyperlinkCollection.Add(System.String,System.String)">
      <summary>
            Adds a hyperlink to a specified cell .
            </summary>
      <param name="cellName">Cell name.</param>
      <param name="address">Address of the hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridHyperlinkCollection.Add(System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Adds a hyperlink to a specified cell or a range of cells.
            </summary>
      <param name="startCellName">The top-left cell of the range.</param>
      <param name="endCellName">The bottom-right cell of the range.</param>
      <param name="address">Address of the hyperlink.</param>
      <param name="textToDisplay">The text to be displayed for the specified hyperlink.</param>
      <param name="screenTip">The screenTip text for the specified hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridHyperlinkCollection.Clear">
      <summary>
            Clears all hyperlinks.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridHyperlinkCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the hyperlink  at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridHyperlinkCollection.Add(System.Int32,System.Int32,System.String)">
      <summary>
            Adds a hyperlink to a specified cell at row column index.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
      <param name="url">Url of hyperlink.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridHyperlinkCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Hyperlink" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridHyperlinkCollection.Item(System.Int32,System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Hyperlink" /> element at the specified cell.
             </summary>
      <param name="row">The row of the cell.</param>
      <param name="col">The col of the cell.</param>
      <returns>The element at the specified index.you may get null if no hyperlinks find in this cell</returns>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Group">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Line">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Rectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Oval">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Arc">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Chart">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.TextBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Button">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Picture">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Polygon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.CheckBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.RadioButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Label">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.DialogBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Spinner">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.ScrollBar">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.ListBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.GroupBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.ComboBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Comment">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.OleObject">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.CellsDrawing">
      <summary>
            Only for preserving the drawing object in the template file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridMsoDrawingType.Unknown">
      <summary>
            Only for preserving the drawing object in the xlsx file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridName">
      <summary>
             Encapsulates the object that represents a name object.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridName.ToString">
      <summary>
            Returns a string represents the current Range object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridName.Text">
      <summary>
            Gets the name text of the object. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridName.RefersTo">
      <summary>
            Returns or sets the formula that the name is defined to refer to, beginning with an equal sign.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridName.SheetIndex">
      <summary>
            Indicates this name belongs to Workbook or Worksheet.
            0 = Global name, otherwise index to sheet (one-based)
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridNameCollection">
      <summary>
              Encapsulates a collection of <see cref="T:Aspose.Cells.Name" /> objects.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridNameCollection.GetEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridNameCollection.Add(System.String,System.String)">
      <summary>
            Defines a new global name.
            </summary>
      <param name="text">Name text.It can have sheetname .</param>
      <param name="refersTo">The formula that the name is defined to refer to.It must have a sheetname .eg.'sheet hello!'A1:B2.</param>
      <returns>Name object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridNameCollection.Add(System.Int32,System.String,System.String)">
      <summary>
            Defines a new name in the specified sheet.
            </summary>
      <param name="sheetIndex">The sheet index that the name is applyed in.</param>
      <param name="text">Name text.It can not have sheetname .</param>
      <param name="refersTo">The formula that the name is defined to refer to.It must have sheetname .eg.'sheet hello!'A1:B2.</param>
      <param name="sheetIndex">Name's SheetIndex ,the index is from 1.</param>
      <returns>Name object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridNameCollection.Remove(System.String[])">
      <summary>
            Remove an array of name
            </summary>
      <param name="names">The names' text.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridNameCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the name at the specific index.
            </summary>
      <param name="index">
      </param>
      <remarks>
            Please make sure that the name is not referred by the other formulas before calling the method.
            And if the name is referred,please only set Name.RefersTo as null.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridNameCollection.Clear">
      <summary>
            Removes all Names;
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridNameCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Name" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridOperatorType.Between">
      <summary>
            Represents Between operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridOperatorType.Equal">
      <summary>
            Represents Equal operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridOperatorType.GreaterThan">
      <summary>
            Represents GreaterThan operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridOperatorType.GreaterOrEqual">
      <summary>
            Represents GreaterOrEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridOperatorType.LessThan">
      <summary>
            Represents LessThan operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridOperatorType.LessOrEqual">
      <summary>
            Represents LessOrEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridOperatorType.None">
      <summary>
            Represents no comparision.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridOperatorType.NotBetween">
      <summary>
            Represents NotBetween operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridOperatorType.NotEqual">
      <summary>
            Represents NotEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridPicture">
      <summary>
             Encapsulates the object that represents a single picture in a spreadsheet.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPicture.Move(System.Int32,System.Int32)">
      <summary>
            Moves the picture to a specified location.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPicture.IsGroup">
      <summary>
            Indicates whether the shape is a group.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPicture.AddHyperlink(System.String)">
      <summary>
            Adds a hyperlink to the shape.
            </summary>
      <param name="address">Address of the hyperlink.</param>
      <returns>Return the new hyperlink object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPicture.RemoveHyperlink">
      <summary>
            Remove the hyperlink of the shape.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPicture.MoveToRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Moves the shape to a specified range.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPicture.AlignTopRightCorner(System.Int32,System.Int32)">
      <summary>
            Moves the picture to the top-right corner.
            </summary>
      <param name="topRow">the row index.</param>
      <param name="rightColumn">the column index.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Data">
      <summary>
            Gets the data of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.OriginalHeight">
      <summary>
            Gets the original height of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.OriginalWidth">
      <summary>
            Gets the original width of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.BorderLineColor">
      <summary>
            Represents the <see cref="T:System.Drawing.Color" /> of the border line of a picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.BorderWeight">
      <summary>
            Gets or sets the weight of the border line of a picture in units of pt.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.SourceFullName">
      <summary>
            Gets or sets the path and name of the source file for the linked image.
            </summary>
      <remarks>
            The default value is an empty string.
            If SourceFullName is not an empty string, the image is linked.
            If SourceFullName is not an empty string, but Data is null, then the image is linked and not stored in the file.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.ImageFormat">
      <summary>
            Gets the image format of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Image">
      <summary>
            Gets or sets the Image object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.OriginalHeightCM">
      <summary>
            Gets the original height of picture, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.OriginalWidthCM">
      <summary>
            Gets the original width of picture, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.OriginalHeightInch">
      <summary>
            Gets the original height of picture, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.OriginalWidthInch">
      <summary>
            Gets the original width of picture, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Name">
      <summary>
            Gets and sets the name of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.IsHidden">
      <summary>
            Indicates whether the object is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.IsLocked">
      <summary>
            True if the object is locked, False if the object can be modified when the sheet is protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Height">
      <summary>
            Represents the height of shape, in unit of pixel.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Width">
      <summary>
            Represents the width of shape, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.ZOrderPosition">
      <summary>
            Returns the position of a shape in the z-order.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.IsLockAspectRatio">
      <summary>
            True means that don't allow changes in aspect ratio.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.RotationAngle">
      <summary>
            Gets and sets the rotation of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Hyperlink">
      <summary>
            Gets the hyperlink of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Left">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Top">
      <summary>
            Represents the vertical offset of shape from its top row, in unit of pixels.
            </summary>
      <remarks>If the shape is in the chart, represents the vertical offset of shape from its top border.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Right">
      <summary>
            Represents the width of the shape's horizontal  offset from its lower right corner column, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.UpperLeftColumn">
      <summary>
            Represents upper left corner column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.UpperLeftRow">
      <summary>
            Represents upper left corner row index.
            </summary>
      <remarks>If the shape is in the shape or in the group , UpperLeftRow will be ignored.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.LowerRightColumn">
      <summary>
            Represents lower right corner column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.LowerRightRow">
      <summary>
            Represents lower right corner row index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.UpperDeltaY">
      <summary>
            Gets or sets the shape's vertical offset from its upper left corner row.
            <remarks>The range of value is 0 to 256.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.UpperDeltaX">
      <summary>
            Gets or sets the shape's horizontal offset from its upper left corner column.
            <remarks>The range of value is 0 to 1024.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.LowerDeltaY">
      <summary>
            Gets or sets the shape's vertical offset from its lower right corner row.
            <remarks>The range of value is 0 to 256.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.LowerDeltaX">
      <summary>
            Gets or sets the shape's horizontal  offset from its lower right corner column.
            <remarks>The range of value is 0 to 1024.</remarks></summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.WidthInch">
      <summary>
             Represents the width of the shape, in unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.WidthPt">
      <summary>
             Represents the width of the shape, in unit of point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.WidthCM">
      <summary>
            Represents the width of the shape, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.HeightInch">
      <summary>
            Represents the height of the shape, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.HeightPt">
      <summary>
            Represents the height of the shape, in unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.HeightCM">
      <summary>
            Represents the height of the shape, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.LeftInch">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.LeftCM">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.TopInch">
      <summary>
             Represents the vertical offset of shape from its top row, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.TopCM">
      <summary>
             Represents the vertical offset of shape from its top row, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.X">
      <summary>
            Gets and sets the horizonal offset of shape from worksheet left border,in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Y">
      <summary>
            Gets and sets the vertical offset of shape from worksheet top border,in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.WidthScale">
      <summary>
            Gets and sets the width scale, in unit of percent of the original picture width.
            If the shape is not picture ,the WidthScale property only returns 100;
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.HeightScale">
      <summary>
             Gets and sets the height scale,in unit of percent of the original picture height.
            If the shape is not picture ,the HeightScale property only returns 100;
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.IsOutlineVisible">
      <summary>
            Gets and sets the line border of the shape is visible.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.IsFlippedVertically">
      <summary>
            Gets and sets whether shape is vertically flipped .
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.RelativeToOriginalPictureSize">
      <summary>
            Indicates whether shape is relative to original picture size.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.LinkedCell">
      <summary>
            Gets or sets the worksheet range linked to the control's value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.Text">
      <summary>
            Represents the string in this TextBox object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.HtmlText">
      <summary>
            Gets and sets the html string which contains data and some formattings in this textbox.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.IsTextWrapped">
      <summary>
             Gets and sets the text wrapped type of the shape which contains text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.LeftOffset">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPicture.TopOffset">
      <summary>
            Represents the vertical offset of shape from its top row, in unit of pixels.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridPictureCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Drawing.Picture" /> objects.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPictureCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.IO.Stream)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <param name="stream">Stream object which contains the image data.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPictureCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="lowerRightRow">Lower right row index</param>
      <param name="lowerRightColumn">Lower right column index</param>
      <param name="fileName">Image filename.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPictureCollection.Add(System.Int32,System.Int32,System.IO.Stream)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="stream">Stream object which contains the image data.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPictureCollection.Add(System.Int32,System.Int32,System.String)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="fileName">Image filename.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPictureCollection.Add(System.Int32,System.Int32,System.String,System.Int32,System.Int32)">
      <summary>
            Adds a picture to the collection.
            </summary>
      <param name="upperLeftRow">Upper left row index.</param>
      <param name="upperLeftColumn">Upper left column index.</param>
      <param name="fileName">Image filename.</param>
      <param name="widthScale">Scale of image width, a percentage.</param>
      <param name="heightScale">Scale of image height, a percentage.</param>
      <returns>
        <see cref="T:Aspose.Cells.Drawing.Picture" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPictureCollection.GetEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPictureCollection.Add(System.String,System.String)">
      <summary>
            Adds a Picture to a specified cell by cell name.
            </summary>
      <param name="cellName">Name of grid cell.</param>
      <param name="fileName">File name of picture.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPictureCollection.Add(System.Int32,System.Int32,System.Drawing.Image)">
      <summary>
            Adds a Picture to a specified cell at row column index.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
      <param name="image">Image.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPictureCollection.Remove(System.Int32,System.Int32)">
      <summary>
            Removes the items at the specified row column index of the cell.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPictureCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Drawing.Picture" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotField.HideItem(System.Int32,System.Boolean)">
      <summary>
             Sets whether the specific PivotItem in a data field is hidden.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <param name="isHidden">whether the specific PivotItem is hidden</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotField.HideItemByValue(System.String,System.Boolean)">
      <summary>
             Sets whether the specific PivotItem in a data field is hidden.
            </summary>
      <param name="value">the value of the pivotItem in the pivotField.</param>
      <param name="isHidden">whether the specific PivotItem is hidden</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotField.HideItemByName(System.String,System.Boolean)">
      <summary>
             Sets whether the specific PivotItem in a data field is hidden.
            </summary>
      <param name="name">the name of the pivotItem in the pivotField.</param>
      <param name="isHidden">whether the specific PivotItem is hidden</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotField.Function">
      <summary>
            Represents the function used to summarize the PivotTable data field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotField.IsAutoSort">
      <summary>
            Indicates whether the specified PivotTable field is automatically sorted.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotField.IsAscendSort">
      <summary>
            Indicates whether the specified PivotTable field is autosorted ascending.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotField.DisplayName">
      <summary>
            Represents the PivotField display name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotField.Position">
      <summary>
            Represents the PivotField index in the PivotFields.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridPivotFieldCollection">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.Pivot.PivotField" /> objects.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotFieldCollection.Add(Aspose.Cells.GridDesktop.Data.GridPivotField)">
      <summary>
            Adds a PivotField Object to the specific type PivotFields.
            </summary>
      <param name="pivotField">a PivotField Object.</param>
      <returns>the index of  the PivotField Object in this PivotFields.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotFieldCollection.Clear">
      <summary>
            Clears all PivotFields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotFieldCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Pivot.PivotField" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.Sum">
      <summary>
            Represents Sum function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.Count">
      <summary>
            Represents Count function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.Average">
      <summary>
            Represents Average function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.Max">
      <summary>
            Represents Max function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.Min">
      <summary>
            Represents Min function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.Product">
      <summary>
            Represents Product function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.CountNums">
      <summary>
            Represents Count Nums function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.StdDev">
      <summary>
            Represents StdDev function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.StdDevp">
      <summary>
            Represents StdDevp function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.Var">
      <summary>
            Represents Var function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldFunction.Varp">
      <summary>
            Represents Varp function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldType.Undefined">
      <summary>
            Presents base pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldType.Row">
      <summary>
            Presents row pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldType.Column">
      <summary>
            Presents column pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldType.Page">
      <summary>
            Presents page pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridPivotFieldType.Data">
      <summary>
            Presents data pivot field type.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotItem.Move(System.Int32)">
      <summary>
            Moves the item up or down.
            </summary>
      <param name="count">The number of moving up or down.
            Move the item up if this is less than zero;
            Move the item down if this is greater than zero.
            </param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotItem.GetStringValue">
      <summary>
            Gets the string value of the pivot item
            If the value is null, it will return ""
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotItem.GetDoubleValue">
      <summary>
            Gets the double value of the pivot item
            If the value is null or not number ,it will return 0
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotItem.GetDateTimeValue">
      <summary>
            Gets the date time value of the pivot item
            If the value is null ,it will return DateTime.MinValue
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotItem.IsHidden">
      <summary>
            Gets and Sets whether the pivot item is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotItem.Value">
      <summary>
            Gets the value of the pivot item
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotItem.Name">
      <summary>
            Gets the name of the pivot item.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotItem.Index">
      <summary>
            Gets the index of the pivot item in the pivot field
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridPivotItemCollection">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.Pivot.PivotItem" /> objects.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotItemCollection.Add(Aspose.Cells.GridDesktop.Data.GridPivotItem)">
      <summary>
            Adds a PivotItem Object to the specific type PivotItems.
            </summary>
      <param name="PivotItem">a PivotItem Object.</param>
      <returns>the index of  the PivotItem Object in this PivotItems.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotItemCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Pivot.PivotItem" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridPivotTable">
      <summary>
            Represents a PivotTable report on a worksheet. The PivotTable object is a member of the <see cref="!:PivotTables" /> collection.
            The PivotTables collection contains all the PivotTable objects on a control.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTable.Fields(Aspose.Cells.GridDesktop.Data.GridPivotFieldType)">
      <summary>
            Gets the specific fields by the field type.
            </summary>
      <param name="fieldType">the field type.</param>
      <returns>the specific fields</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTable.Fields(System.String)">
      <summary>
            Gets the specific field by the field name.
            </summary>
      <param name="fieldName">the field name.</param>
      <returns>the specific field</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTable.ClearAllFields">
      <summary>
            clear all pivot fields.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTable.AddFieldToArea(Aspose.Cells.GridDesktop.Data.GridPivotFieldType,System.Int32)">
      <summary>
            Adds the field to the specific area.
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="baseFieldIndex">The field index in the base fields.</param>
      <returns>The field position in the specific fields.</returns>
      <see cref="!:AddFieldToArea(PivotFieldType,PivotField)" />
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTable.AddFieldToArea(Aspose.Cells.GridDesktop.Data.GridPivotFieldType,System.String)">
      <summary>
            Adds the field to the specific area.
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="fieldName">The name in the base fields.</param>
      <returns>The field position in the specific fields.If there is no field named as it, return -1.</returns>
      <see cref="!:AddFieldToArea(PivotFieldType,PivotField)" />
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTable.RefreshData">
      <summary>
            Refreshes pivottable's data and setting from it's data source.
            </summary>
      <remarks>
            We will gather data from data source to a pivot cache ,then calcualte the data in the cache to the cells.
            This method is only used to gather all data to a pivot cache.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTable.CalculateData">
      <summary>
            Calculates pivottable's data to cells.
            </summary>
      <remarks>
            Cell.Value in the pivot range could not return the correct result if the method is not been called.
            This method caclulates data with an inner pivot cache,not original data source.
            So if the data source is changed, please call RefreshData() method first.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridPivotTableCollection">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.Pivot.PivotTable" /> objects.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTableCollection.Add(System.String,System.String,System.String)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data cell range for the new PivotTable.Example : Sheet1!A1:C8</param>
      <param name="destCellName">The cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTableCollection.Add(Aspose.Cells.GridDesktop.Worksheet,Aspose.Cells.GridDesktop.Data.GridCellArea,System.String,System.String)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceSheet">The source work sheet.</param>
      <param name="sourceArea">The area in the source worksheet.</param>
      <param name="destRow">The row of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="destCol">The column of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTableCollection.Add(System.String,Aspose.Cells.GridDesktop.Data.GridCellArea,System.Int32,System.Int32,System.String)">
      <summary>
             Adds a new PivotTable cache to a PivotCaches collection.
             </summary>
      <param name="worksheetname">The name of the source worksheet.</param>
      <param name="sourceArea">The area in the source worksheet.</param>
      <param name="destRow">The row of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="destCol">The column of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTableCollection.Add(System.String,Aspose.Cells.GridDesktop.Data.GridCellArea,System.String,System.String)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="worksheetname">The name of the source worksheet.</param>
      <param name="sourceArea">The area in the source worksheet.</param>
      <param name="destCellName">The cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTableCollection.Clear">
      <summary>
            Clears all PivotTables.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridPivotTableCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the PivotTable  at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridPivotTableCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Pivot.PivotTable" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridRow">
      <summary>
             Encapsulates the object that represents a single picture in a spreadsheet.
             </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridRow.DEFAULT_HEIGHT">
      <summary>
            Default height of gridrow.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridRow.GetEnumerator">
      <summary>
            Gets the cells enumerator
            </summary>
      <returns>The cells enumerator</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridRow.Item(System.Int32)">
      <summary>
            Gets the cell.
            </summary>
      <param name="column">The column index</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridRow.Height">
      <summary>
            Gets or sets the height of row object.in unit of pixel
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridRowCollection">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.GridDesktop.Worksheet" /> objects.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridRowCollection.GetEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridRowCollection.GetRowByIndex(System.Int32)">
      <summary>
            Gets the row object by the position in the list.
            </summary>
      <param name="index">The position.</param>
      <returns>The Row object at given position.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridRowCollection.Item(System.Int32)">
      <summary>
            Gets a <seealso cref="T:Aspose.Cells.Row" /> object by given row index. The Row object of given row index will be instantiated if it does not exist before.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridSaveFormat">
      <summary>
            Enumerates supported file format types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.CSV">
      <summary>
            CSV
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.Excel2003">
      <summary>
            Excel 2003, Excel97-2003 xls file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.Excel2007">
      <summary>
            Excel 2007 Represents an xlsx file
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.XLSM">
      <summary>
            Excel 2007 xlsm file which enable macros
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.XLTX">
      <summary>
            Excel Template file
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.XLTM">
      <summary>
            Represents an Xltx file which enable macros. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.TABDELIMITED">
      <summary>
            Represents a tab delimited text file,txt file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.HTML">
      <summary>
            Represents a html file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.PDF">
      <summary>
            Represents a pdf file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.ODS">
      <summary>
            Represents a ods file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.SpreadsheetML">
      <summary>
            SpreadsheetML,Represents an Excel 2003 xml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.XLSB">
      <summary>
            Represents a XLSB file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.MHTML">
      <summary>
            Represents a mhtml file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.XPS">
      <summary>
            Represents a XPS file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.TIFF">
      <summary>
            Represents a TIFF file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.SVG">
      <summary>
            Represents a SVG file. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridSaveFormat.DIF">
      <summary>
            Data Interchange Format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Shape">
      <summary>
             Represents a shape object.
             </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.MsoDrawingType">
      <summary>
            Gets and sets mso drawing type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.UpperLeftRow">
      <summary>
            Represents upper left corner row index.
            </summary>
      <remarks>If the shape is in the shape or in the group , UpperLeftRow will be ignored.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.UpperLeftColumn">
      <summary>
            Represents upper left corner column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.Text">
      <summary>
            Represents the string in this TextBox object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.Name">
      <summary>
            Gets and sets the name of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.Left">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.Top">
      <summary>
            Represents the vertical offset of shape from its top row, in unit of pixels.
            </summary>
      <remarks>If the shape is in the chart, represents the vertical offset of shape from its top border.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.ZOrderPosition">
      <summary>
            Returns the position of a shape in the z-order.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.ImageFormat">
      <summary>
            Gets the image format of the picture.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.LeftOffset">
      <summary>
            Represents the horizontal offset of shape from its left column, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Shape.TopOffset">
      <summary>
            Represents the vertical offset of shape from its top row, in unit of pixels.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridShapeCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the shape.
            </summary>
      <param name="index">The index of the shape.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridShapeCollection.GetEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enumerator</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridShapeCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Drawing.Picture" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.TextDirectionType.Context">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.TextDirectionType.LeftToRight">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.TextDirectionType.RightToLeft">
      <summary>
      </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Style.SetBorderLine(Aspose.Cells.GridDesktop.BorderType,Aspose.Cells.GridDesktop.BorderLineType)">
      <summary>
            Sets the border line type of the specified border.
            </summary>
      <param name="borderType">borderType which border to set.</param>
      <param name="borderLineType">borderLineType border line type of the specified border.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Style.SetBorderColor(Aspose.Cells.GridDesktop.BorderType,System.Drawing.Color)">
      <summary>
            Sets the color of the specified border.
            </summary>
      <param name="borderType">borderType which border to set.</param>
      <param name="color">of the specified border.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Style.Clone">
      <summary>
            Creates and returns a copy of this object.
            <b>NOTE:</b>If you clone a named style, name is not cloned becaule style name must be unique.
            Therefore, the cloned style will not "equals to" the original style.
            </summary>
      <returns>
            Return a new Style object.
            </returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.NumberType">
      <summary>
            same as NumberFormat
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.Pattern">
      <summary>
            Gets or sets the cell background pattern type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.Color">
      <summary>
            Gets or sets the cell shading color. when pattern is none ,it return Color.Empty;
            when pattern is BackgroundType.Solid,it return ForegroundColor;
            others it return BackgroundColor
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.BackgroundColor">
      <summary>
            Gets or sets the cell background color,if style pattern is not set to solid,then it will take affect
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.ForegroundColor">
      <summary>
            Gets or sets a style's foreground color.
            </summary>
      <remarks>It means no color setting if Color.Empty is returned.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.TextWrapped">
      <summary>
            Gets or sets a value indicating whether the text within a cell is wrapped.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.Indent">
      <summary>
            Represents the m_IndentLevel level for the cell or range. Can only be an integer from 0 to 15.
            </summary>
      <remarks>
            If text horizontal alignment type is set to value other than left or right, m_IndentLevel level will
            be reset to zero.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.Rotation">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <p>0: Not rotated.</p>
        <p>255: Top to Bottom.</p>
        <p>-90: Downward.</p>
        <p>90: Upward.</p>
            You can set 255 or value ranged from -90 to 90.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.HAlignment">
      <summary>
            Gets or sets horizontal alignment attribute.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.VAlignment">
      <summary>
            Gets or sets vertical alignment attribute.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.TextDirection">
      <summary>
            Gets or sets text direction attribute.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Style.NumberFormat">
      <summary>
             Gets or sets the display format of numbers and dates.
             </summary>
      <remarks>
        <table class="dtTABLE" cellspacing="0">
          <tr>
            <td width="33%">
              <font color="gray">
                <b>Value</b>
              </font>　</td>
            <td width="33%">
              <font color="gray">
                <b>Type</b>
              </font>　</td>
            <td width="33%">
              <font color="gray">
                <b>Format String</b>
              </font>　</td>
          </tr>
          <tr>
            <td width="33%">0</td>
            <td width="33%">General</td>
            <td width="33%">General</td>
          </tr>
          <tr>
            <td width="33%">1</td>
            <td width="33%">Decimal</td>
            <td width="33%">0</td>
          </tr>
          <tr>
            <td width="33%">2</td>
            <td width="33%">Decimal</td>
            <td width="33%">0.00</td>
          </tr>
          <tr>
            <td width="33%">3</td>
            <td width="33%">Decimal</td>
            <td width="33%">#,##0</td>
          </tr>
          <tr>
            <td width="33%">4</td>
            <td width="33%">Decimal</td>
            <td width="33%">#,##0.00</td>
          </tr>
          <tr>
            <td width="33%">5</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0;($#,##0)</td>
          </tr>
          <tr>
            <td width="33%">6</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0;[Red]($#,##0)</td>
          </tr>
          <tr>
            <td width="33%">7</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0.00;($#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">8</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0.00;[Red]($#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">9</td>
            <td width="33%">Percentage</td>
            <td width="33%">0%</td>
          </tr>
          <tr>
            <td width="33%">10</td>
            <td width="33%">Percentage</td>
            <td width="33%">0.00%</td>
          </tr>
          <tr>
            <td width="33%">11</td>
            <td width="33%">Scientific</td>
            <td width="33%">0.00E+00</td>
          </tr>
          <tr>
            <td width="33%">12</td>
            <td width="33%">Fraction</td>
            <td width="33%"># ?/?</td>
          </tr>
          <tr>
            <td width="33%">13</td>
            <td width="33%">Fraction</td>
            <td width="33%"># ??/??</td>
          </tr>
          <tr>
            <td width="33%">14</td>
            <td width="33%">Date</td>
            <td width="33%">m/d/yyyy</td>
          </tr>
          <tr>
            <td width="33%">15</td>
            <td width="33%">Date</td>
            <td width="33%">d-mmm-yy</td>
          </tr>
          <tr>
            <td width="33%">16</td>
            <td width="33%">Date</td>
            <td width="33%">d-mmm</td>
          </tr>
          <tr>
            <td width="33%">17</td>
            <td width="33%">Date</td>
            <td width="33%">mmm-yy</td>
          </tr>
          <tr>
            <td width="33%">18</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm AM/PM</td>
          </tr>
          <tr>
            <td width="33%">19</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm:ss AM/PM</td>
          </tr>
          <tr>
            <td width="33%">20</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm</td>
          </tr>
          <tr>
            <td width="33%">21</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm:ss</td>
          </tr>
          <tr>
            <td width="33%">22</td>
            <td width="33%">Time</td>
            <td width="33%">m/d/yyyy h:mm</td>
          </tr>
          <tr>
            <td width="33%">37</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0;(#,##0)</td>
          </tr>
          <tr>
            <td width="33%">38</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0;[Red](#,##0)</td>
          </tr>
          <tr>
            <td width="33%">39</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0.00;(#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">40</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0.00;[Red](#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">41</td>
            <td width="33%">Accounting</td>
            <td width="33%">_ * #,##0_ ;_ * (#,##0)_ ;_ * "-"_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">42</td>
            <td width="33%">Currency</td>
            <td width="33%">_ $* #,##0_ ;_ $* (#,##0)_ ;_ $* "-"_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">43</td>
            <td width="33%">Accounting</td>
            <td width="33%">_ * #,##0.00_ ;_ * (#,##0.00)_ ;_ * "-"??_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">44</td>
            <td width="33%">Currency</td>
            <td width="33%">_ $* #,##0.00_ ;_ $* (#,##0.00)_ ;_ $* "-"??_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">45</td>
            <td width="33%">Time</td>
            <td width="33%">mm:ss</td>
          </tr>
          <tr>
            <td width="33%">46</td>
            <td width="33%">Time</td>
            <td width="33%">[h]:mm:ss</td>
          </tr>
          <tr>
            <td width="33%">47</td>
            <td width="33%">Time</td>
            <td width="33%">mm:ss.0</td>
          </tr>
          <tr>
            <td width="33%">48</td>
            <td width="33%">Scientific</td>
            <td width="33%">##0.0E+00</td>
          </tr>
          <tr>
            <td width="33%">49</td>
            <td width="33%">Text</td>
            <td width="33%">@</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidation.AddACell(System.Int32,System.Int32)">
      <summary>
            add the validation settings in the cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column"> The column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidation.AddACell(System.String)">
      <summary>
            add the validation settings in the cell.
            </summary>
      <param name="cellname">cell name.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidation.AddArea(Aspose.Cells.GridDesktop.Data.GridCellArea)">
      <summary>
            Applies the validation to the area.
            </summary>
      <param name="cellArea">The area.</param>
      <remarks>
            In this method , we will remove all old validations on this area.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidation.RemoveArea(Aspose.Cells.GridDesktop.Data.GridCellArea)">
      <summary>
            Remove the validation settings in the range.
            </summary>
      <param name="cellArea">The range which contains the data validation settings.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidation.RemoveACell(System.Int32,System.Int32)">
      <summary>
            Remove the validation settings in the cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column"> The column index.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.ValidationType">
      <summary>
            Gets or sets the validation type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.ValueList">
      <summary>
            Gets/Sets the value list object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.AreaList">
      <summary>
            Represents a collection of <see cref="T:Aspose.Cells.CellArea" /> which contains the data validation settings.
            </summary>
      <remarks>
            The old valvidations on the area will not be removed if directly adding are to this list.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.Formula1">
      <summary>
            Represents the value or expression associated with the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.Formula2">
      <summary>
            Represents the value or expression associated with the second part of the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.Operator">
      <summary>
            Represents the operator for the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.InputMessage">
      <summary>
            Represents the data validation error message.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.InputTitle">
      <summary>
            Represents the title of the data-validation input dialog box.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.ShowError">
      <summary>
            Indicates whether the data validation error message will be displayed whenever the user enters invalid data. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.ErrorMessage">
      <summary>
            Represents the data validation error message.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.ErrorTitle">
      <summary>
            Represents the title of the data-validation error dialog box. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.RegEx">
      <summary>
            Gets or sets the regular expression string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.ClientValidationFunction">
      <summary>
             Gets or sets the client validation javascript function name.
             </summary>
      <remarks>
             Use the ClientValidationFunction property to specify the client validation function's name.
             The function should be declared as this formation:<br />
             function customValicationFunction(source, value)<br />
             The parameter "source" is the cell object.
             The parameter "value" is the string value of a cell to be checked.
             The function should returns true if the value is valid.
             </remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.CustomValidation">
      <summary>
            Gets or sets the custom validation object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.CustomMsgTitle">
      <summary>
            Gets or sets the custom message title to show when a invalid value input.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.CustomMsgForStopEdit">
      <summary>
            Gets or sets the custom message to show when user edits invalid value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidation.CustomMsgForStopOper">
      <summary>
            Gets or sets the custom message to show when user's operation brings invalid value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridValidationCollection">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.Hyperlink" /> objects.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Add(Aspose.Cells.GridDesktop.Data.GridValidation)">
      <summary>
            Add a <see cref="T:Aspose.Cells.GridDesktop.Data.GridValidation" /> to the collection.
            </summary>
      <param name="validation"> A validation object.</param>
      <returns>
        <see cref="T:Aspose.Cells.GridDesktop.Data.GridValidation" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Add">
      <summary>
            Add a <see cref="T:Aspose.Cells.GridDesktop.Data.GridValidation" /> to the collection.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.GridDesktop.Data.GridValidation" /> the added GridValidation instance.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Add(System.String)">
      <summary>
            Add a <see cref="T:Aspose.Cells.GridDesktop.Data.GridValidation" /> to the collection.the validation is applied to the specificed cell.
            </summary>
      <param name="cellname"> the name of the cell.</param>
      <returns>
        <see cref="T:Aspose.Cells.GridDesktop.Data.GridValidation" /> the added GridValidation instance.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Add(System.Int32,System.Int32)">
      <summary>
            Add a <see cref="T:Aspose.Cells.GridDesktop.Data.GridValidation" /> to the collection.the validation is applied to the specificed cell.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
      <returns>
        <see cref="T:Aspose.Cells.GridDesktop.Data.GridValidation" /> the added GridValidation instance.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Clear">
      <summary>
            Clears all validations.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidationCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the validation  at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Add(System.String,System.Boolean,System.String)">
      <summary>
            Adds a validation to a specified cell by cell name.
            </summary>
      <param name="cellName">Name of grid cell.</param>
      <param name="isRequired">Value indicating whether cell value is required.</param>
      <param name="regEx">Regular expression.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Add(System.Int32,System.Int32,Aspose.Cells.GridDesktop.ICustomValidation)">
      <summary>
            Adds a validation to a specified cell at row column index.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
      <param name="customValidation">Custom validaton object.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Add(System.Int32,System.Int32,System.Boolean,System.String)">
      <summary>
            Adds a validation to a specified cell at row column index.
            </summary>
      <param name="row">Row index of cell.</param>
      <param name="col">Column index of cell.</param>
      <param name="isRequired">Value indicating whether cell value is required.</param>
      <param name="regEx">Regular expression.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Add(System.String,Aspose.Cells.GridDesktop.ICustomValidation)">
      <summary>
            Adds a validation to a specified cell by cell name.
            </summary>
      <param name="cellName">Name of grid cell.</param>
      <param name="customValidation">Custom validaton object.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Hyperlink" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.GridValidationCollection.Item(System.Int32,System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.GridDesktop.Data.GridValidation" /> element at the specified cell.if no validation ,then return null.
             </summary>
      <param name="row">The row of the cell.</param>
      <param name="column">The column of the cell.</param>
      <returns>The element at the specified index.</returns>
      <remarks>
             If there is not a validation object at specified row column index,
             this will check the column validation object.
             </remarks>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.AnyValue">
      <summary>
            Any value validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.WholeNumber">
      <summary>
            Whole number validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.Decimal">
      <summary>
            Decimal validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.List">
      <summary>
            List validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.Date">
      <summary>
            Date validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.Time">
      <summary>
            Time validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.TextLength">
      <summary>
            Text length validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.Custom">
      <summary>
            Custom validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.DropDownList">
      <summary>
            Show dropdown list.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.FreeList">
      <summary>
            Free List validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.CustomExpression">
      <summary>
            Custom validation type, using regular expression.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.Boolean">
      <summary>
            TRUE or FALSE
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.DateTime">
      <summary>
            DateTime (yyyy-MM-dd or yyyy-MM-dd hh:mm:ss).
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.CustomFunction">
      <summary>
            Custom javascript function validation.
            </summary>
      <remarks>
            Use the ClientValidationFunction property to specify the client validation function's name.
            The function should be declared as this formation:<br />
            function customValicationFunction(source, value)<br />
            The parameter "source" is the cell object.
            The parameter "value" is the string value of a cell to be checked.
            The function should returns true if the value is valid.
            </remarks>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.GridValidationType.CheckBox">
      <summary>
            Display the cell as a checkbox. And the value of the cell is True of False.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.GridWorkbook">
      <summary>
              Represents a root object to create an Excel spreadsheet.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Data.GridWorkbook.CalculateFormula">
      <summary>
            Calculates the result of formulas.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Worksheet">
      <summary>
             Encapsulates the object that represents a single worksheet.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.Copy(Aspose.Cells.GridDesktop.Worksheet)">
      <summary>
            Copies contents and formats from another worksheet.
            </summary>
      <param name="sourceSheet">Source worksheet.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.IsProtected">
      <summary>
            Indicates if the worksheet is protected.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.UnFreezePanes">
      <summary>
            Unfreezes panes in the worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.FreezePanes(System.String,System.Int32,System.Int32)">
      <summary>
            Freezes panes at the specified cell in the worksheet.
            </summary>
      <param name="cellName">Cell name.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <remarks>Row index and column index cannot all be zero. Number of rows and number of columns
            also cannot all be zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.FreezePanes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Freezes panes at the specified cell in the worksheet.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <remarks>
        <p>Row index and column index cannot all be zero. Number of rows and number of columns
            also cannot all be zero.</p>
        <p>The first two parameters specify the freezed position and the last two parameters specify the area freezed on the left top pane.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetFreezedPanes(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>
            Gets the freeze panes.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <returns>Return whether the worksheet is frozen</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AddAutoFilter(System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the range to which the specified AutoFilter applies.
            </summary>
      <param name="row">header Row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column Index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.FilterString(System.Int32,System.String)">
      <summary>
            Sets the filter for the column.notice we shall call AddAutoFilter before calling of filterString
            The filter criteria string. notice we use comma-&gt;"," as split char,so the cell value you want to filter shall not contains with comma
            filterString(10,"123,456") means column 10 shall contain 123 or 456, filterString(10,"123") means column10 shall contain 123
            <param name="criteria">value split with comma,eg. 123,456,789 or abc</param></summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.RefreshFilter">
      <summary>
            Refresh auto filters to hide or unhide the rows.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.RemoveAutoFilter">
      <summary>
            Remove the auto filter of the worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.ResetFilter(System.Int32)">
      <summary>
        <param name="fieldIndex">The integer offset of the field on which you want to apply ,based on the first filter column
            (from the left of the list; the leftmost field is field 0).</param>
      </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AddCustomFilter(System.Int32,System.String)">
      <summary>
             Add custom filter for the specified row.
             </summary>
      <remarks>
            The filter criteria string. notice we use , and ; as split char,so the cell value shall not contains with those split char
            below are the criteria string examples:
             //column 0 with value 12.3
             CELL0 = 12.3
             //column 1 with value ABC
             CELL1 = ABC
             //column 0 with value  123 or 456 or ABC and column 1 with value ABC
             CELL0 = 123,456,ABC; CELL1 = ABC
             </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.MoveTo(System.Int32)">
      <summary>
            Moves the sheet to another location in the spreadsheet.
            </summary>
      <param name="index">Destination sheet index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.ClearComments">
      <summary>
            Clears all comments in designer spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.CalculateFormula(System.String)">
      <summary>
            Calculates a formula.
            </summary>
      <param name="formula">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetProtect">
      <summary>
             Protects worksheet.
             </summary>
      <remarks>This method protects worksheet without password. It can protect worksheet in all versions of Excel file.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.UnProtect">
      <summary>
            unProtects worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitColumn(System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits the column width.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="firstRow">First row index.</param>
      <param name="lastRow">Last row index.</param>
      <remarks>This method autofits a row based on content in a range of cells within the row.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitColumn(System.Int32)">
      <summary>
            Autofits the column width.
            </summary>
      <param name="columnIndex">Column index.</param>
      <remarks>AutoFitColumn is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitColumns">
      <summary>
            Autofits all columns in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitColumns(System.Int32,System.Int32)">
      <summary>
            Autofits the columns width.
            </summary>
      <param name="firstColumn">First column index.</param>
      <param name="lastColumn">Last column index.</param>
      <remarks>AutoFitColumn is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitColumns(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits the columns width.
            </summary>
      <param name="firstRow">First row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="lastRow">Last row index.</param>
      <param name="lastColumn">Last column index.</param>
      <remarks>AutoFitColumn is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitRows">
      <summary>
            Autofits all rows in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitRowsMerged">
      <summary>
            Autofits all rows in this worksheet.It will also auto fit row height when the cells is merged in a row.
            </summary>
      <remarks>
            If the cells in merged in a row and auto fit the rows in MS Excel,
            MS Excel do not expand the row height.
            Aspose.Cells will expand the row height to fit the cells' data.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitRow(System.Int32)">
      <summary>
            Autofits the row height.
            </summary>
      <param name="rowIndex">Row index.</param>
      <remarks>AutoFitRow is an imprecise function.</remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitRow(System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits the row height.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="lastColumn">Last column index.</param>
      <remarks>This method autofits a row based on content in a range of cells within the row.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Autofits row height in a rectangle range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AutoFitRows(System.Int32,System.Int32)">
      <summary>
            Autofits row height in a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetAllCellsReadonly">
      <summary>
            Makes all cells readonly.this is extended attribute
            notice this attribute can not keep in actual cell,if you want to keep protect please use setProtect
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetAllCellsEditable">
      <summary>
            Makes all cells editable.this is extended attribute
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetColumnCaption(System.Int32)">
      <summary>
            Gets the column caption. If the caption is not set, returns empty string.
            </summary>
      <param name="column">Column index.</param>
      <returns>The column caption. If the caption is not set, returns empty string.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetColumnCaption(System.Int32,System.String)">
      <summary>
            Sets the caption for the column.please note this is an extension attribute and can not keep in excel file
            </summary>
      <param name="column">Column index.</param>
      <param name="caption">The column caption. Pass null or empty string if you want cancel the caption.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetIsReadonly(Aspose.Cells.GridDesktop.GridCell)">
      <summary>
            Gets whether the cell is readonly.this is an extended attribute of GridWeb ,it will not keep in actual excel file
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetIsReadonly(Aspose.Cells.GridDesktop.GridCell,System.Boolean)">
      <summary>
            Sets whether the cell is readonly.this is an extended attribute  ,it will not keep in actual excel file
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Worksheet.DEFAULT_ROWSCOUNT">
      <summary>
            Default rows count of worksheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Worksheet.DEFAULT_COLUMNSCOUNT">
      <summary>
            Default columns count of worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.IsCellFocused">
      <summary>
            Determines whether the cell is focused.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetFocusedCell">
      <summary>
            Gets the focused cell.
            </summary>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetCellLocationByClientPoint(System.Drawing.Point)">
      <summary>
            Gets the cell location by client coordinates point.
            </summary>
      <param name="clientPoint">Client coordinates point</param>
      <returns>CellLocation object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetFocusedCellLocation">
      <summary>
            Gets a cell location which is focused.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetFocusedCell(Aspose.Cells.GridDesktop.CellLocation)">
      <summary>
            Sets the cell focus at the specified location.
            </summary>
      <param name="cellLocation">Cell location.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetFocusedCell(System.Int32,System.Int32)">
      <summary>
            Sets the cell focus at the specified column and row.
            </summary>
      <param name="row">Row index.</param>
      <param name="col">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetLastSelection">
      <summary>
            Gets the cell range of last selected.
            </summary>
      <returns>CellRange object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetAllSelectedRanges">
      <summary>
            Gets all selected ranges of this worksheet.
            </summary>
      <returns>an ArrayList contains all selected CellRange objects.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AddSelectedRange(Aspose.Cells.GridDesktop.CellRange)">
      <summary>
            Add a new selected range to the worksheet.
            </summary>
      <param name="cCellRange">The added selected range</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.InSelection(Aspose.Cells.GridDesktop.CellLocation)">
      <summary>
            Determines whether the specified cell location is in selected.
            </summary>
      <param name="cellLocation">Cell location.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.ColInSelection(System.Int32)">
      <summary>
            Determines whether the specified column at index is in selected.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.RowInSelection(System.Int32)">
      <summary>
            Determines whether the specified row at index is in selected.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.ClearSelection">
      <summary>
            Clear the selection in Worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.Merge(Aspose.Cells.GridDesktop.CellRange)">
      <summary>
            Merges a specified range of cells into a single cell. 		
            </summary>
      <param name="r">CellRange of this range(zero based)</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.Unmerge(Aspose.Cells.GridDesktop.CellRange)">
      <summary>
            Unmerges a specified range of cells into a single cell. 		
            </summary>
      <param name="r">CellRange of this range(zero based)</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.Unmerge(Aspose.Cells.GridDesktop.CellLocation)">
      <summary>
            Remove the specified cell location from merges.
            </summary>
      <param name="location">Cell location.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.Unmerge(System.Int32,System.Int32)">
      <summary>
            Remove the specified cell row column index from merges.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.ClearMerges">
      <summary>
            Clear all merges.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.CellInMerged(Aspose.Cells.GridDesktop.CellLocation)">
      <summary>
            Gets a value whether the specified cell location is in merges.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.MergeFocused(Aspose.Cells.GridDesktop.CellLocation)">
      <summary>
            Gets the index of the focused merge.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.ColInMerged(System.Int32)">
      <summary>
            Gets a value that indicates whether the specified column in merges. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.RowInMerged(System.Int32)">
      <summary>
            Gets a value that indicates whether the specified row in merges.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetMerge(System.Int32)">
      <summary>
            Gets the cell range of the merge at the specified index.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.CellRangeInMerge(Aspose.Cells.GridDesktop.CellRange)">
      <summary>
            Gets a value that indicates whether the specified cell range in merges.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.DataBind(System.Object,System.String)">
      <summary>
            Binds data from data source object with Worksheet object.
            </summary>
      <param name="dataSource">The data source for GridDesktop control.</param>
      <param name="dataMember">The data member string that specifies the table to bind to within the data source object.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.DataUnbind">
      <summary>
            Unbind data from data source object with Worksheet object.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GroupRows(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstRow">The first row index to be grouped.</param>
      <param name="lastRow">The last row index to be grouped.</param>
      <param name="outlineLevel">outlineLevel</param>
      <param name="isHidden">Specifies if the grouped rows are shown.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GroupRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstRow">The first row index to be grouped.</param>
      <param name="lastRow">The last row index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped rows are shown.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.UngroupRows(System.Int32,System.Int32)">
      <summary>
            Ungroups rows.
            </summary>
      <param name="firstRow">The first row index to be ungrouped.</param>
      <param name="lastRow">The last row index to be ungrouped.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.UngroupColumns(System.Int32,System.Int32)">
      <summary>
            Ungroups columns.
            </summary>
      <param name="firstColumn">The first column index to ungrouped.</param>
      <param name="lastColumn">The last column index to ungrouped.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GroupRows(System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstRow">The first row index to be grouped.</param>
      <param name="lastRow">The last row index to be grouped.</param>
      <param name="outlineLevel">outlineLevel</param>
      <param name="isHidden">Specifies if the grouped rows are shown.</param>
      <param name="addToUndo">Specifies if this operation will be added into undo manager. And the GridDesktop's EnableUndo property must be set to true.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.UngroupRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Ungroups rows.
            </summary>
      <param name="firstRow">The first row index to be ungrouped.</param>
      <param name="lastRow">The last row index to be ungrouped.</param>
      <param name="addToUndo">Specifies if this operation will be added into undo manager. And the GridDesktop's EnableUndo property must be set to true.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.UngroupColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Ungroups columns.
            </summary>
      <param name="firstColumn">The first column index to ungrouped.</param>
      <param name="lastColumn">The last column index to ungrouped.</param>
      <param name="addToUndo">Specifies if this operation will be added into undo manager. And the GridDesktop's EnableUndo property must be set to true.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GroupColumns(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstColumn">The first column index to be grouped.</param>
      <param name="lastColumn">The last column index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped columns are hidden</param>
      <param name="addToUndo">Specifies if this operation will be added into undo manager. And the GridDesktop's EnableUndo property must be set to true.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GroupColumns(System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstColumn">The first column index to be grouped.</param>
      <param name="lastColumn">The last column index to be grouped.</param>
      <param name="outlineLevel">outlineLevel</param>
      <param name="isHidden">Specifies if the grouped columns are hidden</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GroupRows(System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstRow">The first row index to be grouped.</param>
      <param name="lastRow">The last row index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped rows are shown.</param>
      <param name="addToUndo">Specifies if this operation will be added into undo manager. And the GridDesktop's EnableUndo property must be set to true.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GroupRows(System.Int32,System.Int32)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstRow">The first row index to be grouped.</param>
      <param name="lastRow">The last row index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GroupColumns(System.Int32,System.Int32)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstColumn">The first column index to be grouped.</param>
      <param name="lastColumn">The last column index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetFirstVisibleColumn(System.Int32)">
      <summary>
            Set the first visible column index of sheet view.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetFirstVisibleColumn">
      <summary>
            Get the first visible column index of sheet view.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetFirstVisibleRow(System.Int32)">
      <summary>
            Set the first visible row index of sheet view.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.GetFirstVisibleRow">
      <summary>
            Get the first visible row index of sheet view.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AddColumn">
      <summary>
            Adds a new column.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.InsertColumn(System.Int32)">
      <summary>
            Inserts a new column.
            </summary>
      <param name="index">Index of column is inserted.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.AddRow">
      <summary>
            Adds a new row.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.InsertRow(System.Int32)">
      <summary>
            Inserts a new row.
            </summary>
      <param name="index">row index is inserted.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.RemoveColumn(System.Int32)">
      <summary>
            Removes a column at the specified index.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.RemoveRow(System.Int32)">
      <summary>
            Removes a row at the specified index.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.CellIndexToR1C1(System.Int32,System.Int32)">
      <summary>
            Gets cell r1c1 style name according to its row and column indexes.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>R1C1 style name of cell.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetProtected(Aspose.Cells.GridDesktop.CellRange,System.Boolean)">
      <summary>
            Sets cellRange whether it is protected.this is an extended method used only in Grid.
            This method has nothing to do with the cell.Style.CellLocked property  
            It will not take affect after  save to excel file.
            </summary>
      <param name="range">CellRange object.</param>
      <param name="isProtected">Bool value to be set.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.ExportDataTable(System.Data.DataTable,System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Exports data in the Cells collection of a Worksheet to a specifed DataTable object. 
            </summary>
      <param name="dataTable">The DataTable object that exports data to.</param>
      <param name="startRow">The row number of the first cell to export out.</param>
      <param name="startColumn">The column number of the first cell to export out.</param>
      <param name="rows">Number of rows to be imported.</param>
      <param name="columns">Number of columns to be imported.</param>
      <param name="isVertical">True if a row in the control represents a row in DataTable. False if a column in the control represents a row in DataTable.</param>
      <returns>Exported DataTable object.</returns>
      <remarks>The method permits first create a DataTable object. Then exports data to the DataTable object. If dataTable don't be set valid, the method will return a new DataTable object by calling overload method 'Export(bool exportColumnName, bool isVertical)'.</remarks>
      <example>
        <code>
            [C#]
            
            DataTable dataTable = new DataTable();
            dataTable.Columns.Add("Column a",System.Type.GetType("System.String"));
            dataTable.Columns.Add("Column b");
            dataTable.Columns.Add("Column c");
            dataTable.Columns.Add("Column d",System.Type.GetType("System.Double"));
            dataTable.Columns.Add("Column e",System.Type.GetType("System.Int32"));
            dataTable.Columns.Add("Column f",System.Type.GetType("System.Int32"));
            DataTable exportTable = gridDesktop.Worksheets[0].Export(dataTable,1,0,10,6,true);
            DataGrid1.SetDataBinding(exportTable, null);
            
            [VB]
            
            Dim dataTable As DataTable =  New DataTable() 
            dataTable.Columns.Add("Column a",System.Type.GetType("System.String"))
            dataTable.Columns.Add("Column b")
            dataTable.Columns.Add("Column c")
            dataTable.Columns.Add("Column d",System.Type.GetType("System.Double"))
            dataTable.Columns.Add("Column e",System.Type.GetType("System.Int32"))
            dataTable.Columns.Add("Column f",System.Type.GetType("System.Int32"))
            Dim exportTable As DataTable =  GridDesktop.Worksheets(0).Export(dataTable,1,0,10,6,True) 
            DataGrid1.SetDataBinding(exportTable)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.ExportDataTable(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Exports data in the Cells collection of a Worksheet to a new DataTable object.
            </summary>
      <param name="startRow">The row number of the first cell to export out.</param>
      <param name="startColumn">The column number of the first cell to export out.</param>
      <param name="rows">Number of rows to be imported.</param>
      <param name="columns">Number of columns to be imported.</param>
      <param name="exportColumnName">Indicates whether the data in the first row are exported to the column name of the DataTable.</param>
      <param name="isVertical">True if a row in the control represents a row in DataTable. False if a column in the control represents a row in DataTable.</param>
      <returns>Exported DataTable object.</returns>
      <example>
        <code>
            [C#]
            
            DataTable exportTable = gridDesktop.Worksheets[0].Export(0,0,10,2,true,false);
            DataGrid1.SetDataBinding(exportTable, null);
            
            [VB]
            
            Dim exportTable As DataTable =  GridDesktop.Worksheets(0).Export(0,0,10,2,True,False) 
            DataGrid1.SetDataBinding(exportTable)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.ImportDataTable(System.Data.DataTable,System.Boolean,System.Int32,System.Int32)">
      <summary>
            Imports a DataTable object into a worksheet. 
            </summary>
      <param name="dataTable">The DataTable object to be imported.</param>
      <param name="isFieldNameShown">Indicates whether the field name of the datatable will be imported to the first row.</param>
      <param name="firstRow">The row number of the first cell to import.</param>
      <param name="firstColumn">The column number of the first cell to import.</param>
      <returns>Total number of rows imported.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetStyle(Aspose.Cells.GridDesktop.CellRange,Aspose.Cells.GridDesktop.Style)">
      <summary>
            Sets style object to cellRange.
            </summary>
      <param name="range">CellRange object.</param>
      <param name="style">Style object to be set.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetStyle(Aspose.Cells.GridDesktop.Data.GridCellArea,Aspose.Cells.GridDesktop.Style)">
      <summary>
            Sets style object to cellRange.
            </summary>
      <param name="area">GridCellArea object.</param>
      <param name="style">Style object to be set.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetFont(Aspose.Cells.GridDesktop.CellRange,System.Drawing.Font)">
      <summary>
            Sets font object to cellRange.
            </summary>
      <param name="range">CellRange object.</param>
      <param name="font">Font object to be set.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.Worksheet.SetFontColor(Aspose.Cells.GridDesktop.CellRange,System.Drawing.Color)">
      <summary>
            Sets font color to cellRange.
            </summary>
      <param name="range">CellRange object.</param>
      <param name="color">Font color to be set.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.Name">
      <summary>
            Gets or sets the name of the worksheet.
            </summary>
      <remarks>The max length of sheet name is 31. And you cannot assign same name(case insensitive) to two worksheets.
            For example, you cannot set "SheetName1" to the first worksheet and set "SHEETNAME1" to the second worksheet.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.Index">
      <summary>
            Gets the index of sheet in the worksheets collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.Controls">
      <summary>
            Gets the cell control collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.GridlinesVisible">
      <summary>
            Gets or sets a value indicating whether the gridelines are visible.Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.DisplayZeros">
      <summary>
            True if zero values are displayed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.OutlineShown">
      <summary>
            Indicates whether show outline.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.Selected">
      <summary>
            Indicates whether this worksheet is selected when the workbook is opened.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.Pictures">
      <summary>
            Gets a <see cref="P:Aspose.Cells.GridDesktop.Worksheet.Pictures" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.Shapes">
      <summary>
            Gets a <see cref="P:Aspose.Cells.GridDesktop.Worksheet.Pictures" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.Hyperlinks">
      <summary>
            Gets the <see cref="T:Aspose.Cells.HyperlinkCollection" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.Validations">
      <summary>
            Gets the data validation setting collection in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.RowFilter">
      <summary>
            Gets the RowFilterSettings object of the sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.FirstVisibleRow">
      <summary>
            Represents first visible row index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.Zoom">
      <summary>
            Represents the scaling factor in percent. It should be between 10 and 400.
            </summary>
      <remarks>Please set the view type first.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.TabColor">
      <summary>
            Represents worksheet tab color.
            </summary>
      <remarks>This feature is only supported in ExcelXP(Excel2002) and above version. If you save file as Excel97 or Excel2000 format, it will be omitted.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.CodeName">
      <summary>
            Represents worksheet code name.
            </summary>
      <remarks>You cannot change the code name while the template file contains VBA/macro.</remarks>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.BackgroundImage">
      <summary>
            Gets and sets worksheet background image.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.PivotTables">
      <summary>
            Gets the pivotTables in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.GridDesktop">
      <summary>
            Gets Sheet's GridDesktop object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.FrozenRows">
      <summary>
            Gets or sets Worksheet's frozen row count.
            Frozen will start at first row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.FrozenCols">
      <summary>
            Gets or sets Worksheet's frozen column count.
            Frozen will start at first column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.MergesCount">
      <summary>
            Gets the count of the merges 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.DataSource">
      <summary>
            Gets the specific list in a DataSource for Worksheet object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.DataMember">
      <summary>
            Gets the data source that the Worksheet object is displaying data for.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.CustomRowCaption">
      <summary>
            Gets or sets the custom row  caption  for the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Worksheet.CustomColumnCaption">
      <summary>
            Gets or sets the custom column caption  for the worksheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.WorksheetCollection">
      <summary>
             Collects the <seealso cref="T:Aspose.Cells.Row" /> objects that represent the individual rows in a worksheet.
             </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.IndexOf(Aspose.Cells.GridDesktop.Worksheet)">
      <summary>
            Searches for the specified sheet and returns the zero-based index of the first occurrence within the entire WorksheetCollection.
            </summary>
      <param name="sheet">
            The sheet to locate in the WorksheetCollection.  
            </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.GetEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.Add">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.GridDesktop.Worksheet" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.Add(System.String)">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <param name="sheetName">Worksheet name</param>
      <returns>
        <see cref="T:Aspose.Cells.GridDesktop.Worksheet" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the element at a specified index.
            </summary>
      <param name="index">The index value of the element to remove.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.RemoveAt(System.String)">
      <summary>
            Removes the element at a specified name.
            </summary>
      <param name="name">The name of the element to remove.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.SetVisible(System.String,System.Boolean)">
      <summary>
            Sets the visible options.
            </summary>
      <param name="isVisible">Whether the worksheet is visible</param>
      <param name="ignoreError">Whether ignore error if this option is not valid.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.AddCopy(System.String)">
      <summary>
            Adds a worksheet to the collection and copies data from an existed worksheet.
            </summary>
      <param name="sheetName">Name of source worksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.GridDesktop.Worksheet" /> object index.</returns>
      <exception cref="T:Aspose.Cells.CellsException">Specifies an invalid worksheet name.</exception>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.AddCopy(System.Int32)">
      <summary>
            Adds a worksheet to the collection and copies data from an existed worksheet.
            </summary>
      <param name="sheetIndex">Index of source worksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.GridDesktop.Worksheet" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.Clear">
      <summary>
            Clear all worksheets.
            </summary>
      <remarks>
            A workbook must contains a worksheet.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.Insert(System.Int32,System.String)">
      <param name="sheetName">The sheet name.</param>
      <returns>Returns an inserted worksheet.</returns>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.SwapSheet(System.Int32,System.Int32)">
      <summary>
            Swaps the two sheets.
            </summary>
      <param name="sheetIndex1">The first worksheet.</param>
      <param name="sheetIndex2">The second worksheet.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.CalculateFormula">
      <summary>
            Calculates the result of formulas.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.Remove(System.Int32)">
      <summary>
            Removes the worksheet at the specified index of the WorksheetCollection.
            If the specific sheet is the last sheet,after removes sheet,will add a new sheet to the WorksheetCollection.
            </summary>
      <param name="index">The zero-based index of the worksheet to remove.</param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.WorksheetCollection.Insert(System.Int32)">
      <summary>
            Inserts an worksheet into the WorksheetCollection at the specified index.
            This worksheet row count is 256,column count is 32.
            The worksheet name will be generated by Add() method.
            </summary>
      <param name="index">The zero-based index at which worksheet should be inserted.</param>
      <returns>Return Worksheet object is added.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.WorksheetCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.GridDesktop.Worksheet" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.WorksheetCollection.Item(System.String)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.GridDesktop.Worksheet" /> element with the specified name.
             </summary>
      <param name="sheetName">The name of the worksheet.</param>
      <returns>The Worksheet with the name.</returns>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.WorksheetCollection.DefaultFontName">
      <summary>
             Gets or sets the control's default font name.
             </summary>
      <example>
        <code>
             [C#]
            		GridWeb1.DefaultFontName = "Arial";
            
            	[Visual Basic]
            		GridWeb1.DefaultFontName = "Arial"
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.WorksheetCollection.Names">
      <summary>
            Gets the collection of all the Name objects in the spreadsheet. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.ICustomValidation">
      <summary>
            Interface of a gridcell's custom validation.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.ICustomValidation.Validate(Aspose.Cells.GridDesktop.Worksheet,System.Int32,System.Int32,System.Object)">
      <summary>
            Validate a gridcell's data is valid or not.
            </summary>
      <param name="worksheet">Worksheet object.</param>
      <param name="row">Row index.</param>
      <param name="col">Column index.</param>
      <param name="value">Value to be validated.</param>
      <returns>True is valid, false is invalid.</returns>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.NumberType">
      <summary>
            Represents the number or datetime format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.General">
      <summary>
            General
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Decimal1">
      <summary>
            Decimal 0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Decimal2">
      <summary>
            Decimal 0.00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Decimal3">
      <summary>
            Decimal #,##0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Decimal4">
      <summary>
            Decimal #,##0.00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency1">
      <summary>
            Currency $#,##0;$-#,##0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency2">
      <summary>
            Currency $#,##0;[Red]$-#,##0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency3">
      <summary>
            Currency $#,##0.00;$-#,##0.00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency4">
      <summary>
            Currency $#,##0.00;[Red]$-#,##0.00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Percentage1">
      <summary>
            Percentage 0%
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Percentage2">
      <summary>
            Percentage 0.00%
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Scientific1">
      <summary>
            Scientific 0.00E+00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Fraction1">
      <summary>
            Fraction # ?/?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Fraction2">
      <summary>
            Fraction # ??/??
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Date1">
      <summary>
            Date m/d/yyyy
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Date2">
      <summary>
             Date d-mmm-yy
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Date3">
      <summary>
            Date d-mmm
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Date4">
      <summary>
            Date mmm-yy
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Time1">
      <summary>
            Time h:mm AM/PM
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Time2">
      <summary>
            Time h:mm:ss AM/PM
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Time3">
      <summary>
            Time h:mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Time4">
      <summary>
            Time h:mm:ss
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Time5">
      <summary>
            Time m/d/yy h:mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency5">
      <summary>
            Currency #,##0;-#,##0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency6">
      <summary>
            Currency #,##0;[Red]-#,##0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency7">
      <summary>
            Currency #,##0.00;-#,##0.00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency8">
      <summary>
            Currency #,##0.00;[Red]-#,##0.00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Accounting1">
      <summary>
            Accounting _ * #,##0_ ;_ * -#,##0_ ;_ * "-"_ ;_ @_
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Accounting2">
      <summary>
            Accounting _ $* #,##0_ ;_ $* -#,##0_ ;_ $* "-"_ ;_ @_
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Accounting3">
      <summary>
            Accounting _ * #,##0.00_ ;_ * -#,##0.00_ ;_ * "-"??_ ;_ @_
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Accounting4">
      <summary>
            Accounting _ $* #,##0.00_ ;_ $* -#,##0.00_ ;_ $* "-"??_ ;_ @_
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Time6">
      <summary>
            Time mm:ss
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Time7">
      <summary>
            Time [h]:mm:ss
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Time8">
      <summary>
            Time mm:ss.0
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Scientific2">
      <summary>
            Scientific ##0.0E+00
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Text">
      <summary>
            Text @
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency9">
      <summary>
            Currency $#,##0;($#,##0)
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency10">
      <summary>
            Currency $#,##0;[Red]($#,##0)
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency11">
      <summary>
            Currency $#,##0.00;($#,##0.00)
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.Currency12">
      <summary>
            Currency $#,##0.00;[Red]($#,##0.00)
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate1">
      <summary>
            Date YYYY?M?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate2">
      <summary>
            Date M?D?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate3">
      <summary>
            Date M?D?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate4">
      <summary>
            Date M/D/YY
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate5">
      <summary>
            Date YYYY?M?D?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate6">
      <summary>
            Date YYYY?M?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate7">
      <summary>
            Date YYYY?M?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate8">
      <summary>
            Date M?D?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate9">
      <summary>
            Date YYYY?M?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate10">
      <summary>
            Date M?D?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate11">
      <summary>
            Date M?D?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate12">
      <summary>
            Date YYYY?M?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternDate13">
      <summary>
            Date M?D?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternTime1">
      <summary>
            Time h?mm?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternTime2">
      <summary>
            Time h?mm?ss?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternTime3">
      <summary>
            Time tth?mm?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternTime4">
      <summary>
            Time tth?mm?ss?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternTime5">
      <summary>
            Time tth?mm?
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.NumberType.EasternTime6">
      <summary>
            Time tth?mm?ss?
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.OnErrorActionQuery">
      <summary>
            Used in the CellError event of the GridWeb.
            </summary>
      <example>
        <code>
            [C#]
            onErrorActionQuery.OnErrorAction = OnErrorActionType.Ignore;
            [VB]
            onErrorActionQuery.OnErrorAction = OnErrorActionType.Ignore
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.Data.OnErrorActionQuery.OnErrorAction">
      <summary>
            Gets or set the action type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.OnErrorActionType">
      <summary>
            Used in CellError event of the GridWeb. User set the OnErrorActionQuery.OnErrorAction to tell the control Stop processing or Ignore error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.OnErrorActionType.Throw">
      <summary>
            Throws the current exception.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.OnErrorActionType.Stop">
      <summary>
            Stops current processing.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.OnErrorActionType.Ignore">
      <summary>
            Ignores the error and continue processing.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.RowColumnType">
      <summary>
            Represents the row/column type of the row/column events.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.RowColumnType.Row">
      <summary>
            Row type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.RowColumnType.Column">
      <summary>
            Column type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.RowColumnEventArgs">
      <summary>
            Provides data for row/column events.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.RowColumnEventArgs.RejectOperation">
      <summary>
             Call this method in RowDeleting/ColumnDeleting event handlers to cancel the deleting operations.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowColumnEventArgs.Type">
      <summary>
            The row or column type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowColumnEventArgs.Num">
      <summary>
            The row or column number, starts from zero.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowColumnEventArgs.Argument">
      <summary>
            The argument of the event.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.RowColumnEventArgs.IsCancel">
      <summary>
            shall we cancel the operation.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.RowColumnEventHandler">
      <summary>
            Represents the interface that intend to handle row/column events.
            <para>void <b>handleCellEvent</b>(Object sender, RowColumnEventArgs e);</para></summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument. Call e.RejectOperation() if you want to cancel the deleting operation in RowDeleting or ColumnDeleting event handlers.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.WebCellErrorType">
      <summary>
            Used in WebCellException. Represents the cell error type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.WebCellErrorType.ValidationError">
      <summary>
            The cell's validation failed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.WebCellErrorType.DataSourceInsertError">
      <summary>
            When insert the sheet's binding row to datasource, an error occured.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.WebCellErrorType.DataSourceUpdateError">
      <summary>
            When update the sheet's binding row or object's field, an error occured.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.Data.WebCellErrorType.DataSourceDeleteError">
      <summary>
            When delete the sheet's binding row to datasource, an error occured.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.WorkbookEventHandler">
      <summary>
            Represents the interface that intend to handle workbook events.
            <para>void <b>handleCellEvent</b>(Object sender, CellEventArgs e);</para></summary>
      <param name="sender">The source of the event.</param>
      <param name="e">The event argument.</param>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.GridBackgroundType">
      <summary>
            Enumerates cell background pattern types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.DiagonalCrosshatch">
      <summary>
            Represents diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.DiagonalStripe">
      <summary>
            Represents diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.Gray6">
      <summary>
            Represents 6.25% gray pattern
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.Gray12">
      <summary>
            Represents 12.5% gray pattern
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.Gray25">
      <summary>
            Represents 25% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.Gray50">
      <summary>
            Represents 50% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.Gray75">
      <summary>
            Represents 75% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.HorizontalStripe">
      <summary>
            Represents horizontal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.None">
      <summary>
            Represents no background.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.ReverseDiagonalStripe">
      <summary>
            Represents reverse diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.Solid">
      <summary>
            Represents solid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.ThickDiagonalCrosshatch">
      <summary>
            Represents thick diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.ThinDiagonalCrosshatch">
      <summary>
            Represents thin diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.ThinDiagonalStripe">
      <summary>
            Represents thin diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.ThinHorizontalCrosshatch">
      <summary>
            Represents thin horizontal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.ThinHorizontalStripe">
      <summary>
            Represents thin horizontal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.ThinReverseDiagonalStripe">
      <summary>
            Represents thin reverse diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.ThinVerticalStripe">
      <summary>
            Represents thin vertical stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.GridBackgroundType.VerticalStripe">
      <summary>
            Represents vertical stripe pattern.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
      <example>
        <code>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <p>2. The folder that contains the Aspose component assembly.</p>
        <p>3. The folder that contains the client's calling assembly.</p>
        <p>4. The folder that contains the entry (startup) assembly.</p>
        <p>5. An embedded resource in the client's calling assembly.</p>
        <p>
          <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
        <p>1. Explicit path.</p>
        <p>2. An embedded resource in the client's calling assembly.</p>
      </remarks>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code><param name="licenseName">Can be a full or short file name or name of an embedded resource.
            Use an empty string to switch to evaluation mode.</param></example>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.UndoManager">
      <summary>
            Encapsulates the object that manages the undo/redo operations.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.UndoManager.Redo">
      <summary>
            Performs a redo operation.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.UndoManager.Undo">
      <summary>
            Performs an undo operation.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.UndoManager.RedoMark">
      <summary>
            Performs a redo operation with mark.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.UndoManager.UndoMark">
      <summary>
            Performs an undo operation with mark.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.UndoManager.ClearStack">
      <summary>
            Clears the Undo and Redo stacks.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.UndoManager.BeginChanges">
      <summary>
            Begins to record changes.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.UndoManager.EndChanges">
      <summary>
            Ends to record changes.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.UndoManager.BeginMark">
      <summary>
            Begins to mark changes.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.UndoManager.EndMark">
      <summary>
            Ends to mark changes.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.UndoManager.RedoStepsCount">
      <summary>
            Gets the current available redo steps count. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.UndoManager.UndoStepsCount">
      <summary>
            Gets the current available undo steps count. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.UndoManager.UndoStackSize">
      <summary>
            Gets or sets the undo/redo stack size. The default value is 300.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.UndoManager.Enabled">
      <summary>
            Gets or sets a value indicating whether the Undo function is enabled. The default value is false.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.ToolBar.FormulaBar">
      <summary>
            FormulaBar
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.ToolBar.FormulaBar.#ctor">
      <summary>
            Default constructor.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.ToolBar.FormulaBar.#ctor(Aspose.Cells.GridDesktop.GridDesktop)">
      <summary>
            Constructs a FormulaBar with the specified GridDesktop control.
            </summary>
      <param name="gridDesktop">
      </param>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.ToolBar.FormulaBar.Dispose(System.Boolean)">
      <summary> 
            Clean up any resources being used.
            </summary>
      <param name="disposing">true if managed resources should be disposed; otherwise, false.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ToolBar.FormulaBar.GridDesktop">
      <summary>
            Gets or sets a GridDesktop control that this FormalBar will apply to.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.VerticalAlignmentType">
      <summary>
            Specifies how a gridcell is vertically aligned.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.VerticalAlignmentType.Top">
      <summary>
            The object or text is aligned on the top of the gridcell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.VerticalAlignmentType.Centred">
      <summary>
            The object or text is aligned in the center of the gridcell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.VerticalAlignmentType.Bottom">
      <summary>
            The object or text is aligned on the bottom of the gridcell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.VerticalAlignmentType.Justified">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.VerticalAlignmentType.Distributed">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.HorizontalAlignmentType">
      <summary>
            Specifies how a gridcell is horizontally aligned.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.HorizontalAlignmentType.General">
      <summary>
            If object type is number,object is aligned on the right of the girdcell.
            If object type is string,object is aligned on the left of the girdcell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.HorizontalAlignmentType.Left">
      <summary>
            The object or text is aligned on the left of the gridcell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.HorizontalAlignmentType.Centred">
      <summary>
            The object or text is aligned in the center of the gridcell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.HorizontalAlignmentType.Right">
      <summary>
            The object or text is aligned on the right of the gridcell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.HorizontalAlignmentType.Filled">
      <summary>
            The object or text is Filled in the gridcell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.HorizontalAlignmentType.Justified">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.HorizontalAlignmentType.CentredAcross">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.HorizontalAlignmentType.Distributed">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.ThemeColor">
      <summary>
            Represents a theme color.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GridDesktop.ThemeColor.#ctor(Aspose.Cells.GridDesktop.ThemeColorType,System.Double)">
      <summary>
      </summary>
      <param name="type">The theme type.</param>
      <param name="tint">The tint value.</param>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ThemeColor.ColorType">
      <summary>
            Gets and sets the theme type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.GridDesktop.ThemeColor.Tint">
      <summary>
            Gets and sets the tint value.
            The tint value is stored as a double from -1.0 .. 1.0, where -1.0 means 100%
            darken and 1.0 means 100% lighten. Also, 0.0 means no change.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.ThemeColorType">
      <summary>
            Enumerates  the theme color types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Background1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Text1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Background2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Text2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.Hyperlink">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.GridDesktop.ThemeColorType.FollowedHyperlink">
      <summary>
      </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Aspose.Cells.ExternalConnections.ExternalConnection.ReconnectionMethod" -->
    <member name="T:Aspose.Cells.GridDesktop.NamespaceDoc">
      <summary>
            The basic namespace of GridDesktop.
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.Data.NamespaceDoc">
      <summary>
            The namespace of basic data represented classes of GridDesktop. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.GridDesktop.ToolBar.NamespaceDoc">
      <summary>
            The namespace of toolbar for GridDesktop control.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "F:Aspose.Cells.ExternalConnections.ConnectionDataSourceType.DataFeedDataModel" -->
    <!-- Badly formed XML comment ignored for member "M:Aspose.Cells.FormulaModel.ReferenceParser.ParseA1Address(System.Char[],System.Int32,System.Int32,System.Int32,System.Int32)" -->
    <!-- Badly formed XML comment ignored for member "M:Aspose.Cells.ExternalRow.GetPosition(Aspose.Cells.CellsSs.CellData,System.Int32,System.Int16,System.Boolean,System.Boolean)" -->
    <!-- Badly formed XML comment ignored for member "M:Aspose.Cells.Name.GetRanges(System.Int32)" -->
  </members>
</doc>