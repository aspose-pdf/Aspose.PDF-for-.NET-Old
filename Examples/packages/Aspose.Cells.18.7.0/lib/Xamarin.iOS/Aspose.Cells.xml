<?xml version="1.0"?>
<doc>
  <assembly>
    <name>Aspose.Cells</name>
  </assembly>
  <members>
    <member name="T:Aspose.Cells.CellsFactory">
      <summary>
            Represents the factory of the cells's classes 
            </summary>
    </member>
    <member name="M:Aspose.Cells.CellsFactory.CreateStyle">
      <summary>
            Creates a new style.
            </summary>
      <returns>Returns a style object.</returns>
    </member>
    <member name="T:Aspose.Cells.Charts.NamespaceDoc">
      <summary>
            Contains all classes of chart and sparkline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ErrorBarDisplayType">
      <summary>
            Represents error bar display type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarDisplayType.Both">
      <summary>
            Both
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarDisplayType.Minus">
      <summary>
            Minus
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarDisplayType.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarDisplayType.Plus">
      <summary>
            Plus
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.LabelPositionType">
      <summary>
            Represents data label position type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Center">
      <summary>
            Applies only to bar, 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.InsideBase">
      <summary>
            Applies only to bar, 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.InsideEnd">
      <summary>
            Applies only to bar charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.OutsideEnd">
      <summary>
            Applies only to bar, 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Above">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Below">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Left">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Right">
      <summary>
            Applies only to line charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.BestFit">
      <summary>
            Applies only to 2d/3d pie charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LabelPositionType.Moved">
      <summary>
            User moved the data labels, Only for reading chart from template file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.SparklineAxisMinMaxType">
      <summary>
            Represents the minimum and maximum value types for the sparkline vertical axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineAxisMinMaxType.AutoIndividual">
      <summary>
            Automatic for each sparkline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineAxisMinMaxType.Group">
      <summary>
            Same for all sparklines in the group.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineAxisMinMaxType.Custom">
      <summary>
            InnerCustom value for sparkline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.SparklinePresetStyleType">
      <summary>
            Represents the preset style types for sparkline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style1">
      <summary>
            Style 1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style2">
      <summary>
            Style 2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style3">
      <summary>
            Style 3
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style4">
      <summary>
            Style 4
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style5">
      <summary>
            Style 5
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style6">
      <summary>
            Style 6
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style7">
      <summary>
            Style 7
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style8">
      <summary>
            Style 8
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style9">
      <summary>
            Style 9
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style10">
      <summary>
            Style 10
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style11">
      <summary>
            Style 11
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style12">
      <summary>
            Style 12
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style13">
      <summary>
            Style 13
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style14">
      <summary>
            Style 14
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style15">
      <summary>
            Style 15
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style16">
      <summary>
            Style 16
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style17">
      <summary>
            Style 17
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style18">
      <summary>
            Style 18
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style19">
      <summary>
            Style 19
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style20">
      <summary>
            Style 20
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style21">
      <summary>
            Style 21
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style22">
      <summary>
            Style 22
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style23">
      <summary>
            Style 23
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style24">
      <summary>
            Style 24
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style25">
      <summary>
            Style 25
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style26">
      <summary>
            Style 26
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style27">
      <summary>
            Style 27
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style28">
      <summary>
            Style 28
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style29">
      <summary>
            Style 29
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style30">
      <summary>
            Style 30
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style31">
      <summary>
            Style 31
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style32">
      <summary>
            Style 32
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style33">
      <summary>
            Style 33
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style34">
      <summary>
            Style 34
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style35">
      <summary>
            Style 35
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Style36">
      <summary>
            Style 36
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklinePresetStyleType.Custom">
      <summary>
            No preset style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.SparklineType">
      <summary>
            Represents the sparkline types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineType.Line">
      <summary>
            Line sparkline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineType.Column">
      <summary>
            Column sparkline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.SparklineType.Stacked">
      <summary>
            Win/Loss sparkline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.AxisType">
      <summary>
            Represents the axis type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.AxisType.Category">
      <summary>
            Category axis 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.AxisType.Value">
      <summary>
            Value axis
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.AxisType.Series">
      <summary>
            Series axis
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.CategoryType">
      <summary>
            Represents the category axis type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CategoryType.AutomaticScale">
      <summary>
            AutomaticScale
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CategoryType.CategoryScale">
      <summary>
            CategoryScale
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CategoryType.TimeScale">
      <summary>
            TimeScale
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.CrossType">
      <summary>
            Represents the axis cross type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CrossType.Automatic">
      <summary>
            Microsoft Excel sets the axis crossing point.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CrossType.Maximum">
      <summary>
            The axis crosses at the maximum value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.CrossType.Custom">
      <summary>
            The axis crosses at the custom value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.TimeUnit">
      <summary>
            Represents the base unit for the category axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TimeUnit.Days">
      <summary>
            Days
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TimeUnit.Months">
      <summary>
            Months
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TimeUnit.Years">
      <summary>
            Years
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.BackgroundMode">
      <summary>
            Represents the display mode of the background.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.BackgroundMode.Automatic">
      <summary>
            Automatic
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.BackgroundMode.Opaque">
      <summary>
            Opaque
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.BackgroundMode.Transparent">
      <summary>
            Transparent
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.Bar3DShapeType">
      <summary>
            Represents the shape used with the 3-D bar or column chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.Box">
      <summary>
            Box
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.PyramidToPoint">
      <summary>
            PyramidToPoint
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.PyramidToMax">
      <summary>
            PyramidToMax
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.Cylinder">
      <summary>
            Cylinder
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.ConeToPoint">
      <summary>
            ConeToPoint
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.Bar3DShapeType.ConeToMax">
      <summary>
            ConeToMax
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.BubbleSizeRepresents">
      <summary>
            Represents what the bubble size represents on a bubble chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.BubbleSizeRepresents.SizeIsArea">
      <summary>
            Represents the value of <see cref="!:Series.BubbleSizes" /> is area of the bubble.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.BubbleSizeRepresents.SizeIsWidth">
      <summary>
            Represents the value of <see cref="!:Series.BubbleSizes" /> is width of the bubble.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartMarkerType">
      <summary>
            Represents the marker style in a line chart, scatter chart, or radar chart. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Automatic">
      <summary>
            Automatic markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Circle">
      <summary>
            Circular markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Dash">
      <summary>
            Long bar markers
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Diamond">
      <summary>
            Diamond-shaped markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Dot">
      <summary>
            Short bar markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.None">
      <summary>
            No markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.SquarePlus">
      <summary>
            Square markers with a plus sign.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Square">
      <summary>
            Square markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.SquareStar">
      <summary>
            Square markers with an asterisk.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Triangle">
      <summary>
            Triangular markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.SquareX">
      <summary>
            Square markers with an X.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartMarkerType.Picture">
      <summary>
            Picture
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartSplitType">
      <summary>
            Represents the way the two sections of either a pie of pie chart or a bar of pie chart are split.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartSplitType.Position">
      <summary>
            Represents the data points shall be split between the pie
            and the second chart by putting the last Split Position
            of the data points in the second chart
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartSplitType.Value">
      <summary>
            Represents the data points shall be split between the pie
            and the second chart by putting the data points with
            value less than Split Position in the second chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartSplitType.PercentValue">
      <summary>
            Represents the data points shall be split between the pie
            and the second chart by putting the points with
            percentage less than Split Position percent in the
            second chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartSplitType.Custom">
      <summary>
            Represents the data points shall be split between the pie
            and the second chart according to the InnerCustom Split
            values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartSplitType.Auto">
      <summary>
            Represents the data points shall be split using the default
            mechanism for this chart type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartType">
      <summary>
            Enumerates all chart types used in Excel.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Area">
      <summary>
            Represents Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.AreaStacked">
      <summary>
            Represents Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Area100PercentStacked">
      <summary>
            Represents 100% Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Area3D">
      <summary>
            Represents 3D Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Area3DStacked">
      <summary>
            Represents 3D Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Area3D100PercentStacked">
      <summary>
            Represents 3D 100% Stacked Area Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bar">
      <summary>
            Represents Bar Chart: Clustered Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.BarStacked">
      <summary>
            Represents Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bar100PercentStacked">
      <summary>
            Represents 100% Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bar3DClustered">
      <summary>
            Represents 3D Colustered Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bar3DStacked">
      <summary>
            Represents 3D Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bar3D100PercentStacked">
      <summary>
            Represents 3D 100% Stacked Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bubble">
      <summary>
            Represents Bubble Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Bubble3D">
      <summary>
            Represents 3D Bubble Chart. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column">
      <summary>
            Represents Column Chart: Clustered Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ColumnStacked">
      <summary>
            Represents Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column100PercentStacked">
      <summary>
            Represents 100% Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column3D">
      <summary>
            Represents 3D Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column3DClustered">
      <summary>
            Represents 3D Colustered Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column3DStacked">
      <summary>
            Represents 3D Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Column3D100PercentStacked">
      <summary>
            Represents 3D 100% Stacked Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Cone">
      <summary>
            Represents Cone Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ConeStacked">
      <summary>
            Represents Stacked Cone Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Cone100PercentStacked">
      <summary>
            Represents 100% Stacked Cone Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ConicalBar">
      <summary>
            Represents Conical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ConicalBarStacked">
      <summary>
            Represents Stacked Conical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ConicalBar100PercentStacked">
      <summary>
            Represents 100% Stacked Conical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ConicalColumn3D">
      <summary>
            Represents 3D Conical Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Cylinder">
      <summary>
            Represents Cylinder Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.CylinderStacked">
      <summary>
            Represents Stacked Cylinder Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Cylinder100PercentStacked">
      <summary>
            Represents 100% Stacked Cylinder Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.CylindricalBar">
      <summary>
            Represents Cylindrical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.CylindricalBarStacked">
      <summary>
            Represents Stacked Cylindrical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.CylindricalBar100PercentStacked">
      <summary>
            Represents 100% Stacked Cylindrical Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.CylindricalColumn3D">
      <summary>
            Represents 3D Cylindrical Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Doughnut">
      <summary>
            Represents Doughnut Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.DoughnutExploded">
      <summary>
            Represents Exploded Doughnut Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Line">
      <summary>
            Represents Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.LineStacked">
      <summary>
            Represents Stacked Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Line100PercentStacked">
      <summary>
            Represents 100% Stacked Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.LineWithDataMarkers">
      <summary>
            Represents Line Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.LineStackedWithDataMarkers">
      <summary>
            Represents Stacked Line Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Line100PercentStackedWithDataMarkers">
      <summary>
            Represents 100% Stacked Line Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Line3D">
      <summary>
            Represents 3D Line Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Pie">
      <summary>
            Represents Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Pie3D">
      <summary>
            Represents 3D Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PiePie">
      <summary>
            Represents Pie of Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PieExploded">
      <summary>
            Represents Exploded Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Pie3DExploded">
      <summary>
            Represents 3D Exploded Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PieBar">
      <summary>
            Represents Bar of Pie Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Pyramid">
      <summary>
            Represents Pyramid Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PyramidStacked">
      <summary>
            Represents Stacked Pyramid Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Pyramid100PercentStacked">
      <summary>
            Represents 100% Stacked Pyramid Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PyramidBar">
      <summary>
            Represents Pyramid Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PyramidBarStacked">
      <summary>
            Represents Stacked Pyramid Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PyramidBar100PercentStacked">
      <summary>
            Represents 100% Stacked Pyramid Bar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.PyramidColumn3D">
      <summary>
            Represents 3D Pyramid Column Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Radar">
      <summary>
            Represents Radar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.RadarWithDataMarkers">
      <summary>
            Represents Radar Chart with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.RadarFilled">
      <summary>
            Represents Filled Radar Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Scatter">
      <summary>
            Represents Scatter Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ScatterConnectedByCurvesWithDataMarker">
      <summary>
            Represents Scatter Chart connected by curves, with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ScatterConnectedByCurvesWithoutDataMarker">
      <summary>
            Represents Scatter Chart connected by curves, without data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ScatterConnectedByLinesWithDataMarker">
      <summary>
            Represents Scatter Chart connected by lines, with data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ScatterConnectedByLinesWithoutDataMarker">
      <summary>
            Represents Scatter Chart connected by lines, without data markers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.StockHighLowClose">
      <summary>
            Represents High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.StockOpenHighLowClose">
      <summary>
            Represents Open-High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.StockVolumeHighLowClose">
      <summary>
            Represents Volume-High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.StockVolumeOpenHighLowClose">
      <summary>
            Represents Volume-Open-High-Low-Close Stock Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Surface3D">
      <summary>
            Represents Surface Chart: 3D Surface Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.SurfaceWireframe3D">
      <summary>
            Represents Wireframe 3D Surface Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.SurfaceContour">
      <summary>
            Represents Contour Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.SurfaceContourWireframe">
      <summary>
            Represents Wireframe Contour Chart.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.BoxWhisker">
      <summary>
            The series is laid out as box and whisker.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Funnel">
      <summary>
            The series is laid out as a funnel.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.ParetoLine">
      <summary>
            The series is laid out as pareto lines.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Sunburst">
      <summary>
            The series is laid out as a sunburst.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Treemap">
      <summary>
            The series is laid out as a treemap.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Waterfall">
      <summary>
            The series is laid out as a waterfall.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartType.Histogram">
      <summary>
            The series is laid out as a histogram.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.DataLablesSeparatorType">
      <summary>
            Represents the separator type of DataLables.  
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Auto">
      <summary>
            Represents automatic separator
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Space">
      <summary>
            Represents space(" ")
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Comma">
      <summary>
            Represents comma(",")
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Semicolon">
      <summary>
            Represents semicolon(";")
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Period">
      <summary>
            Represents period(".")
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.NewLine">
      <summary>
            Represents newline("\n")
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DataLablesSeparatorType.Custom">
      <summary>
            Represents custom separator
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.DisplayUnitType">
      <summary>
            Represents the type of display unit.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.None">
      <summary>
            Display unit is None.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Hundreds">
      <summary>
            Specifies the values on the chart shall be divided by 100.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Thousands">
      <summary>
            Specifies the values on the chart shall be divided by 1,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.TenThousands">
      <summary>
            Specifies the values on the chart shall be divided by 10,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.HundredThousands">
      <summary>
            Specifies the values on the chart shall be divided by 100,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Millions">
      <summary>
            Specifies the values on the chart shall be divided by 1,000,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.TenMillions">
      <summary>
            Specifies the values on the chart shall be divided by 10,000,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.HundredMillions">
      <summary>
            Specifies the values on the chart shall be divided by 100,000,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Billions">
      <summary>
            Specifies the values on the chart shall be divided by 1,000,000,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Trillions">
      <summary>
            Specifies the values on the chart shall be divided by 1,000,000,000,000.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Percentage">
      <summary>
            The values on the chart shall be divided by 0.01.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.DisplayUnitType.Cust">
      <summary>
            specifies a custom value for the display unit.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ErrorBarType">
      <summary>
            Represents error bar amount type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarType.Custom">
      <summary>
            InnerCustom value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarType.FixedValue">
      <summary>
            Fixed value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarType.Percent">
      <summary>
            Percentage type
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarType.StDev">
      <summary>
            Standard deviation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ErrorBarType.StError">
      <summary>
            Standar error type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.FormattingType">
      <summary>
            Represents the type of formatting applied to an <see cref="!:Area" /> object or a <see cref="!:Line" /> object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.FormattingType.Automatic">
      <summary>
            Represents automatic formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.FormattingType.Custom">
      <summary>
            Represents custom formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.FormattingType.None">
      <summary>
            Represents none formatting type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.LegendPositionType">
      <summary>
            Enumerates the legend position types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.Bottom">
      <summary>
             Displays the legend to the bottom of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.Corner">
      <summary>
             Displays the legend to the corner of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.Left">
      <summary>
             Displays the legend to the left of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.NotDocked">
      <summary>
             Represents that the legend is not docked.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.Right">
      <summary>
             Displays the legend to the right of the chart's plot area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.LegendPositionType.Top">
      <summary>
             Displays the legend to the top of the chart's plot area.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.ChartLineFormattingType">
      <summary>
            Rerepsents line format type of chart line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartLineFormattingType.Automatic">
      <summary>
            Represents automatic formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartLineFormattingType.Solid">
      <summary>
            Represents solid formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartLineFormattingType.None">
      <summary>
            Represents none formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.ChartLineFormattingType.Gradient">
      <summary>
            Gradient
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.PlotEmptyCellsType">
      <summary>
            Represents all plot empty cells type of a chart. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PlotEmptyCellsType.NotPlotted">
      <summary>
            Not plotted(leave gap)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PlotEmptyCellsType.Zero">
      <summary>
            Zero
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.PlotEmptyCellsType.Interpolated">
      <summary>
            Interpolated
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.TickLabelPositionType">
      <summary>
            Represents the position type of tick-mark labels on the specified axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickLabelPositionType.High">
      <summary>
            Position type is high.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickLabelPositionType.Low">
      <summary>
            Position type is low. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickLabelPositionType.NextToAxis">
      <summary>
            Position type is next to axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickLabelPositionType.None">
      <summary>
            Position type is none.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.TickMarkType">
      <summary>
            Represents the tick mark type for the specified axis.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickMarkType.Cross">
      <summary>
            Tick mark type is Cross.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickMarkType.Inside">
      <summary>
            Tick mark type is Inside.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickMarkType.None">
      <summary>
            Tick mark type is None.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TickMarkType.Outside">
      <summary>
            Tick mark type is Outside
            </summary>
    </member>
    <member name="T:Aspose.Cells.Charts.TrendlineType">
      <summary>
            Represents the trendline type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.Exponential">
      <summary>
            Exponential
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.Linear">
      <summary>
            Linear
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.Logarithmic">
      <summary>
            Logarithmic
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.MovingAverage">
      <summary>
            MovingAverage
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.Polynomial">
      <summary>
            Polynomial
            </summary>
    </member>
    <member name="F:Aspose.Cells.Charts.TrendlineType.Power">
      <summary>
            Power
            </summary>
    </member>
    <member name="T:Aspose.Cells.MemorySetting">
      <summary>
            Memory usage options.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MemorySetting.Normal">
      <summary>
            Default option. This option is applied for all versions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.MemorySetting.MemoryPreference">
      <summary>
            Optimized for memory usage. This option may degrade performance in some special cases and is applied since v 8.0.0.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.PresetWordArtStyle">
      <summary>
            Represents the preset WordArt styles.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle1">
      <summary>
            Fill - Black, Text 1, Shadow
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle2">
      <summary>
            Fill - Blue, Accent 1, Shadow
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle3">
      <summary>
            Fill - Orange, Accent 2, Outline - Accent 2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle4">
      <summary>
            Fill - White, Outline - Accent 1, Shadow
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle5">
      <summary>
            Fill - Gold, Accent 4, Soft Bevel
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle6">
      <summary>
            Gradient Fill - Gray
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle7">
      <summary>
            Gradient Fill - Blue, Accent 1, Reflection
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle8">
      <summary>
            Gradient Fill - Gold, Accent 4, Outline - Accent 4
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle9">
      <summary>
            Fill - White, Outline - Accent 1, Glow - Accent 1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle10">
      <summary>
            Fill - Gray-50%, Accent 3, Sharp Bevel
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle11">
      <summary>
            Fill - Black, Text 1, Outline - Background 1, Hard Shadow - Background 1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle12">
      <summary>
            Fill - Black, Text 1, Outline - Background 1, Hard Shadow - Accent 1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle13">
      <summary>
            Fill - Blue, Accent 1, Outline - Background 1, Hard Shadow - Accent 1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle14">
      <summary>
            Fill - White, Outline - Accent 2, Hard Shadow - Accent 2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle15">
      <summary>
            Fill - Gray-25%, Background 2, Inner Shadow
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle16">
      <summary>
            Pattern Fill - White, Text 2, Dark Upward Diagonal, Shadow
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle17">
      <summary>
            Pattern Fill - Gray-50%, Accent 3, Narrow Horizontal, Inner Shadow
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle18">
      <summary>
            Fill - Blue, Accent 1, 50%, Hard Shadow - Accent 1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle19">
      <summary>
            Pattern Fill - Blue, Accent 1, Light Downward Diagonal, Outline - Accent 1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PresetWordArtStyle.WordArtStyle20">
      <summary>
            Pattern Fill - Blue-Gray, Text 2, Dark Upward Diagonal, Hard Shadow - Text 2
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextOptions">
      <summary>
            Represents the text options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextOptions.Name">
      <summary>
            Gets and sets the name of the shape.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextOptions.UnderlineColor">
      <summary>
            Gets or sets the color of underline.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextOptions.Kerning">
      <summary>
            Specifies the minimum font size at which character kerning will occur for this text run.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextOptions.Spacing">
      <summary>
            Specifies the spacing between characters within a text run.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.AutoNumberedBulletValue">
      <summary>
            Represents automatic numberic bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.AutoNumberedBulletValue.Type">
      <summary>
            Gets the type of the bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.AutoNumberedBulletValue.StartAt">
      <summary>
            Gets and sets the starting number of the bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.AutoNumberedBulletValue.AutonumberScheme">
      <summary>
            Represents the scheme of automatic number.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.BulletType">
      <summary>
            Represents the type of the bullet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.BulletType.None">
      <summary>
            No bullet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.BulletType.Character">
      <summary>
            Character bullet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.BulletType.Picture">
      <summary>
            Image bullet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.BulletType.AutoNumbered">
      <summary>
            Automatic numberic bullet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.BulletValue">
      <summary>
            Represents the value of the bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.BulletValue.Type">
      <summary>
            Gets the type of the bullet's value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.CharacterBulletValue">
      <summary>
            Represents the charater bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.CharacterBulletValue.Type">
      <summary>
            Gets the type of the bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.CharacterBulletValue.Character">
      <summary>
            Gets and sets character of the bullet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.LineSpaceSizeType">
      <summary>
            Represents the unit type of line space size.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.LineSpaceSizeType.Percentage">
      <summary>
            Represents in unit of a percentage of the text size.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.LineSpaceSizeType.Points">
      <summary>
            Represents in unit of points.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.NoneBulletValue">
      <summary>
             Represents no bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.NoneBulletValue.Type">
      <summary>
            Gets the type of the bullet's value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.PictureBulletValue">
      <summary>
            Represents the value of the image bullet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.PictureBulletValue.Type">
      <summary>
            Gets the type of the bullet's value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.PictureBulletValue.ImageData">
      <summary>
            Gets and sets image data of the bullet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextAutonumberScheme">
      <summary>
            Represents all automatic number scheme.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaLcParenBoth">
      <summary>
            (a), (b), (c), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaLcParenR">
      <summary>
            a), b), c), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaLcPeriod">
      <summary>
            a., b., c., …
            
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaUcParenBoth">
      <summary>
            (A), (B), (C), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaUcParenR">
      <summary>
            A), B), C), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.AlphaUcPeriod">
      <summary>
            A., B., C., …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Arabic1Minus">
      <summary>
            Bidi Arabic 1 (AraAlpha) with ANSI minus symbol
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Arabic2Minus">
      <summary>
            Bidi Arabic 2 (AraAbjad) with ANSI minus symbol
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicDbPeriod">
      <summary>
            Dbl-byte Arabic numbers w/ double-byte period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicDbPlain">
      <summary>
            Dbl-byte Arabic numbers
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicParenBoth">
      <summary>
            (1), (2), (3), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicParenR">
      <summary>
            1), 2), 3), …
             </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicPeriod">
      <summary>
            1., 2., 3., …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ArabicPlain">
      <summary>
            1, 2, 3, …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.CircleNumDbPlain">
      <summary>
            Dbl-byte circle numbers (1-10 circle[0x2460-], 11-arabic numbers)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.CircleNumWdBlackPlain">
      <summary>
            Wingdings black circle numbers
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.CircleNumWdWhitePlain">
      <summary>
            Wingdings white circle numbers (0-10 circle[0x0080-],11- arabic numbers)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1ChsPeriod">
      <summary>
            EA: Simplified Chinese w/ single-byte period
             </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1ChsPlain">
      <summary>
            EA: Simplified Chinese (TypeA 1-99, TypeC 100-)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1ChtPeriod">
      <summary>
            EA: Traditional Chinese w/ single-byte period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1ChtPlain">
      <summary>
            EA: Traditional Chinese (TypeA 1-19, TypeC 20-)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1JpnChsDbPeriod">
      <summary>
            EA: Japanese w/ double-byte period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1JpnKorPeriod">
      <summary>
            EA: Japanese/Korean w/ single-byte period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Ea1JpnKorPlain">
      <summary>
            EA: Japanese/Korean (TypeC 1-)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.Hebrew2Minus">
      <summary>
            Bidi Hebrew 2 with ANSI minus symbol
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.HindiAlpha1Period">
      <summary>
            Hindi alphabet period - consonants
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.HindiAlphaPeriod">
      <summary>
            Hindi alphabet period - vowels
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.HindiNumParenR">
            /// <summary>
            Hindi numerical parentheses - right
            </summary></member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.HindiNumPeriod">
      <summary>
            Hindi numerical period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanLcParenBoth">
      <summary>
            (i), (ii), (iii), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanLcParenR">
      <summary>
            i), ii), iii), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanLcPeriod">
      <summary>
            i., ii., iii., …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanUcParenBoth">
      <summary>
            (I), (II), (III), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanUcParenR">
      <summary>
            I), II), III), …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.RomanUcPeriod">
      <summary>
            I., II., III., …
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiAlphaParenBoth">
      <summary>
            Thai alphabet parentheses - both
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiAlphaParenR">
      <summary>
            Thai alphabet parentheses - right
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiAlphaPeriod">
      <summary>
            Thai alphabet period
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiNumParenBoth">
      <summary>
            Thai numerical parentheses - both
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiNumParenR">
      <summary>
            Thai numerical parentheses - right
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextAutonumberScheme.ThaiNumPeriod">
      <summary>
            Thai numerical period
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextFontAlignType">
      <summary>
            Represents the different types of font alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextFontAlignType.Automatic">
      <summary>
            When the text flow is horizontal or simple vertical same as fontBaseline 
            but for other vertical modes same as fontCenter.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextFontAlignType.Bottom">
      <summary>
            The letters are anchored to the very bottom of a single line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextFontAlignType.Baseline">
      <summary>
            The letters are anchored to the bottom baseline of a single line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextFontAlignType.Center">
      <summary>
            The letters are anchored between the two baselines of a single line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextFontAlignType.Top">
      <summary>
            The letters are anchored to the top baseline of a single dline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextNodeType">
      <summary>
            Represents the node type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextNodeType.TextRun">
      <summary>
            Represents the text node.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextNodeType.TextParagraph">
      <summary>
            Represents the text paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextNodeType.Equation">
      <summary>
            Represents the equation text.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextTabAlignmentType">
      <summary>
            Represents the text tab alignment types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextTabAlignmentType.Center">
      <summary>
            The text at this tab stop is center aligned.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextTabAlignmentType.Decimal">
      <summary>
            At this tab stop, the decimals are lined up.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextTabAlignmentType.Left">
      <summary>
            The text at this tab stop is left aligned.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextTabAlignmentType.Right">
      <summary>
            The text at this tab stop is right aligned.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextTabStop">
      <summary>
            Represents tab stop.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextTabStop.TabAlignment">
      <summary>
            Specifies the alignment that is to be applied to text using this tab stop.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextTabStop.TabPosition">
      <summary>
            Specifies the position of the tab stop relative to the left margin.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextTabStopCollection">
      <summary>
            Represents the list of all tab stops.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Texts.TextTabStopCollection.Add(Aspose.Cells.Drawing.Texts.TextTabAlignmentType,System.Double)">
      <summary>
            Adds a tab stop.
            </summary>
      <param name="tabAlignment">
      </param>
      <param name="tabPosition">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.Texts.TextTabStopCollection.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Drawing.Texts.TextTabStop" /> by the index.
            </summary>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.TextVerticalType">
      <summary>
            Represents the text direct type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.Vertical">
      <summary>
            East Asian Vertical display.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.Horizontal">
      <summary>
            Horizontal text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.VerticalLeftToRight">
      <summary>
            Displayed vertical and the text flows top down then LEFT to RIGHT
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.Vertical90">
      <summary>
            Each line is 90 degrees rotated clockwise
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.Vertical270">
      <summary>
            Each line is 270 degrees rotated clockwise
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.Stacked">
      <summary>
            Determines if all of the text is vertical
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Texts.TextVerticalType.StackedRightToLeft">
      <summary>
            Specifies that vertical WordArt should be shown from right to left rather than left to right.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Texts.NamespaceDoc">
      <summary>
            Contains all classes of Texts.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ActiveXPersistenceType">
      <summary>
            Represents the persistence method to persist an ActiveX control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ActiveXPersistenceType.PropertyBag">
      <summary>
            The data is stored as xml data. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ActiveXPersistenceType.Storage">
      <summary>
            The data is stored as a storage binary data. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ActiveXPersistenceType.Stream">
      <summary>
            The data is stored as a stream binary data. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ActiveXPersistenceType.StreamInit">
      <summary>
            The data is stored as a streaminit binary data. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.DropButtonStyle">
      <summary>
            Represents the symbol displayed on the drop button.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.DropButtonStyle.Plain">
      <summary>
            Displays a button with no symbol.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.DropButtonStyle.Arrow">
      <summary>
            Displays a button with a down arrow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.DropButtonStyle.Ellipsis">
      <summary>
            Displays a button with an ellipsis (...).
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.DropButtonStyle.Reduce">
      <summary>
            Displays a button with a horizontal line like an underscore character.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ShowDropButtonType">
      <summary>
            Specifies when to show the drop button
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ShowDropButtonType.Never">
      <summary>
            Never show the drop button.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ShowDropButtonType.Focus">
      <summary>
            Show the drop button when the control has the focus.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ShowDropButtonType.Always">
      <summary>
            Always show the drop button.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlBorderType">
      <summary>
            Represents the border type of the ActiveX control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlBorderType.None">
      <summary>
            No border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlBorderType.Single">
      <summary>
            The single line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode">
      <summary>
            Represents the default run-time mode of the Input Method Editor.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.NoControl">
      <summary>
            Does not control IME.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.On">
      <summary>
            IME on.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Off">
      <summary>
            IME off. English mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Disable">
      <summary>
            IME off.User can't turn on IME by keyboard.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Hiragana">
      <summary>
            IME on with Full-width hiragana mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Katakana">
      <summary>
            IME on with Full-width katakana mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.KatakanaHalf">
      <summary>
            IME on with Half-width katakana mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.AlphaFull">
      <summary>
            IME on with Full-width Alphanumeric mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Alpha">
      <summary>
            IME on with Half-width Alphanumeric mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.HangulFull">
      <summary>
            IME on with Full-width hangul mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Hangul">
      <summary>
            IME on with Half-width hangul mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.HanziFull">
      <summary>
            IME on with Full-width hanzi mode.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.InputMethodEditorMode.Hanzi">
      <summary>
            IME on with Half-width hanzi mode.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlCaptionAlignmentType">
      <summary>
            Repsents the position of the Caption relative to the control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlCaptionAlignmentType.Left">
      <summary>
            The left of the control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlCaptionAlignmentType.Right">
      <summary>
            The right of the control.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlType">
      <summary>
            Represents all type of ActiveX control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.CommandButton">
      <summary>
            Button
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.ComboBox">
      <summary>
            ComboBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.CheckBox">
      <summary>
            CheckBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.ListBox">
      <summary>
            ListBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.TextBox">
      <summary>
            TextBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.SpinButton">
      <summary>
            Spinner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.RadioButton">
      <summary>
            RadioButton
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.Label">
      <summary>
            Label
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.Image">
      <summary>
            Image
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.ToggleButton">
      <summary>
            ToggleButton
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.ScrollBar">
      <summary>
            ScrollBar
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlType.Unknown">
      <summary>
            Unknown
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlListStyle">
      <summary>
            Represents the visual appearance of the list in a ListBox or ComboBox.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlListStyle.Plain">
      <summary>
            Displays a list in which the background of an item is highlighted when it is selected.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlListStyle.Option">
      <summary>
            Displays a list in which an option button or a checkbox next to each entry displays the selection state of that item.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlMatchEntryType">
      <summary>
            Represents how a ListBox or ComboBox searches its list as the user types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMatchEntryType.FirstLetter">
      <summary>
            The control searches for the next entry that starts with the character entered.
            Repeatedly typing the same letter cycles through all entries beginning with that letter.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMatchEntryType.Complete">
      <summary>
            As each character is typed, the control searches for an entry matching all characters entered.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMatchEntryType.None">
      <summary>
            The list will not be searched when characters are typed.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType">
      <summary>
            Represents the type of icon displayed as the mouse pointer for the control.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.Default">
      <summary>
            Standard pointer.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.Arrow">
      <summary>
            Arrow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.Cross">
      <summary>
            Cross-hair pointer.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.IBeam">
      <summary>
            I-beam.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.SizeNESW">
      <summary>
            Double arrow pointing northeast and southwest.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.SizeNS">
      <summary>
            Double arrow pointing north and south.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.SizeNWSE">
      <summary>
            Double arrow pointing northwest and southeast.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.SizeWE">
      <summary>
            Double arrow pointing west and east.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.UpArrow">
      <summary>
            Up arrow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.HourGlass">
      <summary>
            Hourglass.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.NoDrop">
      <summary>
            “Not” symbol (circle with a diagonal line) on top of the object being dragged.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.AppStarting">
      <summary>
            Arrow with an hourglass.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.Help">
      <summary>
            Arrow with a question mark.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.SizeAll">
      <summary>
            “Size-all” cursor (arrows pointing north, south, east, and west).
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlMousePointerType.Custom">
      <summary>
            Uses the icon specified by the MouseIcon property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType">
      <summary>
            Represents the alignment of the picture inside the Form or Image.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType.TopLeft">
      <summary>
            The top left corner.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType.TopRight">
      <summary>
            The top right corner.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType.Center">
      <summary>
            The center.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType.BottomLeft">
      <summary>
            The bottom left corner.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureAlignmentType.BottomRight">
      <summary>
            The bottom right corner.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType">
      <summary>
            Repsents the location of the control's picture relative to its caption.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.LeftTop">
      <summary>
            The picture appears to the left of the caption.
            The caption is aligned with the top of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.LeftCenter">
      <summary>
            The picture appears to the left of the caption.
            The caption is centered relative to the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.LeftBottom">
      <summary>
            The picture appears to the left of the caption.
            The caption is aligned with the bottom of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.RightTop">
      <summary>
            The picture appears to the right of the caption.
            The caption is aligned with the top of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.RightCenter">
      <summary>
            The picture appears to the right of the caption.
            The caption is centered relative to the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.RightBottom">
      <summary>
            The picture appears to the right of the caption.
            The caption is aligned with the bottom of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.AboveLeft">
      <summary>
            The picture appears above the caption.
            The caption is aligned with the left edge of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.AboveCenter">
      <summary>
            The picture appears above the caption.
            The caption is centered below the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.AboveRight">
      <summary>
            The picture appears above the caption.
            The caption is aligned with the right edge of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.BelowLeft">
      <summary>
            The picture appears below the caption.
            The caption is aligned with the left edge of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.BelowCenter">
      <summary>
            The picture appears below the caption.
            The caption is centered above the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.BelowRight">
      <summary>
            The picture appears below the caption.
            The caption is aligned with the right edge of the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPicturePositionType.Center">
      <summary>
            The picture appears in the center of the control.
            The caption is centered horizontally and vertically on top of the picture.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlPictureSizeMode">
      <summary>
            Represents how to display the picture.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureSizeMode.Clip">
      <summary>
            Crops any part of the picture that is larger than the control's boundaries.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureSizeMode.Stretch">
      <summary>
            Stretches the picture to fill the control's area. 
            This setting distorts the picture in either the horizontal or vertical direction.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlPictureSizeMode.Zoom">
      <summary>
            Enlarges the picture, but does not distort the picture in either the horizontal or vertical direction.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlScrollBarType">
      <summary>
            Represents the type of scroll bar.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollBarType.None">
      <summary>
            Displays no scroll bars.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollBarType.Horizontal">
      <summary>
            Displays a horizontal scroll bar.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollBarType.BarsVertical">
      <summary>
            Displays a vertical scroll bar.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollBarType.BarsBoth">
      <summary>
            Displays both a horizontal and a vertical scroll bar.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlScrollOrientation">
      <summary>
            Represents type of scroll orientation
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollOrientation.Auto">
      <summary>
            Control is rendered horizontally when the control's width is greater than its height.
            Control is rendered vertically otherwise.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollOrientation.Vertical">
      <summary>
            Control is rendered vertically.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlScrollOrientation.Horizontal">
      <summary>
            Control is rendered horizontally.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType">
      <summary>
            Represents the type of special effect.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType.Flat">
      <summary>
            Flat
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType.Raised">
      <summary>
            Raised
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType.Sunken">
      <summary>
            Sunken
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType.Etched">
      <summary>
            Etched
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ActiveXControls.ControlSpecialEffectType.Bump">
      <summary>
            Bump
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ActiveXControls.NamespaceDoc">
      <summary>
            Contains all classes of ActiveXControl.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.NamespaceDoc">
      <summary>
            Contains all classes of shapes and fill format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapeLockType">
      <summary>
            Represents type of the property to be locked.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Group">
      <summary>
            Group
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.AdjustHandles">
      <summary>
            AdjustHandles
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Text">
      <summary>
            Text
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Points">
      <summary>
            Points
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Crop">
      <summary>
            Crop
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Selection">
      <summary>
            Selection
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Move">
      <summary>
            Move
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.AspectRatio">
      <summary>
            AspectRatio
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Rotation">
      <summary>
            Rotation
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Ungroup">
      <summary>
            Ungroup
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Resize">
      <summary>
            Resize
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.ShapeType">
      <summary>
            ShapeType
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapeLockType.Arrowhead">
      <summary>
            Arrowhead
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.FillType">
      <summary>
            Fill format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Automatic">
      <summary>
            Represents automatic formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.None">
      <summary>
            Represents none formatting type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Solid">
      <summary>
            Solid fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Gradient">
      <summary>
            Gradient fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Texture">
      <summary>
            Texture fill format(inculdes picuture fill).
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Pattern">
      <summary>
            Pattern fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillType.Group">
      <summary>
            Inherit the fill properties of the group.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Color">
      <summary>
            Represents an ARGB (alpha, red, green, blue) color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Name">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.IsKnownColor">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.IsSystemColor">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.IsNamedColor">
      <summary>
      </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.FromArgb(System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="red">
      </param>
      <param name="green">
      </param>
      <param name="blue">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.FromArgb(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="alpha">
      </param>
      <param name="red">
      </param>
      <param name="green">
      </param>
      <param name="blue">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.ToArgb">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.FromArgb(System.Int32,Aspose.Cells.Drawing.Color)">
      <summary>
      </summary>
      <param name="alpha">
      </param>
      <param name="baseColor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.FromArgb(System.Int32)">
      <summary>
      </summary>
      <param name="argb">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.FromName(System.String)">
      <summary>
      </summary>
      <param name="name">
      </param>
      <returns>
      </returns>
    </member>
    <member name="F:Aspose.Cells.Drawing.Color.Empty">
      <summary>
      </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.op_Equality(Aspose.Cells.Drawing.Color,Aspose.Cells.Drawing.Color)">
      <summary>
      </summary>
      <param name="left">
      </param>
      <param name="right">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.op_Inequality(Aspose.Cells.Drawing.Color,Aspose.Cells.Drawing.Color)">
      <summary>
      </summary>
      <param name="left">
      </param>
      <param name="right">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.GetBrightness">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.GetSaturation">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.GetHue">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.IsEmpty">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.A">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.R">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.G">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.B">
      <summary>
      </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.Equals(System.Object)">
      <summary>
      </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.GetHashCode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Color.ToString">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Transparent">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.AliceBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.AntiqueWhite">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Aqua">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Aquamarine">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Azure">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Beige">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Bisque">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Black">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.BlanchedAlmond">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Blue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.BlueViolet">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Brown">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.BurlyWood">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.CadetBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Chartreuse">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Chocolate">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Coral">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.CornflowerBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Cornsilk">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Crimson">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Cyan">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkCyan">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkGoldenrod">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkGray">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkKhaki">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkMagenta">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkOliveGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkOrange">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkOrchid">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkRed">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkSalmon">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkSeaGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkSlateBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkSlateGray">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkTurquoise">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DarkViolet">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DeepPink">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DeepSkyBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DimGray">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.DodgerBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Firebrick">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.FloralWhite">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.ForestGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Fuchsia">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Gainsboro">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.GhostWhite">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Gold">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Goldenrod">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Gray">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Green">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.GreenYellow">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Honeydew">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.HotPink">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.IndianRed">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Indigo">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Ivory">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Khaki">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Lavender">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LavenderBlush">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LawnGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LemonChiffon">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightCoral">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightCyan">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightGoldenrodYellow">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightGray">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightPink">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightSalmon">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightSeaGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightSkyBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightSlateGray">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightSteelBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LightYellow">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Lime">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.LimeGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Linen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Magenta">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Maroon">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MediumAquamarine">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MediumBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MediumOrchid">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MediumPurple">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MediumSeaGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MediumSlateBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MediumSpringGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MediumTurquoise">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MediumVioletRed">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MidnightBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MintCream">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.MistyRose">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Moccasin">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.NavajoWhite">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Navy">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.OldLace">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Olive">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.OliveDrab">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Orange">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.OrangeRed">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Orchid">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.PaleGoldenrod">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.PaleGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.PaleTurquoise">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.PaleVioletRed">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.PapayaWhip">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.PeachPuff">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Peru">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Pink">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Plum">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.PowderBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Purple">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Red">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.RosyBrown">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.RoyalBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.SaddleBrown">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Salmon">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.SandyBrown">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.SeaGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.SeaShell">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Sienna">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Silver">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.SkyBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.SlateBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.SlateGray">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Snow">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.SpringGreen">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.SteelBlue">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Tan">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Teal">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Thistle">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Tomato">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Turquoise">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Violet">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Wheat">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.White">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.WhiteSmoke">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.Yellow">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Color.YellowGreen">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ColorTranslator">
      <summary>
      </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.ColorTranslator.FromHtml(System.String)">
      <summary>
      </summary>
      <param name="htmlColor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ColorTranslator.FromOle(System.Int32)">
      <summary>
      </summary>
      <param name="oleColor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ColorTranslator.FromWin32(System.Int32)">
      <summary>
      </summary>
      <param name="win32Color">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ColorTranslator.ToHtml(Aspose.Cells.Drawing.Color)">
      <summary>
      </summary>
      <param name="c">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ColorTranslator.ToOle(Aspose.Cells.Drawing.Color)">
      <summary>
      </summary>
      <param name="c">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.ColorTranslator.ToWin32(Aspose.Cells.Drawing.Color)">
      <summary>
      </summary>
      <param name="c">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Drawing.FontStyle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FontStyle.Regular">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FontStyle.Bold">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FontStyle.Italic">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FontStyle.Underline">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FontStyle.Strikeout">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Imaging.ImageFlags">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.Caching">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.ColorSpaceCmyk">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.ColorSpaceGray">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.ColorSpaceRgb">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.ColorSpaceYcbcr">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.ColorSpaceYcck">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.HasAlpha">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.HasRealDpi">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.HasRealPixelSize">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.HasTranslucent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.PartiallyScalable">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.ReadOnly">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.Imaging.ImageFlags.Scalable">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.Imaging.ImageFormat">
      <summary>
      </summary>
    </member>
    <member name="M:Aspose.Cells.Drawing.Imaging.ImageFormat.#ctor(System.Guid)">
      <summary>
      </summary>
      <param name="guid">
      </param>
    </member>
    <member name="M:Aspose.Cells.Drawing.Imaging.ImageFormat.Equals(System.Object)">
      <summary>
      </summary>
      <param name="o">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Imaging.ImageFormat.GetHashCode">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Drawing.Imaging.ImageFormat.ToString">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.Guid">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.Bmp">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.Emf">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.Exif">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.Gif">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.Icon">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.Jpeg">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.MemoryBmp">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.Png">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.Tiff">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Drawing.Imaging.ImageFormat.Wmf">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.FormatSetType">
      <summary>
            Fill format set type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FormatSetType.None">
      <summary>
            No Fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FormatSetType.IsGradientSet">
      <summary>
            Gradient fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FormatSetType.IsTextureSet">
      <summary>
            Texture fill format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FormatSetType.IsPatternSet">
      <summary>
            Pattern fill format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MirrorType">
      <summary>
            Represents mirror type of textrue fill
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MirrorType.None">
      <summary>
            None
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MirrorType.Horizonal">
      <summary>
            Horizonal
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MirrorType.Vertical">
      <summary>
            Vertical
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MirrorType.Both">
      <summary>
            Both
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.ShapePathType">
      <summary>
            Represents path segment type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.LineTo">
      <summary>
            Straight line segment
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.CubicBezierCurveTo">
      <summary>
            Cubic Bezier curve
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.MoveTo">
      <summary>
            Start a new path
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.Close">
      <summary>
            If the starting POINT and the end POINT are not the same, a single 
            straight line is drawn to connect the starting POINT and ending POINT of the path.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.End">
      <summary>
            The end of the current path
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.Escape">
      <summary>
            Escape
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.ArcTo">
      <summary>
            An arc
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.ShapePathType.Unknown">
      <summary>
            Unknown
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoArrowheadLength">
      <summary>
            Enumerates the line end width of the shape border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadLength.Short">
      <summary>
            Short line end length
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadLength.Medium">
      <summary>
            Medium line end length
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadLength.Long">
      <summary>
            Long line end length
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoArrowheadWidth">
      <summary>
            Enumerates the line end width of the shape border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadWidth.Narrow">
      <summary>
             Short line end width.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadWidth.Medium">
      <summary>
            Medium line end width.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadWidth.Wide">
      <summary>
            Wide line end width.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.TextOverflowType">
      <summary>
            Represents the way the text vertical or horizontal overflow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextOverflowType.Clip">
      <summary>
            Pay attention to top and bottom barriers. 
            Provide no indication that there is text which is not visible.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextOverflowType.Ellipsis">
      <summary>
            Pay attention to top and bottom barriers. 
            Use an ellipsis to denote that there is text which is not visible.
            Only for vertical overflow.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextOverflowType.Overflow">
      <summary>
            Overflow the text and pay no attention to top and bottom barriers.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.AutoShapeType">
      <summary>
            Represents all built-in auto shape type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.NotPrimitive">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Rectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RoundedRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Oval">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Diamond">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.IsoscelesTriangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RightTriangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Parallelogram">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Trapezoid">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Hexagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Octagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Cross">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HomePlate">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Cube">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Balloon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Seal">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Arc">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Line">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Plaque">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Can">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Donut">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextSimple">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextOctagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextHexagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCurve">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextWave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextRing">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextOnCurve">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.msosptTextOnRing">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.StraightConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BentConnector2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ElbowConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BentConnector4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BentConnector5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedConnector2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedConnector4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedConnector5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutNoBorder2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutNoBorder3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutNoBorder4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithAccentBar2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithAccentBar3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithAccentBar4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorder2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorder3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorder4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorderAndAccentBar2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorderAndAccentBar3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorderAndAccentBar4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DownRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UpRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Chevron">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RegularPentagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.NoSymbol">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star32">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RectangularCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RoundedRectangularCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.OvalCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Wave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FoldedCorner">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DownArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UpDownArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Explosion1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Explosion2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LightningBolt">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Heart">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.PictureFrame">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.QuadArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RightArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UpArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DownArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftRightArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UpDownArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.QuadArrowCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Bevel">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftBracket">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RightBracket">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftBrace">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RightBrace">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BentUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BentArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.StripedRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.NotchedRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BlockArc">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SmileyFace">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.VerticalScroll">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HorizontalScroll">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CircularArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.NotchedCircularArrow">
      <summary>
            A value that SHOULD NOT be used.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.UTurnArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedRightArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedLeftArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedDownArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CloudCallout">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedDownRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CurvedUpRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartProcess">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartDecision">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartData">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartPredefinedProcess">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartInternalStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartDocument">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartMultidocument">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartTerminator">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartPreparation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartManualInput">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartManualOperation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartCard">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartPunchedTape">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartSummingJunction">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartOr">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartCollate">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartSort">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartExtract">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartMerge">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartOfflineStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartStoredData">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartSequentialAccessStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartMagneticDisk">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartDirectAccessStorage">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartDisplay">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartDelay">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextPlainText">
      <summary>
            A plain text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextStop">
      <summary>
            An octagonal text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextTriangle">
      <summary>
            A triangular text shape pointing upwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextTriangleInverted">
      <summary>
            A triangular text shape pointing downwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextChevron">
      <summary>
            A chevron text shape pointing upwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextChevronInverted">
      <summary>
            A chevron text shape pointing downwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextRingInside">
      <summary>
            A circular text shape, as if reading an inscription on the inside of a ring.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextRingOutside">
      <summary>
            A circular text shape, as if reading an inscription on the outside of a ring.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextArchUpCurve">
      <summary>
            An upward arching curved text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextArchDownCurve">
      <summary>
            A downward arching curved text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCircleCurve">
      <summary>
            A circular text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextButtonCurve">
      <summary>
            A text shape that resembles a button.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextArchUpPour">
      <summary>
            An upward arching text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextArchDownPour">
      <summary>
            A downward arching text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCirclePour">
      <summary>
            A circular text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextButtonPour">
      <summary>
            A text shape that resembles a button.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCurveUp">
      <summary>
            An upward curving text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCurveDown">
      <summary>
            A downward curving text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCascadeUp">
      <summary>
            A cascading text shape pointed upwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCascadeDown">
      <summary>
            A cascading text shape pointed downwards.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextWave1">
      <summary>
            A wavy text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextWave2">
      <summary>
            A wavy text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextWave3">
      <summary>
            A wavy text shape.
            </summary>
      <remarks>
            NOTE: This enum is now obsolete. Instead, please use AutoShape.TextDoubleWave1.
            This property will be removed 12 months later since April 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextWave4">
      <summary>
            A wavy text shape.
            </summary>
      <remarks>
            NOTE: This enum is now obsolete. Instead, please use AutoShape.TextDoubleWave2.
            This property will be removed 12 months later since April 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDoubleWave1">
      <summary>
            A wavy text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDoubleWave2">
      <summary>
            A wavy text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextInflate">
      <summary>
            A text shape that expands vertically in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDeflate">
      <summary>
            A text shape that shrinks vertically in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextInflateBottom">
      <summary>
            A text shape that expands downward in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDeflateBottom">
      <summary>
            A text shape that shrinks upwards in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextInflateTop">
      <summary>
            A text shape that expands upward in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDeflateTop">
      <summary>
            A text shape that shrinks downward in the middle.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDeflateInflate">
      <summary>
            
            A text shape where lower lines expand upward. Upper lines shrink to compensate.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextDeflateInflateDeflate">
      <summary>
            A text shape where lines in the center expand vertically. Upper and lower lines shrink to compensate.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextFadeRight">
      <summary>
            A text shape that shrinks vertically on the right side.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextFadeLeft">
      <summary>
            A text shape that shrinks vertically on the left side.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextFadeUp">
      <summary>
            A text shape that shrinks horizontally on top.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextFadeDown">
      <summary>
            A text shape that shrinks horizontally on bottom.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextSlantUp">
      <summary>
            An upward slanted text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextSlantDown">
      <summary>
            A downward slanted text shape.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCanUp">
      <summary>
            A text shape that is curved upwards as if being read on the side of a can.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextCanDown">
      <summary>
            A text shape that is curved downwards as if being read on the side of a can.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartAlternateProcess">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.FlowChartOffpageConnector">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutNoBorder1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithAccentBar1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorder1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineCalloutWithBorderAndAccentBar1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftRightUpArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Sun">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Moon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DoubleBracket">
      <summary>
            A shape enclosed in brackets.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DoubleBrace">
      <summary>
            A shape enclosed in braces.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DoubleWave">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BlankActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HomeActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HelpActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.InformationActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ForwardNextActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BackPreviousActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.EndActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.BeginningActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ReturnActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DocumentActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SoundActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MovieActionButton">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HostControl">
      <summary>
            This value SHOULD NOT be used.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextBox">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Heptagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Decagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Dodecagon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Star12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RoundSingleCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RoundSameSideCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.RoundDiagonalCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SnipRoundSingleCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SnipSingleCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SnipSameSideCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SnipDiagonalCornerRectangle">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Teardrop">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Pie">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.HalfFrame">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.L_Shape">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.DiagonalStripe">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Chord">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Cloud">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathPlus">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathMinus">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathMultiply">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathDivide">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathEqual">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.MathNotEqual">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LineInv">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.NonIsoscelesTrapezoid">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.PieWedge">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftCircularArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftRightCircularArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SwooshArrow">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.LeftRightRibbon">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.TextNoShape">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Gear6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Gear9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Funnel">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.CornerTabs">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.SquareTabs">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.PlaqueTabs">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ChartX">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ChartStar">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.ChartPlus">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Frame">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.AutoShapeType.Unknown">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.CheckValueType">
      <summary>
            Represents the check value type of the check box.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.CheckValueType.UnChecked">
      <summary>
            UnChecked
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.CheckValueType.Checked">
      <summary>
            Checked
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.CheckValueType.Mixed">
      <summary>
            Mixed
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.FillPattern">
      <summary>
            Enumerates shape fill pattern types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.None">
      <summary>
            Represents no background.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Solid">
      <summary>
            Represents solid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray5">
      <summary>
            Represents 5% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray10">
      <summary>
            Represents 10% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray20">
      <summary>
            Represents 20% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray30">
      <summary>
            Represents 30% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray40">
      <summary>
            Represents 40% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray50">
      <summary>
            Represents 50% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray60">
      <summary>
            Represents 60% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray70">
      <summary>
            Represents 70% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray75">
      <summary>
            Represents 75% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray80">
      <summary>
            Represents 80% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray90">
      <summary>
            Represents 90% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Gray25">
      <summary>
            Represents 25% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LightDownwardDiagonal">
      <summary>
            Represents light downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LightUpwardDiagonal">
      <summary>
            Represents light upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DarkDownwardDiagonal">
      <summary>
            Represents dark downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DarkUpwardDiagonal">
      <summary>
            Represents dark upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.WideDownwardDiagonal">
      <summary>
            Represents wide downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.WideUpwardDiagonal">
      <summary>
            Represents wide upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LightVertical">
      <summary>
            Represents light vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LightHorizontal">
      <summary>
            Represents light horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.NarrowVertical">
      <summary>
            Represents narrow vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.NarrowHorizontal">
      <summary>
            Represents narrow horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DarkVertical">
      <summary>
            Represents dark vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DarkHorizontal">
      <summary>
            Represents dark horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DashedDownwardDiagonal">
      <summary>
            Represents dashed downward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DashedUpwardDiagonal">
      <summary>
            Represents dashed upward diagonal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DashedVertical">
      <summary>
            Represents dashed vertical pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DashedHorizontal">
      <summary>
            Represents dashed horizontal pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.SmallConfetti">
      <summary>
            Represents small confetti pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LargeConfetti">
      <summary>
            Represents large confetti pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.ZigZag">
      <summary>
            Represents zig zag pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Wave">
      <summary>
            Represents wave pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DiagonalBrick">
      <summary>
            Represents diagonal brick pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.HorizontalBrick">
      <summary>
            Represents horizontal brick pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Weave">
      <summary>
            Represents weave pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Plaid">
      <summary>
            Represents plaid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Divot">
      <summary>
            Represents divot pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DottedGrid">
      <summary>
            Represents dotted grid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.DottedDiamond">
      <summary>
            Represents dotted diamond pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Shingle">
      <summary>
            Represents shingle pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Trellis">
      <summary>
            Represents trellis pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Sphere">
      <summary>
            Represents sphere pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.SmallGrid">
      <summary>
            Represents small grid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LargeGrid">
      <summary>
            Represents large grid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.SmallCheckerBoard">
      <summary>
            Represents small checker board pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.LargeCheckerBoard">
      <summary>
            Represents large checker board pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.OutlinedDiamond">
      <summary>
            Represents outlined diamond pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.SolidDiamond">
      <summary>
            Represents solid diamond pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPattern.Unknown">
      <summary>
            Represents unkown pattern.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientColorType">
      <summary>
            Represents the gradient color type for the specified fill.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientColorType.None">
      <summary>
            No gradient color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientColorType.OneColor">
      <summary>
            One gradient color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientColorType.PresetColors">
      <summary>
            Preset gradient colors
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientColorType.TwoColors">
      <summary>
            Two gradient colors
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientPresetType">
      <summary>
            Represents gradient preset color type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Brass">
      <summary>
            Brass preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.CalmWater">
      <summary>
            Calm Water preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Chrome">
      <summary>
            Chrome preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.ChromeII">
      <summary>
            Chrome II preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Daybreak">
      <summary>
            Daybreak preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Desert">
      <summary>
            Desert preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.EarlySunset">
      <summary>
            Early Sunset preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Fire">
      <summary>
            Fire preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Fog">
      <summary>
            Fog preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Gold">
      <summary>
            Gold preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.GoldII">
      <summary>
            Gold II preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Horizon">
      <summary>
            Horizon preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.LateSunset">
      <summary>
            Late Sunset preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Mahogany">
      <summary>
            Mahogany preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Moss">
      <summary>
            Moss preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Nightfall">
      <summary>
            Nightfall preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Ocean">
      <summary>
            Ocean preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Parchment">
      <summary>
            Parchment preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Peacock">
      <summary>
            Peacock preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Rainbow">
      <summary>
            Rainbow preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.RainbowII">
      <summary>
            Rainbow II preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Sapphire">
      <summary>
            Sapphire preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Silver">
      <summary>
            Silver preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Wheat">
      <summary>
            Wheat preset color
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientPresetType.Unknown">
      <summary>
            Unknown preset color.
            Only for the preset color (which is not same as any known preset color) in the template workbook.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientStyleType">
      <summary>
            Represents gradient shading style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.DiagonalDown">
      <summary>
            Diagonal down shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.DiagonalUp">
      <summary>
            Diagonal up shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.FromCenter">
      <summary>
            From center shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.FromCorner">
      <summary>
            From corner shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.Horizontal">
      <summary>
            Horizontal shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.Vertical">
      <summary>
            Vertical shading style
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientStyleType.Unknown">
      <summary>
            Unkown shading style.Only for the shading style(which is not for any member of the GradientStyleType) in the template file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoArrowheadStyle">
      <summary>
            Enumerates the line end type of the shape border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.None">
      <summary>
             No line end type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.Arrow">
      <summary>
            Arrow line end type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.ArrowStealth">
      <summary>
            Arrow Stealth line end type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.ArrowDiamond">
      <summary>
            Arrow Diamond Line end type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.ArrowOval">
      <summary>
            Arrow Oval line end type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoArrowheadStyle.ArrowOpen">
      <summary>
            Arrow Open line end type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientFillType">
      <summary>
            Represents all Gradient fill type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientFillType.Linear">
      <summary>
            Linear 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientFillType.Radial">
      <summary>
            Radial
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientFillType.Rectangle">
      <summary>
            Rectangle
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientFillType.Path">
      <summary>
            Path
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.GradientDirectionType">
      <summary>
            Represents all direction type of gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.FromUpperLeftCorner">
      <summary>
            FromUpperLeftCorner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.FromUpperRightCorner">
      <summary>
            FromUpperRightCorner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.FromLowerLeftCorner">
      <summary>
            FromLowerLeftCorner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.FromLowerRightCorner">
      <summary>
            FromLowerRightCorner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.FromCenter">
      <summary>
            FromCenter
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.GradientDirectionType.Unknown">
      <summary>
            Unknown
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.FillPictureType">
      <summary>
            Represents the picture fill type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPictureType.Stretch">
      <summary>
            Stretch
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPictureType.Stack">
      <summary>
            Stack
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.FillPictureType.StackAndScale">
      <summary>
            StackAndScale
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoDrawingType">
      <summary>
            Represents office drawing objects type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Group">
      <summary>
            Group
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Line">
      <summary>
            Line
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Rectangle">
      <summary>
            Rectangle
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Oval">
      <summary>
            Oval
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Arc">
      <summary>
            Arc
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Chart">
      <summary>
            Chart
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.TextBox">
      <summary>
            TextBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Button">
      <summary>
            Button
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Picture">
      <summary>
            Picture
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Polygon">
      <summary>
            Polygon
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.CheckBox">
      <summary>
            CheckBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.RadioButton">
      <summary>
            RadioButton
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Label">
      <summary>
            Label
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.DialogBox">
      <summary>
            DialogBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Spinner">
      <summary>
            Spinner
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.ScrollBar">
      <summary>
            ScrollBar
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.ListBox">
      <summary>
            ListBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.GroupBox">
      <summary>
            GroupBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.ComboBox">
      <summary>
            ComboBox
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Comment">
      <summary>
            Comment
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.OleObject">
      <summary>
            OleObject
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.CellsDrawing">
      <summary>
            Only for preserving the drawing object in the template file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Unknown">
      <summary>
            Only for preserving the drawing object in the xlsx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoDrawingType.Slicer">
      <summary>
            Slicer
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoPresetTextEffect">
      <summary>
            Represents preset text effect type of WordArt.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect1">
      <summary>
            TextEffect1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect2">
      <summary>
            TextEffect2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect3">
      <summary>
            TextEffect3
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect4">
      <summary>
            TextEffect4
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect5">
      <summary>
            TextEffect5
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect6">
      <summary>
            TextEffect6
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect7">
      <summary>
            TextEffect7
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect8">
      <summary>
            TextEffect8
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect9">
      <summary>
            TextEffect9
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect10">
      <summary>
            TextEffect10
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect11">
      <summary>
            TextEffect11
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect12">
      <summary>
            TextEffect12
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect13">
      <summary>
            TextEffect13
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect14">
      <summary>
            TextEffect14
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect15">
      <summary>
            TextEffect15
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect16">
      <summary>
            TextEffect16
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect17">
      <summary>
            TextEffect17
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect18">
      <summary>
            TextEffect18
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect19">
      <summary>
            TextEffect19
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect20">
      <summary>
            TextEffect20
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect21">
      <summary>
            TextEffect21
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect22">
      <summary>
            TextEffect22
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect23">
      <summary>
            TextEffect23
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect24">
      <summary>
            TextEffect24
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect25">
      <summary>
            TextEffect25
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect26">
      <summary>
            TextEffect26
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect27">
      <summary>
            TextEffect27
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect28">
      <summary>
            TextEffect28
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect29">
      <summary>
            TextEffect29
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffect.TextEffect30">
      <summary>
            TextEffect30
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoPresetTextEffectShape">
      <summary>
            Represents preset text effect shape type of WordArt.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.PlainText">
      <summary>
            PlainText
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Stop">
      <summary>
            Stop
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.TriangleUp">
      <summary>
            TriangleUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.TriangleDown">
      <summary>
            TriangleDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ChevronUp">
      <summary>
            ChevronUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ChevronDown">
      <summary>
            ChevronDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.RingInside">
      <summary>
            RingInside
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.RingOutside">
      <summary>
            RingOutside
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ArchUpCurve">
      <summary>
            ArchUpCurve
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ArchDownCurve">
      <summary>
            ArchDownCurve
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CircleCurve">
      <summary>
            CircleCurve
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ButtonCurve">
      <summary>
            ButtonCurve
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ArchUpPour">
      <summary>
            ArchUpPour
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ArchDownPour">
      <summary>
            ArchDownPour
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CirclePour">
      <summary>
            CirclePour
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.ButtonPour">
      <summary>
            ButtonPour
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CurveUp">
      <summary>
            CurveUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CurveDown">
      <summary>
            CurveDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CanUp">
      <summary>
            CanUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CanDown">
      <summary>
            CanDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Wave1">
      <summary>
            Wave1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Wave2">
      <summary>
            Wave2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DoubleWave1">
      <summary>
            DoubleWave1
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DoubleWave2">
      <summary>
            DoubleWave2
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Inflate">
      <summary>
            Inflate
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Deflate">
      <summary>
            Deflate
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.InflateBottom">
      <summary>
            InflateBottom
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DeflateBottom">
      <summary>
            DeflateBottom
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.InflateTop">
      <summary>
            InflateTop
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DeflateTop">
      <summary>
            DeflateTop
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DeflateInflate">
      <summary>
            DeflateInflate
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.DeflateInflateDeflate">
      <summary>
            DeflateInflateDeflate
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.FadeRight">
      <summary>
            FadeRight
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.FadeLeft">
      <summary>
            FadeLeft
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.FadeUp">
      <summary>
            FadeUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.FadeDown">
      <summary>
            FadeDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.SlantUp">
      <summary>
            SlantUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.SlantDown">
      <summary>
            SlantDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CascadeUp">
      <summary>
            CascadeUp
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.CascadeDown">
      <summary>
            CascadeDown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoPresetTextEffectShape.Mixed">
      <summary>
            Mixed
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoLineDashStyle">
      <summary>
            Represents style of dash drawing lines.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.Dash">
      <summary>
            Represent a dash line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.DashDot">
      <summary>
            Represents a dash-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.DashDotDot">
      <summary>
             Represents a dash-dot-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.DashLongDash">
      <summary>
             Represents a long dash-short dash line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.DashLongDashDot">
      <summary>
            Represents a long dash-short dash-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.RoundDot">
      <summary>
            Represents a round-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.Solid">
      <summary>
            Represent a solid line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.SquareDot">
      <summary>
            Represents a square-dot line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineDashStyle.Custom">
      <summary>
            InnerCustom dash style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.MsoLineStyle">
      <summary>
            Represents style of drawing lines.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineStyle.Single">
      <summary>
            Single line (of width lineWidth)
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineStyle.ThickBetweenThin">
      <summary>
            Three lines, thin, thick, thin
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineStyle.ThinThick">
      <summary>
            Double lines, one thin, one thick
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineStyle.ThickThin">
      <summary>
            Double lines, one thick, one thin
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.MsoLineStyle.ThinThin">
      <summary>
            Double lines of equal width
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.PlacementType">
      <summary>
            Represents the way the drawing object is attached to the cells below it.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PlacementType.FreeFloating">
      <summary>
            Don't move or size with cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PlacementType.Move">
      <summary>
            Move but don't size with cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.PlacementType.MoveAndSize">
      <summary>
            Move and size with cells.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.SelectionType">
      <summary>
            The selection type of list box.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.SelectionType.Single">
      <summary>
            Sigle selection type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.SelectionType.Multi">
      <summary>
            Multiple selection type. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.SelectionType.Extend">
      <summary>
            Externd selection type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.TextureType">
      <summary>
            Represents the preset texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.BlueTissuePaper">
      <summary>
            Represents Blue Tissue Paper texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Bouquet">
      <summary>
            Represents Bouquet texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.BrownMarble">
      <summary>
            Represents Brown Marble texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Canvas">
      <summary>
            Represents Canvas texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Cork">
      <summary>
            Represents Cork texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Denim">
      <summary>
            Represents Denim texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.FishFossil">
      <summary>
            Represents Fish Fossil texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Granite">
      <summary>
            Represents Granite texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.GreenMarble">
      <summary>
            Represents Green Marble texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.MediumWood">
      <summary>
            Represents Medium Wood texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Newsprint">
      <summary>
            Represents Newsprint texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Oak">
      <summary>
            Represents Oak texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.PaperBag">
      <summary>
            Represents Paper Bag texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Papyrus">
      <summary>
            Represents Papyrus texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Parchment">
      <summary>
            Represents Parchment texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.PinkTissuePaper">
      <summary>
            Represents Pink Tissue Paper texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.PurpleMesh">
      <summary>
            Represents Purple Mesh texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.RecycledPaper">
      <summary>
            Represents Recycled Paper texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Sand">
      <summary>
            Represents Sand texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Stationery">
      <summary>
            Represents Stationery texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Walnut">
      <summary>
            Represents Walnut Droplets texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.WaterDroplets">
      <summary>
            Represents Water Droplets texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.WhiteMarble">
      <summary>
            Represents White Marble texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.WovenMat">
      <summary>
            Represents Woven Mat texture type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.TextureType.Unknown">
      <summary>
            Represents Unknown texture type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Drawing.WeightType">
      <summary>
            Enumerates the weight types for a picture border or a chart line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.WeightType.HairLine">
      <summary>
            Represents the weight of hair line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.WeightType.MediumLine">
      <summary>
            Represents the weight of medium line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.WeightType.SingleLine">
      <summary>
            Represents the weight of single line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Drawing.WeightType.WideLine">
      <summary>
            Represents the weight of wide line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FileFontSource">
      <summary>
            Represents the single TrueType font file stored in the file system.
            </summary>
    </member>
    <member name="M:Aspose.Cells.FileFontSource.#ctor(System.String)">
      <summary>
            Ctor.
            </summary>
      <param name="filePath">path to font file</param>
    </member>
    <member name="P:Aspose.Cells.FileFontSource.FilePath">
      <summary>
            Path to font file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FileFontSource.Type">
      <summary>
            Returns the type of the font source.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FolderFontSource">
      <summary>
            Represents the folder that contains TrueType font files.
            </summary>
    </member>
    <member name="M:Aspose.Cells.FolderFontSource.#ctor(System.String,System.Boolean)">
      <summary>
            Ctor.
            </summary>
      <param name="folderPath">path to fonts folder</param>
      <param name="scanSubfolders">Determines whether or not to scan subfolders.</param>
    </member>
    <member name="P:Aspose.Cells.FolderFontSource.FolderPath">
      <summary>
            Path to fonts folder.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FolderFontSource.ScanSubFolders">
      <summary>
            Determines whether or not to scan the subfolders.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FolderFontSource.Type">
      <summary>
            Returns the type of the font source.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FontConfigs">
      <summary>
            Specifies font settings
            </summary>
    </member>
    <member name="P:Aspose.Cells.FontConfigs.DefaultFontName">
      <summary>
            Gets or sets the default font name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FontConfigs.PreferSystemFontSubstitutes">
      <summary>
            Indicate whether to use system font substitutes first or not when a font is not presented and the substitute of this font is not set.
            e.g. On Ubuntu, "Arial" font is generally substituted by "Liberation Sans".
            Default value is false.
            </summary>
    </member>
    <member name="M:Aspose.Cells.FontConfigs.SetFontSubstitutes(System.String,System.String[])">
      <summary>
            Font substitute names for given original font name.
            </summary>
      <param name="originalFontName">Original font name.</param>
      <param name="substituteFontNames">List of font substitute names to be used if original font is not presented.</param>
    </member>
    <member name="M:Aspose.Cells.FontConfigs.GetFontSubstitutes(System.String)">
      <summary>
            Returns array containing font substitute names to be used if original font is not presented.
            </summary>
      <param name="originalFontName">originalFontName</param>
      <returns>An array containing font substitute names to be used if original font is not presented.</returns>
    </member>
    <member name="M:Aspose.Cells.FontConfigs.SetFontFolder(System.String,System.Boolean)">
      <summary>
            Sets the fonts folder
            </summary>
      <param name="fontFolder">The folder that contains TrueType fonts.</param>
      <param name="recursive">Determines whether or not to scan subfolders.</param>
    </member>
    <member name="M:Aspose.Cells.FontConfigs.SetFontFolders(System.String[],System.Boolean)">
      <summary>
            Sets the fonts folders
            </summary>
      <param name="fontFolders">The folders that contains TrueType fonts.</param>
      <param name="recursive">Determines whether or not to scan subfolders.</param>
    </member>
    <member name="M:Aspose.Cells.FontConfigs.SetFontSources(Aspose.Cells.FontSourceBase[])">
      <summary>
            Sets the fonts sources.
            </summary>
      <param name="sources">An array of sources that contain TrueType fonts.</param>
    </member>
    <member name="M:Aspose.Cells.FontConfigs.GetFontSources">
      <summary>
            Gets a copy of the array that contains the list of sources 
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.FontSourceBase">
      <summary>
            This is an abstract base class for the classes that allow the user to specify various font sources
            </summary>
    </member>
    <member name="P:Aspose.Cells.FontSourceBase.Type">
      <summary>
            Returns the type of the font source.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FontSourceType">
      <summary>
            Specifies the type of a font source.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontSourceType.FontFile">
      <summary>
            represents single font file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontSourceType.FontsFolder">
      <summary>
            represents folder with font files.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontSourceType.MemoryFont">
      <summary>
            represents single font in memory.
            </summary>
    </member>
    <member name="T:Aspose.Cells.MemoryFontSource">
      <summary>
            Represents the single TrueType font file stored in memory.
            </summary>
    </member>
    <member name="M:Aspose.Cells.MemoryFontSource.#ctor(System.Byte[])">
      <summary>
            Ctor.
            </summary>
      <param name="fontData">Binary font data.</param>
    </member>
    <member name="P:Aspose.Cells.MemoryFontSource.FontData">
      <summary>
            Binary font data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MemoryFontSource.Type">
      <summary>
            Returns the type of the font source.
            </summary>
    </member>
    <member name="T:Aspose.Cells.AbstractCalculationEngine">
      <summary>
            Represents user's custom calculation engine to extend the default calculation engine of Aspose.Cells.
            </summary>
      <example>
        <code>
            [C#]
            public class MyEngine : AbstractCalculationEngine
            {
                public override void Calculate(CalculationData data)
                {
                    string funcName = data.FunctionName.ToUpper();
                    if ("MYFUNC".Equals(funcName))
                    {
                        //do calculation for MYFUNC here
                        int count = data.ParamCount;
                        object res = null;
                        for (int i = 0; i &lt; count; i++)
                        {
                            object pv = data.GetParamValue(i);
                            if (pv is ReferredArea)
                            {
                                ReferredArea ra = (ReferredArea)pv;
                                pv = ra.GetValue(0, 0);
                            }
                            //process the parameter here
                            //res = ...;
                        }
                        data.CalculatedValue = res;
                    }
                }
            }
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.AbstractCalculationEngine.Calculate(Aspose.Cells.CalculationData)">
      <summary>
            Calculates one function with given data.
            </summary>
      <param name="data">the required data to calculate function such as function name, parameters, ...etc.</param>
      <remarks>User should set the calculated value for given data for all functions(including excel native functions)
            that he wants to calculate by himself in this implementation.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.AbstractCalculationEngine.IsParamLiteralRequired">
      <summary>
            Indicates whether this engine needs the literal text of parameter while doing calculation. Default value is false.
            </summary>
      <remarks>If this custom calculation engine requires the parameter's literal text, more stacks will be required to cache the literal text for parameters and Calculate() method may be called recursively to calcualte the parameter's value.
            Commonly the literal text is not needed for calculating formulas and this method should return false for most implementations to get better performance.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.CalculationData">
      <summary>
            Represents the required data when calculating one function, such as function name, parameters, ...etc.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationData.CalculatedValue">
      <summary>
            Gets or sets the calculated value for this function.
            </summary>
      <remarks>User should set this property in his custom calculation engine for those functions the engine supports,
            and the set value will be returned when getting this property.
            Getting this property before setting will make the function be calculated by the default calculation engine of Aspose.Cells and the calculated value will be returned.</remarks>
    </member>
    <member name="P:Aspose.Cells.CalculationData.Workbook">
      <summary>
            Gets the Workbook object where the function is in.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationData.Worksheet">
      <summary>
            Gets the Workbook object where the function is in.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationData.Cell">
      <summary>
            Gets the Cell object where the function is in.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationData.FunctionName">
      <summary>
            Gets the function name to be calculated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationData.ParamCount">
      <summary>
            Gets the count of parameters 
            </summary>
    </member>
    <member name="M:Aspose.Cells.CalculationData.GetParamValue(System.Int32)">
      <summary>
            Gets the represented value object of the parameter at given index.
            </summary>
      <param name="index">index of the parameter(0 based)</param>
      <returns>If the parameter is plain value, then returns the plain value.
            If the parameter is reference, then return ReferredArea object.</returns>
    </member>
    <member name="M:Aspose.Cells.CalculationData.GetParamText(System.Int32)">
      <summary>
            Gets the literal text of the parameter at given index.
            </summary>
      <param name="index">index of the parameter(0 based)</param>
      <returns>literal text of the parameter</returns>
    </member>
    <member name="T:Aspose.Cells.GlobalizationSettings">
      <summary>
            Repsents the globalization settings.
            </summary>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetPivotTotalName">
      <summary>
            Gets the name of "Total" label in the PivotTable.
            You need to override this method when the PivotTable contains two or more PivotFields in the data area.
            </summary>
      <returns>The name of "Total" label</returns>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetPivotGrandTotalName">
      <summary>
            Gets the name of "Grand Total" label in the PivotTable.
            </summary>
      <returns>The name of "Grand Total" label</returns>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetMultipleItemsName">
      <summary>
            Gets the name of "(Multiple Items)" label in the PivotTable.
            </summary>
      <returns>The name of "(Multiple Items)" label</returns>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetAllName">
      <summary>
            Gets the name of "(All)" label in the PivotTable.
            </summary>
      <returns>The name of "(All)" label</returns>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetColumnLablesName">
      <summary>
            Gets the name of "Column Labels" label in the PivotTable.
            </summary>
      <returns>The name of column labels</returns>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetRowLablesName">
      <summary>
            Gets the name of "Row Labels" label in the PivotTable.
            </summary>
      <returns>The name of row labels</returns>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetEmptyDataName">
      <summary>
            Gets the name of "(blank)" label in the PivotTable.
            </summary>
      <returns>The name of empty data</returns>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetSubTotalName(Aspose.Cells.Pivot.PivotFieldSubtotalType)">
      <summary>
            Gets the name of <see cref="T:Aspose.Cells.Pivot.PivotFieldSubtotalType" /> type in the PivotTable.
            </summary>
      <param name="subTotalType">The <see cref="T:Aspose.Cells.Pivot.PivotFieldSubtotalType" /> type</param>
      <returns>The name of <see cref="T:Aspose.Cells.Pivot.PivotFieldSubtotalType" /> type</returns>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetTotalName(Aspose.Cells.ConsolidationFunction)">
      <summary>
            Gets the total name of the function.
            </summary>
      <param name="functionType">The function type.</param>
      <returns>The total name of the function.</returns>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetGrandTotalName(Aspose.Cells.ConsolidationFunction)">
      <summary>
            Gets the grand total name of the function.
            </summary>
      <param name="functionType">The function type.</param>
      <returns>The grand total name of the function.</returns>
    </member>
    <member name="M:Aspose.Cells.GlobalizationSettings.GetOtherName">
      <summary>
            Gets the name of "Other" labels for Pie charts.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.RangeImp">
      <summary>
            Encapsulates the object that represents a range of cells within a spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.RangeImp.GetEnumerator">
      <summary>
            Gets the cells enumerator
            </summary>
      <returns>The cells enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.RangeImp.IsIntersect(Aspose.Cells.Range)">
      <summary>
            Indicates whether the range is intersect.
            </summary>
      <param name="range">The range.</param>
      <returns> Whether the range is intersect.</returns>
      <remarks>If the two rangs area not in the same worksheet ,return false.</remarks>
    </member>
    <member name="M:Aspose.Cells.RangeImp.Intersect(Aspose.Cells.Range)">
      <summary>
            Returns a Range object that represents the rectangular intersection of two ranges.
            </summary>
      <param name="range">The intersecting range.</param>
      <returns>a Range object</returns>
      <remarks>If the two ranges are not intersected, returns null.</remarks>
    </member>
    <member name="M:Aspose.Cells.RangeImp.Union(Aspose.Cells.Range)">
      <summary>
            Returns the union of two ranges.
            </summary>
      <param name="range">The range</param>
      <returns>The union of two ranges.
            </returns>
    </member>
    <member name="P:Aspose.Cells.RangeImp.RowCount">
      <summary>
            Gets the count of rows in the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.RangeImp.ColumnCount">
      <summary>
            Gets the count of columns in the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.RangeImp.Name">
      <summary>
            Gets or sets the name of the range.
            </summary>
      <remarks>Named range is supported. For example,
            <p>range.Name = "Sheet1!MyRange";</p></remarks>
    </member>
    <member name="P:Aspose.Cells.RangeImp.RefersTo">
      <summary>
            Gets the range's refers to.
            </summary>
    </member>
    <member name="P:Aspose.Cells.RangeImp.FirstRow">
      <summary>
            Gets the index of the first row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.RangeImp.FirstColumn">
      <summary>
            Gets the index of the first column of the range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.RangeImp.Merge">
      <summary>
             Combines a range of cells into a single cell. 		
             </summary>
      <remarks>
             Reference the merged cell via the address of the upper-left cell in the range.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.RangeImp.UnMerge">
      <summary>
            Unmerges merged cells of this range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.RangeImp.PutValue(System.String,System.Boolean,System.Boolean)">
      <summary>
            Puts a value into the range, if appropriate the value will be converted to other data type and cell's number format will be reset.
            </summary>
      <param name="stringValue">Input value</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
      <param name="setStyle">True: set the number format to cell's style when converting to other data type</param>
    </member>
    <member name="P:Aspose.Cells.RangeImp.Value">
      <summary>
            Gets and sets the value of the range.
            </summary>
      <remarks>
            If the range contains multiple cells, return a two-dimension <see cref="T:System.Array" /> object.
            If applies object array to the range, it should be a two-dimension <see cref="T:System.Array" /> object.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.RangeImp.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formats for a whole range.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
      <remarks>Each cell in this range will contains a <see cref="T:Aspose.Cells.Style" /> object. 
            So this is a memory-consuming method. Please use it carefully.</remarks>
    </member>
    <member name="M:Aspose.Cells.RangeImp.SetStyle(Aspose.Cells.Style)">
      <summary>
            Sets the style of the range.
            </summary>
      <param name="style">The Style object.</param>
    </member>
    <member name="M:Aspose.Cells.RangeImp.SetOutlineBorders(Aspose.Cells.CellBorderType,Aspose.Cells.Drawing.Color)">
      <summary>
            Sets the outline borders around a range of cells with same border style and color.
            </summary>
      <param name="borderStyle">Border style.</param>
      <param name="borderColor">Border color.</param>
    </member>
    <member name="M:Aspose.Cells.RangeImp.SetOutlineBorders(Aspose.Cells.CellBorderType[],Aspose.Cells.Drawing.Color[])">
      <summary>
            Sets out line borders around a range of cells.
            </summary>
      <param name="borderStyles">Border styles.</param>
      <param name="borderColors">Border colors.</param>
      <remarks>
            Both the length of borderStyles and borderStyles must be 4.
            The order of of borderStyles and borderStyles must be top,bottom,left,right
            </remarks>
    </member>
    <member name="M:Aspose.Cells.RangeImp.SetOutlineBorder(Aspose.Cells.BorderType,Aspose.Cells.CellBorderType,Aspose.Cells.Drawing.Color)">
      <summary>
            Sets outline border around a range of cells.
            </summary>
      <param name="borderEdge">Border edge.</param>
      <param name="borderStyle">Border style.</param>
      <param name="borderColor">Border color.</param>
    </member>
    <member name="P:Aspose.Cells.RangeImp.ColumnWidth">
      <summary>
             Sets or gets the column width of this range
            </summary>
    </member>
    <member name="P:Aspose.Cells.RangeImp.RowHeight">
      <summary>
            Sets or gets the height of rows in this range
            </summary>
    </member>
    <member name="M:Aspose.Cells.RangeImp.MoveTo(System.Int32,System.Int32)">
      <summary>
            Move the current range to the dest range.
            </summary>
      <param name="destRow">The start row of the dest range.</param>
      <param name="destColumn">The start column of the dest range.</param>
    </member>
    <member name="M:Aspose.Cells.RangeImp.CopyData(Aspose.Cells.Range)">
      <summary>
            Copies cell data (including formulas) from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.RangeImp.CopyValue(Aspose.Cells.Range)">
      <summary>
            Copies cell value from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.RangeImp.CopyStyle(Aspose.Cells.Range)">
      <summary>
            Copies style settings from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.RangeImp.Copy(Aspose.Cells.Range,Aspose.Cells.PasteOptions)">
      <summary>
            Copying the range with paste special options.
            </summary>
      <param name="range">The soure range.</param>
      <param name="options">The paste special options.</param>
    </member>
    <member name="M:Aspose.Cells.RangeImp.Copy(Aspose.Cells.Range)">
      <summary>
            Copies data (including formulas), formatting, drawing objects etc. from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="P:Aspose.Cells.RangeImp.Item(System.Int32,System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Cell" /> object in this range.
            </summary>
      <param name="rowIndex">Row index in this range, zero based.</param>
      <param name="columnIndex">Column index in this range, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.Cell" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.RangeImp.GetCellOrNull(System.Int32,System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Cell" /> object or null in this range.
            </summary>
      <param name="rowIndex">Row index in this range, zero based.</param>
      <param name="columnIndex">Column index in this range, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.Cell" /> object.</returns>
    </member>
    <member name="P:Aspose.Cells.RangeImp.Worksheet">
      <summary>
            Gets the <see cref="P:Aspose.Cells.RangeImp.Worksheet" />object which contains this range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.RangeImp.ToString">
      <summary>
            Returns a string represents the current Range object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.LoadFilter">
      <summary>
            Represents the filter that provides options for loading data when loading workbook from template.
            </summary>
      <remarks>
            User may specify the filter options or implement their own LoadFilter to specify how to load data.
            </remarks>
      <example>
            The following example shows how to determine the filter options according to worksheet's properties. 
            <code>
            [C#]
            Workbook wb = new Workbook(template, new LoadOptions() { LoadFilter = new LoadFilterSheet() });
            //Custom LoadFilter implementation
            class LoadFilterSheet : LoadFilter
            {
                public override void StartSheet(Worksheet sheet) 
                {
                    if (sheet.Name == "Sheet1")
                    {
                        m_LoadDataFilterOptions = Aspose.Cells.LoadDataFilterOptions.All;
                    }
                    else
                    {
                        m_LoadDataFilterOptions = Aspose.Cells.LoadDataFilterOptions.None;
                    }
                }
            }
            </code></example>
    </member>
    <member name="M:Aspose.Cells.LoadFilter.#ctor">
      <summary>
            Constructs one LoadFilter with default filter options LoadDataFilterOptions.All.
            </summary>
    </member>
    <member name="M:Aspose.Cells.LoadFilter.#ctor(Aspose.Cells.LoadDataFilterOptions)">
      <summary>
            Constructs one LoadFilter with given filter options.
            </summary>
      <param name="opts">the default filter options</param>
    </member>
    <member name="P:Aspose.Cells.LoadFilter.LoadDataFilterOptions">
      <summary>
            The filter options to denote what data should be loaded.
            </summary>
    </member>
    <member name="M:Aspose.Cells.LoadFilter.StartSheet(Aspose.Cells.Worksheet)">
      <summary>
            Prepares filter options before loading given worksheet.
            User's implementation of LoadFilter can change the LoadDataFilterOptions here
            to denote how to load data for this worksheet.
            </summary>
      <param name="sheet">The worksheet to be loaded.
            There are only few properties can be used for the given worksheet object here
            because most data and properties have not been loaded. The available properties are:
            Name, Index, VisibilityType</param>
    </member>
    <member name="T:Aspose.Cells.Metered">
      <summary>
            Provides methods to set metered key.
            </summary>
      <example>
            In this example, an attempt will be made to set metered public and private key
            
            <ms><code>
            [C#]
            
            Metered matered = new Metered();
            matered.SetMeteredKey("PublicKey", "PrivateKey");
            
            
            [Visual Basic]
            
            Dim matered As Metered = New Metered
            matered.SetMeteredKey("PublicKey", "PrivateKey")
            </code></ms><java>
            the component jar file:
            <code>
            Metered matered = new Metered();
            matered.setMeteredKey("PublicKey", "PrivateKey");
            </code></java></example>
    </member>
    <member name="M:Aspose.Cells.Metered.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Metered.SetMeteredKey(System.String,System.String)">
      <summary>
            Sets metered public and private key
            </summary>
      <param name="publicKey">public key</param>
      <param name="privateKey">private key</param>
    </member>
    <member name="M:Aspose.Cells.Metered.GetConsumptionQuantity">
      <summary>
            Gets consumption quantity
            </summary>
      <returns>consumption quantity</returns>
    </member>
    <member name="T:Aspose.Cells.Pivot.NamespaceDoc">
      <summary>
            Contains all classes of PivotTable.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotConditionFormatRuleType">
      <summary>
            Represents PivotTable condition formatting rule type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatRuleType.None">
      <summary>
            Indicates that Top N conditional formatting is not evaluated
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatRuleType.All">
      <summary>
            Indicates that Top N conditional formatting is 
            evaluated across the entire scope range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatRuleType.Row">
      <summary>
            Indicates that Top N conditional formatting is evaluated for each row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatRuleType.Column">
      <summary>
            Indicates that Top N conditional formatting is 
            evaluated for each column.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotConditionFormatScopeType">
      <summary>
            Represents PivotTable condition formatting scope type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatScopeType.Data">
      <summary>
            Indicates that conditional formatting is applied to the selected data fields. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatScopeType.Field">
      <summary>
            Indicates that conditional formatting is applied to the selected PivotTable field intersections.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotConditionFormatScopeType.Selection">
      <summary>
            Indicates that conditional formatting is applied to the selected cells.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFilter">
      <summary>
            Represents a PivotFilter in PivotFilter Collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.AutoFilter">
      <summary>
            Gets the autofilter of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.FilterType">
      <summary>
            Gets the autofilter type of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.FieldIndex">
      <summary>
            Gets the field index of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.Value1">
      <summary>
            Gets the string value1 of the label pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.Value2">
      <summary>
            Gets the string value2 of the label pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.MeasureFldIndex">
      <summary>
            Gets the measure field index of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.MemberPropertyFieldIndex">
      <summary>
            Gets the member property field index of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.Name">
      <summary>
            Gets the name of the pivot filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilter.EvaluationOrder">
      <summary>
            Gets the Evaluation Order of the pivot filter.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFilterCollection">
      <summary>
            Represents a collection of all the PivotFilter objects 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFilterCollection.Item(System.Int32)">
      <summary>
            Gets the pivotfilter object at the specific index.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFilterCollection.Add(System.Int32,Aspose.Cells.Pivot.PivotFilterType)">
      <summary>
            Adds a PivotFilter Object to the specific type 
            </summary>
      <param name="fieldIndex">the PivotField index </param>
      <param name="type">the PivotFilter type </param>
      <returns>the index of  the PivotFilter Object in this PivotFilterCollection.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFilterCollection.ClearFilter(System.Int32)">
      <summary>
            Clear PivotFilter from the specific PivotField 
            </summary>
      <param name="fieldIndex">the PivotField index </param>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFilterType">
      <summary>
            Represents PivotTable Filter type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionBeginsWith">
      <summary>
            Indicates the "begins with" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionBetween">
      <summary>
            Indicates the "is between" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionContains">
      <summary>
            Indicates the "contains" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionEndsWith">
      <summary>
            Indicates the "ends with" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionEqual">
      <summary>
            Indicates the "equal" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionGreaterThan">
      <summary>
            Indicates the "is greater than" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionGreaterThanOrEqual">
      <summary>
            Indicates the "is greater than or equal to" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionLessThan">
      <summary>
            Indicates the "is less than" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionLessThanOrEqual">
      <summary>
            Indicates the "is less than or equal to" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionNotBeginsWith">
      <summary>
            Indicates the "does not begin with" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionNotBetween">
      <summary>
            Indicates the "is not between" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionNotContains">
      <summary>
            Indicates the "does not contain" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionNotEndsWith">
      <summary>
            Indicates the "does not end with" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.CaptionNotEqual">
      <summary>
            Indicates the "not equal" filter for field captions.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Count">
      <summary>
            Indicates the "count" filter.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateBetween">
      <summary>
            Indicates the "between" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateEqual">
      <summary>
            Indicates the "equals" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateNewerThan">
      <summary>
            Indicates the "newer than" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateNewerThanOrEqual">
      <summary>
            Indicates the "newer than or equal to" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateNotBetween">
      <summary>
            Indicates the "not between" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateNotEqual">
      <summary>
            Indicates the "does not equal" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateOlderThan">
      <summary>
            Indicates the "older than" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.DateOlderThanOrEqual">
      <summary>
            Indicates the "older than or equal to" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.LastMonth">
      <summary>
            Indicates the "last month" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.LastQuarter">
      <summary>
            Indicates the "last quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.LastWeek">
      <summary>
            Indicates the "last week" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.LastYear">
      <summary>
            Indicates the "last year" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M1">
      <summary>
            Indicates the "January" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M2">
      <summary>
            Indicates the "February" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M3">
      <summary>
            Indicates the "March" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M4">
      <summary>
            Indicates the "April" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M5">
      <summary>
            Indicates the "May" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M6">
      <summary>
            Indicates the "June" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M7">
      <summary>
            Indicates the "July" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M8">
      <summary>
            Indicates the "August" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M9">
      <summary>
            Indicates the "September" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M10">
      <summary>
            Indicates the "October" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M11">
      <summary>
            Indicates the "November" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.M12">
      <summary>
            Indicates the "December" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.NextMonth">
      <summary>
            Indicates the "next month" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.NextQuarter">
      <summary>
            Indicates the "next quarter" for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.NextWeek">
      <summary>
            Indicates the "next week" for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.NextYear">
      <summary>
            Indicates the "next year" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Percent">
      <summary>
            Indicates the "percent" filter for numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Q1">
      <summary>
            Indicates the "first quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Q2">
      <summary>
            Indicates the "second quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Q3">
      <summary>
            Indicates the "third quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Q4">
      <summary>
            Indicates the "fourth quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Sum">
      <summary>
            Indicates the "sum" filter for numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ThisMonth">
      <summary>
            Indicates the "this month" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ThisQuarter">
      <summary>
            Indicates the "this quarter" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ThisWeek">
      <summary>
            Indicates the "this week" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ThisYear">
      <summary>
            Indicate the "this year" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Today">
      <summary>
            Indicates the "today" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Tomorrow">
      <summary>
            Indicates the "tomorrow" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Unknown">
      <summary>
            Indicates the PivotTable filter is unknown to the application.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueBetween">
      <summary>
            Indicates the "Value between" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueEqual">
      <summary>
            Indicates the "value equal" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueGreaterThan">
      <summary>
            Indicates the "value greater than" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueGreaterThanOrEqual">
      <summary>
            Indicates the "value greater than or equal to" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueLessThan">
      <summary>
            Indicates the "value less than" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueLessThanOrEqual">
      <summary>
            Indicates the "value less than or equal to" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueNotBetween">
      <summary>
            Indicates the "value not between" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.ValueNotEqual">
      <summary>
            Indicates the "value not equal" filter for text and numeric values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.YearToDate">
      <summary>
            Indicates the "year-to-date" filter for date values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFilterType.Yesterday">
      <summary>
            Indicates the "yesterday" filter for date values.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFormatCondition">
      <summary>
            Represents a PivotTable Format Condition in PivotFormatCondition Collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFormatCondition.ScopeType">
      <summary>
            Get and set scope type for the pivot talbe condition format .
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFormatCondition.RuleType">
      <summary>
            Get and set rule type for the pivot talbe condition format .
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFormatCondition.FormatConditions">
      <summary>
            Get formatconditions for the pivot talbe condition format .
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFormatConditionCollection">
      <summary>
            Represents PivotTable Format Conditions.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFormatConditionCollection.Add">
      <summary>
            Adds a pivot FormatCondition to the collection.
            </summary>
      <returns>pivot FormatCondition object index.</returns>
      <remarks>not supported</remarks>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFormatConditionCollection.Item(System.Int32)">
      <summary>
            Gets the pivot FormatCondition object at the specific index.
            </summary>
      <returns>pivot FormatCondition object.</returns>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotMissingItemLimitType">
      <summary>
            Represents number of items to retain per field.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotMissingItemLimitType.Automatic">
      <summary>
            The default number of unique items per PivotField allowed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotMissingItemLimitType.Max">
      <summary>
            The maximum number of unique items per PivotField allowed (&gt;32,500).
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotMissingItemLimitType.None">
      <summary>
            No unique items per PivotField allowed.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotField">
      <summary>
            Represents a field in a PivotTable report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.PivotItems">
      <summary>
            Gets the pivot items of the pivot field
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Range">
      <summary>
            Gets the group range of the pivot field
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.GetPivotFilterByType(Aspose.Cells.Pivot.PivotFilterType)">
      <summary>
            Gets the pivot filter of the pivot field by type
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.GetPivotFilters">
      <summary>
            Gets the pivot filters of the pivot field 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.InitPivotItems">
      <summary>
            Init the pivot items of the pivot field
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsCalculatedField">
      <summary>
            Indicates whether the specified PivotTable field is calculated field.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.GetCalculatedFieldFormula">
      <summary>
            Get the formula string of the specified calculated field .
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseIndex">
      <summary>
            Represents the PivotField index in the base PivotFields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Position">
      <summary>
            Represents the PivotField index in the PivotFields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Name">
      <summary>
            Represents the PivotField name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DisplayName">
      <summary>
            Represents the PivotField display name.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.SetSubtotals(Aspose.Cells.Pivot.PivotFieldSubtotalType,System.Boolean)">
      <summary>
            Sets whether the specified field shows that subtotals.
            </summary>
      <param name="subtotalType">subtotals type.</param>
      <param name="shown">whether the specified field shows that subtotals.</param>
      <see cref="T:Aspose.Cells.Pivot.PivotFieldSubtotalType" />
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.GetSubtotals(Aspose.Cells.Pivot.PivotFieldSubtotalType)">
      <summary>
            Gets whether the specified field shows that subtotals.
            </summary>
      <param name="subtotalType">subtotals type.</param>
      <returns>whether the specified field shows that subtotals.</returns>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsAutoSubtotals">
      <summary>
            Indicates whether the specified field shows automatic subtotals. Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DragToColumn">
      <summary>
            Indicates whether the specified field can be dragged to the column position.
            The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DragToHide">
      <summary>
             Indicates whether the specified field can be dragged to the hide position.
             The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DragToRow">
      <summary>
            Indicates whether the specified field can be dragged to the row position.
            The default value is true. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DragToPage">
      <summary>
            Indicates whether the specified field can be dragged to the page position.
             The default value is true.  
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DragToData">
      <summary>
            Indicates whether the specified field can be dragged to the data position.
             The default value is true.  
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsMultipleItemSelectionAllowed">
      <summary>
            indicates whether the field can have multiple items
            selected in the page field
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsRepeatItemLabels">
      <summary>
            indicates whether the field can repeat items labels
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsIncludeNewItemsInFilter">
      <summary>
            indicates whether the field can include new items in manual filter
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsInsertPageBreaksBetweenItems">
      <summary>
            indicates whether the field can insert page breaks between items
            insert page break after each item
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.ShowAllItems">
      <summary>
            Indicates whether all items in the PivotTable report are displayed, 
            even if they don't contain summary data.
            show items with no data
            The default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsAutoSort">
      <summary>
            Indicates whether the specified PivotTable field is automatically sorted.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsAscendSort">
      <summary>
            Indicates whether the specified PivotTable field is autosorted ascending.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.AutoSortField">
      <summary>
            Represents auto sort field index. 
            -1 means PivotField itself,others means the position of the data fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsAutoShow">
      <summary>
            Indicates whether the specified PivotTable field is automatically shown,only valid for excel 2003.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.IsAscendShow">
      <summary>
            Indicates whether the specified PivotTable field is autoshown ascending.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.AutoShowCount">
      <summary>
            Represent the number of top or bottom items
            that are automatically shown in the specified PivotTable field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.AutoShowField">
      <summary>
            Represents auto show field index. -1 means PivotField itself.
            It should be the index of the data fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Function">
      <summary>
            Represents the function used to summarize the PivotTable data field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.DataDisplayFormat">
      <summary>
            Represents how to display the values contained in a data field.
            </summary>
      <see cref="T:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat" />
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseField">
      <summary>
            Represents the base field for a custom calculation.
            Please use PivotField.BaseFieldIndex instead
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please us PivotField.BaseFieldIndex property.
            This property will be removed 12 months later since April 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseFieldIndex">
      <summary>
            Represents the base field for a custom calculation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseItemPosition">
      <summary>
             Represents the item in the base field for a custom calculation.
             Valid only for data fields. 
             Because PivotItemPosition.InnerCustom is only for read,if you need to set PivotItemPosition.InnerCustom,
             please set PivotField.BaseItemIndex attribute.
            </summary>
      <see cref="T:Aspose.Cells.Pivot.PivotItemPosition" />
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseItem">
      <summary>
             Represents the item in the base field for a custom calculation.
             Valid only for data fields. 
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please us PivotField.BaseItemIndex property.
            This property will be removed 12 months later since April 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.BaseItemIndex">
      <summary>
             Represents the item in the base field for a custom calculation.
             Valid only for data fields. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.CurrentPageItem">
      <summary>
            Represents the current page item showing for the page field (valid only for page fields). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Number">
      <summary>
            Represents the built-in display format of numbers and dates.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.InsertBlankRow">
      <summary>
            Indicates whether inserting blank line after each item.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.ShowSubtotalAtTop">
      <summary>
            when ShowInOutlineForm is true, then display subtotals at the top of the list of items instead of at the bottom
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.ShowInOutlineForm">
      <summary>
            Indicates whether layout this field in outline form on the Pivot Table view
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.NumberFormat">
      <summary>
            Represents the custom display format of numbers and dates.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.IsHiddenItem(System.Int32)">
      <summary>
            Indicates whether the specific PivotItem is hidden.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <returns>whether the specific PivotItem is hidden</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.HideItem(System.Int32,System.Boolean)">
      <summary>
             Sets whether the specific PivotItem in a data field is hidden.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <param name="isHidden">whether the specific PivotItem is hidden</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.IsHiddenItemDetail(System.Int32)">
      <summary>
            Indicates whether the specific PivotItem is hidden detail.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <returns>whether the specific PivotItem is hidden detail</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.HideItemDetail(System.Int32,System.Boolean)">
      <summary>
             Sets whether the specific PivotItem in a pivot field is hidden detail.
            </summary>
      <param name="index">the index of the pivotItem in the pivotField.</param>
      <param name="isHiddenDetail">whether the specific PivotItem is hidden</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.HideDetail(System.Boolean)">
      <summary>
             Sets whether the PivotItems in a pivot field is hidden detail.That is collapse/expand this field.
            </summary>
      <param name="isHiddenDetail">whether the PivotItems is hidden</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.HideItem(System.String,System.Boolean)">
      <summary>
             Sets whether the specific PivotItem in a data field is hidden.
            </summary>
      <param name="itemValue">the value of the pivotItem in the pivotField.</param>
      <param name="isHidden">whether the specific PivotItem is hidden</param>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.Items">
      <summary>
            Get all base items;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.OriginalItems">
      <summary>
            Get the original base items;
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.ItemCount">
      <summary>
            Gets the base item count of this pivot field.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotField.AddCalculatedItem(System.String,System.String)">
      <summary>
            Add a calculated item to the pivot field.
            </summary>
      <param name="name">The item's name.</param>
      <param name="formula">The item's formula</param>
      <remarks>
            Only supports to add calculated item to Row/Column field.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotField.ShowCompact">
      <summary>
            Indicates whether showing in compact mode.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFieldCollection">
      <summary>
            Represents a collection of all the PivotField objects
            in the PivotTable's specific PivotFields type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFieldCollection.Type">
      <summary>
             Gets the PivotFields type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFieldCollection.Count">
      <summary>
            Gets the count of the pivotFields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFieldCollection.Item(System.Int32)">
      <summary>
            Gets the PivotField Object at the specific index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotFieldCollection.Item(System.String)">
      <summary>
            Gets the PivotField Object of the specific name.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFieldCollection.AddByBaseIndex(System.Int32)">
      <summary>
            Adds a PivotField Object to the specific type PivotFields.
            </summary>
      <param name="baseFieldIndex">field index in the base PivotFields.</param>
      <returns>the index of  the PivotField Object in this PivotFields.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFieldCollection.Add(Aspose.Cells.Pivot.PivotField)">
      <summary>
            Adds a PivotField Object to the specific type PivotFields.
            </summary>
      <param name="pivotField">a PivotField Object.</param>
      <returns>the index of  the PivotField Object in this PivotFields.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotFieldCollection.Clear">
      <summary>
            clear all fields of PivotFieldCollection
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat">
      <summary>
            Represents data display format in the PivotTable data field.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.Normal">
      <summary>
            Represents normal dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.DifferenceFrom">
      <summary>
             Represents difference from dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOf">
      <summary>
            Represents percentage of dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageDifferenceFrom">
      <summary>
            Represents percentage difference from  display format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.RunningTotalIn">
      <summary>
            Represents running total in dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfRow">
      <summary>
            Represents percentage of row dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfColumn">
      <summary>
            Represents percentage of column dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfTotal">
      <summary>
            Represents percentage of total dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.Index">
      <summary>
            Represents index dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfParentRowTotal">
      <summary>
            Represents percentage of parent row total dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfParentColumnTotal">
      <summary>
            Represents percentage of parent column total dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfParentTotal">
      <summary>
            Represents percentage of parent total dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.PercentageOfRunningTotalIn">
      <summary>
            Represents percentage of running total in dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.RankSmallestToLargest">
      <summary>
            Represents smallest to largest dispaly format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldDataDisplayFormat.RankLargestToSmallest">
      <summary>
            Represents largest to smallest dispaly format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFieldSubtotalType">
      <summary>
            Summary description for PivotFieldSubtotalType.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.None">
      <summary>
            Represents None subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Automatic">
      <summary>
            Represents Automatic subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Sum">
      <summary>
            Represents Sum subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Count">
      <summary>
            Represents Count subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Average">
      <summary>
            Represents Average subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Max">
      <summary>
            Represents Max subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Min">
      <summary>
            Represents Min subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Product">
      <summary>
            Represents Product subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.CountNums">
      <summary>
            Represents Count Nums subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Stdev">
      <summary>
            Represents Stdev subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Stdevp">
      <summary>
            Represents Stdevp subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Var">
      <summary>
            Represents Var subtotal type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldSubtotalType.Varp">
      <summary>
            Represents Varp subtotal type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotFieldType">
      <summary>
            Represents PivotTable field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldType.Undefined">
      <summary>
            Presents base pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldType.Row">
      <summary>
            Presents row pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldType.Column">
      <summary>
            Presents column pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldType.Page">
      <summary>
            Presents page pivot field type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotFieldType.Data">
      <summary>
            Presents data pivot field type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotGroupByType">
      <summary>
            Represents PivotTable groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.RangeOfValues">
      <summary>
            Presents rangeofvalues groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Seconds">
      <summary>
            Presents Seconds groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Minutes">
      <summary>
            Presents Minutes groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Hours">
      <summary>
            Presents Hours groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Days">
      <summary>
            Presents Days groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Months">
      <summary>
            Presents Months groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Quarters">
      <summary>
            Presents Quarters groupby type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotGroupByType.Years">
      <summary>
            Presents Years groupby type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotItem">
      <summary>
            Represents a item in a PivotField report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.IsHidden">
      <summary>
            Gets and Sets whether the pivot item is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.Position">
      <summary>
            Specifying the position index in all the PivotItems,not the PivotItems under the same parent node.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.PositionInSameParentNode">
      <summary>
            Specifying the position index in the PivotItems under the same parent node.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItem.Move(System.Int32,System.Boolean)">
      <summary>
            Moves the item up or down
            </summary>
      <param name="count">
            The number of moving up or down.
            Move the item up if this is less than zero;
            Move the item down if this is greater than zero.
            </param>
      <param name="isSameParent">
            Specifying whether moving operation is in the same parent node or not
            </param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItem.Move(System.Int32)">
      <summary>
            Moves the item up or down.
            </summary>
      <param name="count">The number of moving up or down.
            Move the item up if this is less than zero;
            Move the item down if this is greater than zero.
            </param>
      <remarks>NOTE: This method is now obsolete. Instead,
            please use Move(int count, bool isSameParent) method.
            This method will be removed 12 months later since December 2014.
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItem.GetStringValue">
      <summary>
            Gets the string value of the pivot item
            If the value is null, it will return ""
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItem.GetDoubleValue">
      <summary>
            Gets the double value of the pivot item
            If the value is null or not number ,it will return 0
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItem.GetDateTimeValue">
      <summary>
            Gets the date time value of the pivot item
            If the value is null ,it will return DateTime.MinValue
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.Value">
      <summary>
            Gets the value of the pivot item
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.Name">
      <summary>
            Gets the name of the pivot item.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItem.Index">
      <summary>
            Gets the index of the pivot item in the pivot field
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotItemCollection">
      <summary>
            Represents a collection of all the PivotItem objects in the PivotField's 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItemCollection.Item(System.Int32)">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItemCollection.Item(System.String)">
      <summary>
      </summary>
      <param name="itemValue">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotItemCollection.Count">
      <summary>
            Gets the count of the pivot items.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotItemCollection.ChangeitemsOrder(System.Int32,System.Int32)">
      <summary>
            Directly chanages the orders of the two items.
            </summary>
      <param name="sourceIndex">The current index</param>
      <param name="destIndex">The dest index</param>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotItemPosition">
      <summary>
            Represents PivotTable base item Next/Previous/All position in the base field .
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotItemPosition.Previous">
      <summary>
            Represents the previous pivot item in the PivotField.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotItemPosition.Next">
      <summary>
            Represents the next pivot item in the PivotField.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotItemPosition.Custom">
      <summary>
            Represents a pivot item index, as specified by Pivot Items, that specifies a pivot item in the PivotField.
            <remarks>only read</remarks></summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotPageFields">
      <summary>
            Represents the pivot page field items 
            if the pivot table data source is consolidation ranges.
            It only can contain up to 4 fields.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotPageFields.#ctor">
      <summary>
            Represents the pivot page field items.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotPageFields.AddPageField(System.String[])">
      <summary>
            Adds a page field.
            </summary>
      <param name="pageItems">Page field item label</param>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotPageFields.PageFieldCount">
      <summary>
            Gets the number of page fields.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotPageFields.AddIdentify(System.Int32,System.Int32[])">
      <summary>
            Sets which item label in each page field to use to identify the data range.
            The pageItemIndex.Length must be equal to PageFieldCount, so please add the page field first.
            </summary>
      <param name="rangeIndex">The consolidation data range index.</param>
      <param name="pageItemIndex">The page item index in the each page field.
            pageItemIndex[2] = 1 means the seconde item in the third field to use to identify this range.
            pageItemIndex[1] = -1 means no item in the second field to use to identify this range 
            and MS will auto create "blank" item in the second field  to identify this range.
            </param>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotTable">
      <summary>
            Summary description for PivotTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.IsExcel2003Compatible">
      <summary>
            Specifies whether the PivotTable is compatible for Excel2003 when refreshing PivotTable,
            if true, a string must be less than or equal to 255 characters, so if the string is greater than 255 characters,
            it will be truncated. if false, a string will not have the aforementioned restriction.
            The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PivotTableStyleName">
      <summary>
            Gets and sets the pivottable style name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PivotTableStyleType">
      <summary>
            Gets and sets the built-in pivot table style.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.CopyStyle(Aspose.Cells.Pivot.PivotTable)">
      <summary>
            Copies named style from another pivot table.
            </summary>
      <param name="pivotTable">Source pivot table.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.RemoveField(Aspose.Cells.Pivot.PivotFieldType,System.String)">
      <summary>
            Removes a field from specific field area
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="fieldName">The name in the base fields.</param>
      <see cref="M:Aspose.Cells.Pivot.PivotTable.RemoveField(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)" />
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.RemoveField(Aspose.Cells.Pivot.PivotFieldType,System.Int32)">
      <summary>
            Removes a field from specific field area
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="baseFieldIndex">The field index in the base fields.</param>
      <see cref="M:Aspose.Cells.Pivot.PivotTable.RemoveField(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)" />
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.RemoveField(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)">
      <summary>
            Remove field from specific field area
            </summary>
      <param name="fieldType">the fields area type.It could be one of the following
                      values: <table border="1"><tr><td>PivotFieldType.Row</td></tr><tr><td>PivotFieldType.Column</td></tr><tr><td>PivotFieldType.Data</td></tr><tr><td>PivotFieldType.Page</td></tr></table></param>
      <param name="pivotField">the field in the base fields.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.AddFieldToArea(Aspose.Cells.Pivot.PivotFieldType,System.String)">
      <summary>
            Adds the field to the specific area.
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="fieldName">The name in the base fields.</param>
      <returns>The field position in the specific fields.If there is no field named as it, return -1.</returns>
      <see cref="M:Aspose.Cells.Pivot.PivotTable.AddFieldToArea(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)" />
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.AddFieldToArea(Aspose.Cells.Pivot.PivotFieldType,System.Int32)">
      <summary>
            Adds the field to the specific area.
            </summary>
      <param name="fieldType">The fields area type.</param>
      <param name="baseFieldIndex">The field index in the base fields.</param>
      <returns>The field position in the specific fields.</returns>
      <see cref="M:Aspose.Cells.Pivot.PivotTable.AddFieldToArea(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)" />
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.AddFieldToArea(Aspose.Cells.Pivot.PivotFieldType,Aspose.Cells.Pivot.PivotField)">
      <summary>
            Adds the field to the specific area.
            </summary>
      <param name="fieldType">the fields area type.It could be one of the following
                      values: <table border="1"><tr><td>PivotFieldType.Row</td></tr><tr><td>PivotFieldType.Column</td></tr><tr><td>PivotFieldType.Data</td></tr><tr><td>PivotFieldType.Page</td></tr></table></param>
      <param name="pivotField">the field in the base fields.</param>
      <returns>the field position in the specific fields.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.AddCalculatedField(System.String,System.String,System.Boolean)">
      <summary>
            Adds a calclulated field to pivot field.
            </summary>
      <param name="name">The name of the calculated field</param>
      <param name="formula">The formula of the calculated field.</param>
      <param name="dragToDataArea">True,drag this field to data area immediately</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.AddCalculatedField(System.String,System.String)">
      <summary>
            Adds a calclulated field to pivot field and drag it to data area.
            </summary>
      <param name="name">The name of the calculated field</param>
      <param name="formula">The formula of the calculated field.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.Fields(Aspose.Cells.Pivot.PivotFieldType)">
      <summary>
            Gets the specific fields by the field type.
            </summary>
      <param name="fieldType">the field type.</param>
      <returns>the specific fields</returns>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ColumnFields">
      <summary>
            Returns a PivotFields object that are currently shown as column fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RowFields">
      <summary>
            Returns a PivotFields object that are currently shown as row fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PageFields">
      <summary>
            Returns a PivotFields object that are currently shown as page fields.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DataFields">
      <summary>
            Gets a PivotField object that represents all the data fields in a PivotTable.
            Read-only.It would be init only when there are two or more data fields in the DataPiovtFiels.
            It only use to add DataPivotField to the PivotTable row/column area . Default is in row area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DataField">
      <summary>
            Gets a PivotField object that represents all the data fields in a PivotTable.
            Read-only.It would be init only when there are two or more data fields in the DataPiovtFiels.
            It only use to add DataPivotField to the PivotTable row/column area . Default is in row area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.BaseFields">
      <summary>
            Returns a PivotFields object that includes all fields in the PivotTable report
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PivotFilters">
      <summary>
            Returns a PivotFilterCollection object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ColumnRange">
      <summary>
            Returns a CellArea object that represents the range
            that contains the column area in the PivotTable report. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RowRange">
      <summary>
            Returns a CellArea object that represents the range
            that contains the row area in the PivotTable report. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DataBodyRange">
      <summary>
            Returns a CellArea object that represents the range that contains the data area
            in the list between the header row and the insert row. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.TableRange1">
      <summary>
            Returns a CellArea object that represents the range containing the entire PivotTable report,
            but doesn't include page fields. Read-only.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.TableRange2">
      <summary>
            Returns a CellArea object that represents the range containing the entire PivotTable report,
            includes page fields. Read-only.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.Move(System.Int32,System.Int32)">
      <summary>
             Moves the PivotTable to a different location in the worksheet.
            </summary>
      <param name="row">row index.</param>
      <param name="column">column index.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.Move(System.String)">
      <summary>
            Moves the PivotTable to a different location in the worksheet.
            </summary>
      <param name="destCellName">the dest cell name.</param>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ColumnGrand">
      <summary>
            Indicates whether the PivotTable report shows grand totals for columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.IsGridDropZones">
      <summary>
            Indicates whether the PivotTable report displays classic pivottable layout.
            (enables dragging fields in the grid)
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RowGrand">
      <summary>
             Indicates whether the PivotTable report shows grand totals for rows.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DisplayNullString">
      <summary>
            Indicates whether the PivotTable report displays a custom string
            in cells that contain null values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.NullString">
      <summary>
            Gets the string displayed in cells that contain null values
            when the DisplayNullString property is true.The default value is an empty string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DisplayErrorString">
      <summary>
            Indicates whether the PivotTable report displays a custom string in cells that contain errors.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ErrorString">
      <summary>
            Gets the string displayed in cells that contain errors
            when the DisplayErrorString property is true.The default value is an empty string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.IsAutoFormat">
      <summary>
            Indicates whether the PivotTable report is automatically formatted.
            Checkbox "autoformat table "which in pivottable option for Excel 2003
            Checkbox "autofit column width on update"which in pivot table Options :Layout Format for Excel 2007
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.AutoFormatType">
      <summary>
            Gets the PivotTable auto format type.
            </summary>
      <see cref="T:Aspose.Cells.Pivot.PivotTableAutoFormatType" />
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.HasBlankRows">
      <summary>
            Indicates whether to add blank rows.
            This property only applies for the PivotTable auto format types which needs to add blank rows.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.MergeLabels">
      <summary>
            Indicates whether the specified PivotTable report's outer-row item, column item, subtotal,
            and grand total labels use merged cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PreserveFormatting">
      <summary>
            Indicates whether formatting is preserved when the PivotTable is refreshed or recalculated.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowDrill">
      <summary>
            Gets whether expand/collapse buttons is shown.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.EnableDrilldown">
      <summary>
            Gets whether drilldown is enabled.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.EnableFieldDialog">
      <summary>
            Indicates whether the PivotTable Field dialog box is available
            when the user double-clicks the PivotTable field.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.EnableFieldList">
      <summary>
            Gets whether enable the field list for the PivotTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.EnableWizard">
      <summary>
            Indicates whether the PivotTable Wizard is available.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.SubtotalHiddenPageItems">
      <summary>
             Indicates whether hidden page field items in the PivotTable report
             are included in row and column subtotals, block totals, and grand totals.
             The default value is False.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.GrandTotalName">
      <summary>
            Returns the text string label that is displayed in the grand total column or row heading.
            The default value is the string "Grand Total".
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ManualUpdate">
      <summary>
            Indicates whether the PivotTable report is recalculated only at the user's request.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.IsMultipleFieldFilters">
      <summary>
            Specifies a boolean value that indicates whether the fields of a PivotTable can have multiple filters set on them.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.MissingItemsLimit">
      <summary>
            Specifies a boolean value that indicates whether the fields of a PivotTable can have multiple filters set on them.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.EnableDataValueEditing">
      <summary>
            Specifies a boolean value that indicates whether the user is allowed to edit the cells in the data area of the pivottable.
            Enable cell editing in the values area
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowDataTips">
      <summary>
            Specifies a boolean value that indicates whether tooltips should be displayed for PivotTable data cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowMemberPropertyTips">
      <summary>
             Specifies a boolean value that indicates whether member property information should be omitted from PivotTable tooltips.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowValuesRow">
      <summary>
             Specifies a boolean value that indicates whether show values row.
             show the values row
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowEmptyCol">
      <summary>
            Specifies a boolean value that indicates whether to include empty columns in the table
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowEmptyRow">
      <summary>
            Specifies a boolean value that indicates whether to include empty rows in the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.FieldListSortAscending">
      <summary>
            Specifies a boolean value that indicates whether fields in the PivotTable are sorted in non-default order in the field list.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PrintDrill">
      <summary>
            Specifies a boolean value that indicates whether drill indicators should be printed.
            print expand/collapse buttons when displayed on pivottable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.AltTextTitle">
      <summary>
             Gets the title of the alttext
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.AltTextDescription">
      <summary>
             Gets the description of the alt text
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.Name">
      <summary>
             Gets the name of the PivotTable
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ColumnHeaderCaption">
      <summary>
             Gets the Column Header Caption of the PivotTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.Indent">
      <summary>
             Specifies the indentation increment for compact axis and can be used to set the Report Layout to Compact Form.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RowHeaderCaption">
      <summary>
             Gets the Row Header Caption of the PivotTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowRowHeaderCaption">
      <summary>
             Indicates whether row header caption is shown in the PivotTable report
             Indicates whether Display field captions and filter drop downs
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.CustomListSort">
      <summary>
            Indicates whether consider built-in custom list when sort data
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Aspose.Cells.Pivot.PivotTable.PivotFormatConditions" -->
    <member name="P:Aspose.Cells.Pivot.PivotTable.PageFieldOrder">
      <summary>
            Gets the order in which page fields are added to the PivotTable report's layout.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PageFieldWrapCount">
      <summary>
            Gets the number of page fields in each column or row in the PivotTable report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.Tag">
      <summary>
            Gets a string saved with the PivotTable report.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.SaveData">
      <summary>
            Indicates whether data for the PivotTable report is saved with the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RefreshDataOnOpeningFile">
      <summary>
            Indicates whether Refresh Data when Opening File.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.RefreshDataFlag">
      <summary>
            Indicates whether Refresh Data or not.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DataSource">
      <summary>
            Gets and sets the data source of the pivot table.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.ChangeDataSource(System.String[])">
      <summary>
            Set pivottable's source data.
            Sheet1!$A$1:$C$3
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.GetSource">
      <summary>
            Get pivottable's source data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.RefreshData">
      <summary>
            Refreshes pivottable's data and setting from it's data source.
            </summary>
      <remarks>
            We will gather data from data source to a pivot cache ,then calcualte the data in the cache to the cells.
            This method is only used to gather all data to a pivot cache.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.CalculateData">
      <summary>
            Calculates pivottable's data to cells.
            </summary>
      <remarks>
            Cell.Value in the pivot range could not return the correct result if the method is not been called.
            This method caclulates data with an inner pivot cache,not original data source.
            So if the data source is changed, please call RefreshData() method first.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.ClearData">
      <summary>
            Clear PivotTable's data and formatting
            </summary>
      <remarks>
            If this method is not callled before you add or delete PivotField, Maybe the PivotTable data is not corrected
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.CalculateRange">
      <summary>
             Calculates pivottable's range.
             </summary>
      <remarks>
             If this method is not been called,maybe the pivottable range is not corrected.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.FormatAll(Aspose.Cells.Style)">
      <summary>
            Format all the cell in the pivottable area
            </summary>
      <param name="style">Style which is to format</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.Format(System.Int32,System.Int32,Aspose.Cells.Style)">
      <summary>
            Format the cell in the pivottable area
            </summary>
      <param name="row">RowIndex of the cell</param>
      <param name="column">Column index of the cell</param>
      <param name="style">Style which is to format the cell</param>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ItemPrintTitles">
      <summary>
            A bit that specifies whether pivot item captions on the row axis
            are repeated on each printed page for pivot fields in tabular form.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.PrintTitles">
      <summary>
            Indicates whether the print titles for the worksheet are set based
            on the PivotTable report. The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.DisplayImmediateItems">
      <summary>
            Indicates whether items in the row and column areas are visible
            when the data area of the PivotTable is empty. The default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.IsSelected">
      <summary>
             Indicates whether the PivotTable is selected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowPivotStyleRowHeader">
      <summary>
            Indicates whether the row header in the pivot table should have the style applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowPivotStyleColumnHeader">
      <summary>
            Indicates whether the column header in the pivot table should have the style applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowPivotStyleRowStripes">
      <summary>
            Indicates whether row stripe formatting is applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowPivotStyleColumnStripes">
      <summary>
            Indicates whether column stripe formatting is applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTable.ShowPivotStyleLastColumn">
      <summary>
            Indicates whether column stripe formatting is applied.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetAutoGroupField(System.Int32)">
      <summary>
            Sets auto field group by the PivotTable.
            </summary>
      <param name="baseFieldIndex">The row or column field index in the base fields</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetAutoGroupField(Aspose.Cells.Pivot.PivotField)">
      <summary>
            Sets auto field group by the PivotTable.
            </summary>
      <param name="pivotField">The row or column field in the specific fields</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetManualGroupField(System.Int32,System.Double,System.Double,System.Collections.ArrayList,System.Double)">
      <summary>
            Sets manual field group by the PivotTable.
            </summary>
      <param name="baseFieldIndex">The row or column field index in the base fields</param>
      <param name="startVal">Specifies the starting value for numeric grouping.</param>
      <param name="endVal">Specifies the ending value for numeric grouping. </param>
      <param name="groupByList">Specifies the grouping type list. Specified by PivotTableGroupType</param>
      <param name="intervalNum">Specifies the interval number group by  numeric grouping.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetManualGroupField(Aspose.Cells.Pivot.PivotField,System.Double,System.Double,System.Collections.ArrayList,System.Double)">
      <summary>
            Sets manual field group by the PivotTable.
            </summary>
      <param name="pivotField">The row or column field in the base fields</param>
      <param name="startVal">Specifies the starting value for numeric grouping.</param>
      <param name="endVal">Specifies the ending value for numeric grouping. </param>
      <param name="groupByList">Specifies the grouping type list. Specified by PivotTableGroupType</param>
      <param name="intervalNum">Specifies the interval number group by numeric grouping.</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetManualGroupField(System.Int32,System.DateTime,System.DateTime,System.Collections.ArrayList,System.Int32)">
      <summary>
            Sets manual field group by the PivotTable.
            </summary>
      <param name="baseFieldIndex">The row or column field index in the base fields</param>
      <param name="startVal">Specifies the starting value for date grouping. </param>
      <param name="endVal">Specifies the ending value for date grouping.</param>
      <param name="groupByList">Specifies the grouping type list. Specified by PivotTableGroupType</param>
      <param name="intervalNum">Specifies the interval number group by in days grouping.The number of days must be positive integer of nonzero</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetManualGroupField(Aspose.Cells.Pivot.PivotField,System.DateTime,System.DateTime,System.Collections.ArrayList,System.Int32)">
      <summary>
            Sets manual field group by the PivotTable.
            </summary>
      <param name="pivotField">The row or column field in the base fields</param>
      <param name="startVal">Specifies the starting value for date grouping.</param>
      <param name="endVal">Specifies the ending value for date grouping.</param>
      <param name="groupByList">Specifies the grouping type list. Specified by PivotTableGroupType</param>
      <param name="intervalNum">Specifies the interval number group by in days grouping.The number of days must be positive integer of nonzero</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetUngroup(System.Int32)">
      <summary>
            Sets ungroup by the PivotTable
            </summary>
      <param name="baseFieldIndex">The row or column field index in the base fields</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.SetUngroup(Aspose.Cells.Pivot.PivotField)">
      <summary>
            Sets ungroup by the PivotTable
            </summary>
      <param name="pivotField">The row or column field in the base fields</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.GetHorizontalBreaks">
      <summary>
            get pivot table row index list of horizontal pagebreaks
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.ShowInCompactForm">
      <summary>
            Layouts the PivotTable in compact form.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.ShowInOutlineForm">
      <summary>
            Layouts the PivotTable in outline form.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.ShowInTabularForm">
      <summary>
            Layouts the PivotTable in tabular form.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTable.GetCellByDisplayName(System.String)">
      <summary>
            Gets the Cell object by the DisplayName of PivotField
            </summary>
      <param name="displayName">the DisplayName of PivotField</param>
      <returns>the Cell object</returns>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotTableAutoFormatType">
      <summary>
            Represents PivotTable auto format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.None">
      <summary>
            Represents None format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Classic">
      <summary>
            Represents Classic auto format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report1">
      <summary>
            Represents Report1 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report2">
      <summary>
            Represents Report2 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report3">
      <summary>
            Represents Report3 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report4">
      <summary>
            Represents Report4 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report5">
      <summary>
            Represents Report5 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report6">
      <summary>
            Represents Report6 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report7">
      <summary>
            Represents Report7 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report8">
      <summary>
            Represents Report8 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report9">
      <summary>
            Represents Report9 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Report10">
      <summary>
            Represents Report10 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table1">
      <summary>
            Represents Table1 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table2">
      <summary>
            Represents Table2 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table3">
      <summary>
            Represents Table3 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table4">
      <summary>
            Represents Table4 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table5">
      <summary>
            Represents Table5 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table6">
      <summary>
            Represents Table6 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table7">
      <summary>
            Represents Table7 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table8">
      <summary>
            Represents Table8 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table9">
      <summary>
            Represents Table9 format type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableAutoFormatType.Table10">
      <summary>
            Represents Table10 format type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotTableCollection">
      <summary>
            Represents the collection of all the PivotTable objects on the specified worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String,System.String,System.String)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data for the new PivotTable cache.</param>
      <param name="destCellName">The cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String,System.String,System.String,System.Boolean)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data for the new PivotTable cache.</param>
      <param name="destCellName">The cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <param name="useSameSource">Indicates whether using same data source when another existing pivot table has used this data source.
            If the property is true, it will save memory.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data cell range for the new PivotTable.Example : Sheet1!A1:C8</param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String,System.Int32,System.Int32,System.String,System.Boolean)">
      <summary>
            Adds a new PivotTable cache to a PivotCaches collection.
            </summary>
      <param name="sourceData">The data cell range for the new PivotTable.Example : Sheet1!A1:C8</param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <param name="useSameSource">Indicates whether using same data source when another existing pivot table has used this data source.
            If the property is true, it will save memory.</param>
      <returns>The new added cache index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(Aspose.Cells.Pivot.PivotTable,System.String,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection from another PivotTable.
            </summary>
      <param name="pivotTable">The source pivotTable.</param>
      <param name="destCellName">The cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(Aspose.Cells.Pivot.PivotTable,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection from another PivotTable.
            </summary>
      <param name="pivotTable">The source pivotTable.</param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String[],System.Boolean,Aspose.Cells.Pivot.PivotPageFields,System.String,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection with multiple consolidation ranges as data source.
            </summary>
      <param name="sourceData">The multiple consolidation ranges,such as {"Sheet1!A1:C8","Sheet2!A1:B8"}</param>
      <param name="isAutoPage">Whether auto create a single page field.
            If true,the following param pageFields will be ignored.
            </param>
      <param name="pageFields">The pivot page field items.
            </param>
      <param name="destCellName">destCellName The name of the new PivotTable report.</param>
      <param name="tableName">the name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Add(System.String[],System.Boolean,Aspose.Cells.Pivot.PivotPageFields,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a new PivotTable Object to the collection with multiple consolidation ranges as data source.
            </summary>
      <param name="sourceData">The multiple consolidation ranges,such as {"Sheet1!A1:C8","Sheet2!A1:B8"}</param>
      <param name="isAutoPage">Whether auto create a single page field.
            If true,the following param pageFields will be ignored</param>
      <param name="pageFields">The pivot page field items.
            </param>
      <param name="row">Row index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="column">Column index of the cell in the upper-left corner of the PivotTable report's destination range.</param>
      <param name="tableName">The name of the new PivotTable report.</param>
      <returns>The new added PivotTable index.</returns>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTableCollection.Item(System.Int32)">
      <summary>
            Gets the PivotTable report by index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTableCollection.Item(System.String)">
      <summary>
            Gets the PivotTable report by pivottable's name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.PivotTableCollection.Item(System.Int32,System.Int32)">
      <summary>
            Gets the PivotTable report by pivottable's position.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Clear">
      <summary>
            Clear all pivot tables.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.Remove(Aspose.Cells.Pivot.PivotTable)">
      <summary>
            Deletes the specified PivotTable
            </summary>
      <param name="pivotTable">PivotTable object</param>
    </member>
    <member name="M:Aspose.Cells.Pivot.PivotTableCollection.RemoveAt(System.Int32)">
      <summary>
            Deletes the PivotTable at the specified index
            </summary>
      <param name="index">the position index in PivotTable collection</param>
    </member>
    <member name="T:Aspose.Cells.Pivot.PivotTableStyleType">
      <summary>
            Represents the pivot table style type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight13">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight14">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight15">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight17">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight18">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight19">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight20">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight21">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight22">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight23">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight25">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight26">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight27">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleLight28">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium13">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium14">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium15">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium17">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium18">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium19">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium20">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium21">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium22">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium23">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium25">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium26">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium27">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleMedium28">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark13">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark14">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark15">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark17">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark18">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark19">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark20">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark21">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark22">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark23">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark25">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark26">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark27">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.PivotTableStyleDark28">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Pivot.PivotTableStyleType.Custom">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Pivot.SxRng">
      <summary>
            Represents Group Range in a PivotField.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.IsAutoStart">
      <summary>
            Specifies a boolean value that indicates whether the application will use the source data to set the beginning range value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.IsAutoEnd">
      <summary>
            Specifies a boolean value that indicates whether the application will use the source data to set the endding range value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.Start">
      <summary>
            Represents the start object for the group range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.End">
      <summary>
            Represents the end object for the group range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.By">
      <summary>
            Represents the interval object for the group range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Pivot.SxRng.GroupByTypes">
      <summary>
            Represents the group type for the group range.
            rangeofvalue Seconds Minutes Hours Days Months Quarters Years
            </summary>
    </member>
    <member name="T:Aspose.Cells.RenameStrategy">
      <summary>
             Renames strategy when columns contains the duplicate names.
            </summary>
    </member>
    <member name="F:Aspose.Cells.RenameStrategy.Exception">
      <summary>
            Throws exception.
            </summary>
    </member>
    <member name="F:Aspose.Cells.RenameStrategy.Digit">
      <summary>
            Named with sigit. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.RenameStrategy.Letter">
      <summary>
            Named with leteter.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalConnections.NamespaceDoc">
      <summary>
            Contains all classes of external connections.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Metadata.MetadataOptions">
      <summary>
            Represents the options of loading metadata of the file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Metadata.MetadataOptions.#ctor(Aspose.Cells.Metadata.MetadataType)">
      <summary>
            Creates an options of loading the metadata.
            </summary>
      <param name="metadataType">The type of metadata.</param>
    </member>
    <member name="P:Aspose.Cells.Metadata.MetadataOptions.MetadataType">
      <summary>
            Gets and sets the type of the metadata which is loading.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Metadata.MetadataOptions.Password">
      <summary>
            Represents Workbook file encryption password.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Metadata.MetadataOptions.KeyLength">
      <summary>
            The key length.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Metadata.MetadataType">
      <summary>
            Represents the type of metadata.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Metadata.MetadataType.Encryption">
      <summary>
            Encrypts the file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Metadata.MetadataType.Decryption">
      <summary>
            Decrypts the file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Metadata.MetadataType.DocumentProperties">
      <summary>
            Load the properties of the file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Metadata.WorkbookMetadata">
      <summary>
            Represents the meta data.
            </summary>
      <example>
            The following example creates a WorkbookMetadata.
            <code>
            [C#]
              MetadataOptions options = new MetadataOptions(MetadataType.DocumentProperties);
              WorkbookMetadata meta = new WorkbookMetadata(path + "book1.xlsx", options);
              meta.CustomDocumentProperties.Add("test", "test");
              meta.Save(path + "book2.xlsx");
            </code></example>
    </member>
    <member name="M:Aspose.Cells.Metadata.WorkbookMetadata.#ctor(System.String,Aspose.Cells.Metadata.MetadataOptions)">
      <summary>
            Create the meta data object.
            </summary>
      <param name="fileName">
      </param>
      <param name="options">
      </param>
    </member>
    <member name="M:Aspose.Cells.Metadata.WorkbookMetadata.#ctor(System.IO.Stream,Aspose.Cells.Metadata.MetadataOptions)">
      <summary>
            Create the meta data object.
            </summary>
      <param name="stream">
      </param>
      <param name="options">
      </param>
    </member>
    <member name="P:Aspose.Cells.Metadata.WorkbookMetadata.Options">
      <summary>
            Gets the options of the metadata.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Metadata.WorkbookMetadata.BuiltInDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the  built-in document properties of the spreadsheet. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Metadata.WorkbookMetadata.CustomDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the custom document properties of the spreadsheet. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Metadata.WorkbookMetadata.Save(System.String)">
      <summary>
            Save the modified metadata to the file.
            </summary>
      <param name="fileName">The file name.</param>
    </member>
    <member name="M:Aspose.Cells.Metadata.WorkbookMetadata.Save(System.IO.Stream)">
      <summary>
            Save the modified metadata to the stream.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="T:Aspose.Cells.Metadata.NamespaceDoc">
      <summary>
            Contains all classes of loading and saving metadata.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CellValueFormatStrategy">
      <summary>
            Specifies how to apply style for the value of the cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueFormatStrategy.None">
      <summary>
            Not formatted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueFormatStrategy.CellStyle">
      <summary>
            Only formatted with the cell's original style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueFormatStrategy.DisplayStyle">
      <summary>
            Formatted with the cell's displayed style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CalculationPrecisionStrategy">
      <summary>
            Enumerates strategies for handling calculation precision.
            Because of the precision issue of IEEE 754 Floating-Point Arithmetic, some "seemingly simple" formulas may not be calcualted as the expected result.
            Such as formula "=-0.45+0.43+0.02", when calcuating operands by '+' operator directly, the result is not zero. For such kind of precision issue,
            some special strategies may give the expected result.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CalculationPrecisionStrategy.None">
      <summary>
            No strategy applied on calculation.
            When calculating just use the original double value as operand and return the result directly.
            Most efficient for performance and applicable for most cases.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CalculationPrecisionStrategy.Round">
      <summary>
            Rounds the calculation result according with significant digits.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CalculationPrecisionStrategy.Decimal">
      <summary>
            Uses decimal as operands when possible.
            Most inefficient for performance.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CalculationOptions">
      <summary>
            Represents options for calculation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.IgnoreError">
      <summary>
            Indicates if you need to hide the error in calculating formulas.
            The error may be unsupported function, external links, etc.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.CustomFunction">
      <summary>
            The custom formula calculation functions to extend the calculation engine.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.CustomEngine">
      <summary>
            The custom formula calculation engine to extend the default calculation engine of Aspose.Cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.CalcStackSize">
      <summary>
            Specifies the stack size for calculating cells recursively.
            -1 for this property means the calculation will use WorkbookSettings.CalcStackSize of corresponding workbook.
            </summary>
      <see cref="P:Aspose.Cells.WorkbookSettings.CalcStackSize" />
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.PrecisionStrategy">
      <summary>
            Specifies the strategy for processing precision of calcuation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CalculationOptions.Recursive">
      <summary>
            Indicates whether calculate the dependent cells recursively when calculating one cell and it depends on other cells.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.CustomXmlPart">
      <summary>
            Represents a InnerCustom XML Data Storage Part (custom XML data within a package). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.CustomXmlPart.Data">
      <summary>
            Gets or sets the XML content of this InnerCustom XML Data Storage Part. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.CustomXmlPart.SchemaData">
      <summary>
            Gets or sets the XML content of this InnerCustom XML Schema Data Storage Part. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.CustomXmlPartCollection">
      <summary>
            Represents a InnerCustom XML Data Storage Part (custom XML data within a package). 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Markup.CustomXmlPartCollection.Add(System.Byte[],System.Byte[])">
      <summary>
            Adds an item to the collection. 
            </summary>
      <param name="data">The XML content of this InnerCustom XML Data Storage Part. </param>
      <param name="shemaData">The set of XML schemas that are associated with this custom XML part. </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Markup.CustomXmlPartCollection.Item(System.Int32)">
      <summary>
            Gets an item at the specified index. 
            </summary>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Markup.NamespaceDoc">
      <summary>
            Contains all classes of smart tag.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTag">
      <summary>
            Represents a smart tag.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTag.Deleted">
      <summary>
            Indicates whether the smart tag is deleted.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTag.Properties">
      <summary>
            Gets and set the properties of the smar tag.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTag.Uri">
      <summary>
            Gets the namespace URI of the smart tag.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTag.Name">
      <summary>
            Gets the name of the smart tag. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Markup.SmartTag.SetLink(System.String,System.String)">
      <summary>
            Change the name and  the namespace URI of the smart tag.
            </summary>
      <param name="uri">The namespace URI of the smart tag.</param>
      <param name="name">The name of the smart tag.</param>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagCollection">
      <summary>
            Represents all smart tags in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagCollection.Row">
      <summary>
            Gets the row of the cell smart tags.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagCollection.Column">
      <summary>
            Gets the column of the cell smart tags.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagCollection.Item(System.Int32)">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Markup.SmartTag" /> object at the specific index
            </summary>
      <param name="index">The index.</param>
      <returns>returns a <see cref="T:Aspose.Cells.Markup.SmartTag" /> object. </returns>
    </member>
    <member name="M:Aspose.Cells.Markup.SmartTagCollection.Add(System.String,System.String)">
      <summary>
            Adds a smart tag.
            </summary>
      <param name="uri">Specifies the namespace URI of the smart tag</param>
      <param name="name">Specifies the name of the smart tag. </param>
      <returns>The index of smart tag in the list.</returns>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagOptions">
      <summary>
            Represents the options of the smart tag.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagOptions.EmbedSmartTags">
      <summary>
            Indicates whether saving smart tags with the workbook. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagOptions.ShowType">
      <summary>
            Repesents the show type of smart tag.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagSetting">
      <summary>
            Represents all <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object in the worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Markup.SmartTagSetting.Add(System.Int32,System.Int32)">
      <summary>
            Adds a <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object to a cell.
            </summary>
      <param name="row">The row of the cell.</param>
      <param name="column">The column of the cell.</param>
      <returns>Returns index of a <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object in the worksheet.</returns>
    </member>
    <member name="M:Aspose.Cells.Markup.SmartTagSetting.Add(System.String)">
      <summary>
            Add a cell smart tags.
            </summary>
      <param name="cellName">The name of the cell.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagSetting.Item(System.Int32)">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object by the index.
            </summary>
      <param name="index">The index of the <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object in the list.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagSetting.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object of the cell.
            </summary>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell</param>
      <returns>Returns the <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object of the cell.
            Returns null if there is no any smart tags on the cell.
            </returns>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagSetting.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object of the cell.
            </summary>
      <param name="cellName">The name of the cell.</param>
      <returns>Returns the <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> object of the cell.
            Returns null if there is no any smart tags on the cell.
            </returns>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagProperty">
      <summary>
            Represents the property of the cell smart tag.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagProperty.Name">
      <summary>
            Gets and sets the name of the property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagProperty.Value">
      <summary>
            Gets and sets the value of the property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagPropertyCollection">
      <summary>
            Represents all properties of cell smart tag.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagPropertyCollection.Item(System.Int32)">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Markup.SmartTagProperty" /> object.
            </summary>
      <param name="index">The index</param>
      <returns>Returns a <see cref="T:Aspose.Cells.Markup.SmartTagProperty" /> object.</returns>
    </member>
    <member name="P:Aspose.Cells.Markup.SmartTagPropertyCollection.Item(System.String)">
      <summary>
            Gets a <see cref="T:Aspose.Cells.Markup.SmartTagProperty" /> object by the name of the property.
            </summary>
      <param name="name">The name of the proerty.</param>
      <returns>Returns a <see cref="T:Aspose.Cells.Markup.SmartTagProperty" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Markup.SmartTagPropertyCollection.Add(System.String,System.String)">
      <summary>
            Adds a property of cell's smart tag.
            </summary>
      <param name="name">The name of the propery</param>
      <param name="value">The value of the property.</param>
      <returns>return <see cref="T:Aspose.Cells.Markup.SmartTagProperty" /></returns>
    </member>
    <member name="T:Aspose.Cells.Markup.SmartTagShowType">
      <summary>
            Represents the show type of the smart tag.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Markup.SmartTagShowType.All">
      <summary>
            Indicates that smart tags are enabled and shown
            </summary>
    </member>
    <member name="F:Aspose.Cells.Markup.SmartTagShowType.NoSmartTagIndicator">
      <summary>
            Indicates that the smart tags are enabled but the indicator not be shown. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.Markup.SmartTagShowType.None">
      <summary>
            Indicates that smart tags are disabled and not displayed. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.TxtLoadStyleStrategy">
      <summary>
            Specifies how to apply style for parsed values when converting string value to number or datetime.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtLoadStyleStrategy.None">
      <summary>
            Does not set style for the parsed value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtLoadStyleStrategy.BuiltIn">
      <summary>
            Set the style as built-in number/datetime when the parsed value are plain numeric/datetime values.
            </summary>
      <remarks>
            When ms excel parsing datetime or numeric values according to user's input(such as CSV file),
            the formatting of those values may be changed, such as
            leading/tailing zeros of number, year/month/day order of datetime, ...etc.
            This type is for simulating ms excel's behavior.
            </remarks>
    </member>
    <member name="F:Aspose.Cells.TxtLoadStyleStrategy.ExactFormat">
      <summary>
            Set the exact custom format for the parsed value to make the formatted value be same with the original input one.
            </summary>
    </member>
    <member name="T:Aspose.Cells.NamespaceDoc">
      <summary>
            Contains all basic classes of Aspose.Cells.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DigitalSignatures.NamespaceDoc">
      <summary>
            Contains all classes of DigitalSignature.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.NamespaceDoc">
      <summary>
            Contains all core classes of Aspose.Cells.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.ContentTypeProperty">
      <summary>
            Represents identifier information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.ContentTypeProperty.Name">
      <summary>
            Returns or sets the name of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.ContentTypeProperty.Value">
      <summary>
            Returns or sets the value of the content type property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.ContentTypeProperty.Type">
      <summary>
            Gets and sets the type of the property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.ContentTypePropertyCollection">
      <summary>
            A collection of <see cref="T:Aspose.Cells.Properties.ContentTypeProperty" /> objects that represent additional information. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Properties.ContentTypePropertyCollection.Add(System.String,System.String)">
      <summary>
            Adds content type property information.
            </summary>
      <param name="name">The name of the content type property.</param>
      <param name="value">The value of the content type property.</param>
    </member>
    <member name="M:Aspose.Cells.Properties.ContentTypePropertyCollection.Add(System.String,System.String,System.String)">
      <summary>
            Adds content type property information.
            </summary>
      <param name="name">The name of the content type property.</param>
      <param name="value">The value of the content type property.</param>
      <param name="type">The type of the content type property.</param>
    </member>
    <member name="P:Aspose.Cells.Properties.ContentTypePropertyCollection.Item(System.Int32)">
      <summary>
            Gets the content type property by the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>The content type property</returns>
    </member>
    <member name="P:Aspose.Cells.Properties.ContentTypePropertyCollection.Item(System.String)">
      <summary>
            Gets the content type property by the property name.
            </summary>
      <param name="name">The property name.</param>
      <returns>The content type property</returns>
    </member>
    <member name="T:Aspose.Cells.Properties.CustomPropertyCollection">
      <summary>
            A collection of <see cref="T:Aspose.Cells.Properties.CustomProperty" /> objects that represent additional information. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomPropertyCollection.Add(System.String,System.String)">
      <summary>
            Adds custom property information.
            </summary>
      <param name="name">The name of the custom property.</param>
      <param name="value">The value of the custom property.</param>
    </member>
    <member name="P:Aspose.Cells.Properties.CustomPropertyCollection.Item(System.Int32)">
      <summary>
            Gets the custom property by the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>The custom property</returns>
    </member>
    <member name="P:Aspose.Cells.Properties.CustomPropertyCollection.Item(System.String)">
      <summary>
            Gets the custom property by the property name.
            </summary>
      <param name="name">The property name.</param>
      <returns>The custom property</returns>
    </member>
    <member name="T:Aspose.Cells.Properties.CustomProperty">
      <summary>
            Represents identifier information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.CustomProperty.Name">
      <summary>
            Returns or sets the name of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.CustomProperty.StringValue">
      <summary>
            Returns or sets the value of the custom property.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use CustomProperty.Value property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.CustomProperty.Value">
      <summary>
            Returns or sets the value of the custom property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection">
      <summary>
            A collection of built-in document properties.
            </summary>
      <remarks>
        <p>Provides access to <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> objects by their names (using an indexer) and
            via a set of typed properties that return values of appropriate types.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Item(System.String)">
      <overloads>Returns a <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object.</overloads>
      <summary>
            Returns a <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object by the name of the property.
            </summary>
      <remarks>
        <p>The string names of the properties correspond to the names of the typed
            properties available from <see cref="T:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection" />.</p>
        <p>If you request a property that is not present in the document, but the name
            of the property is recognized as a valid built-in name, a new <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> 
            is created, added to the collection and returned. The newly created property is assigned
            a default value (empty string, zero, false or DateTime.MinValue depending on the type
            of the built-in property).</p>
        <p>If you request a property that is not present in the document and the name
            is not recognized as a built-in name, a null is returned.</p>
      </remarks>
      <param name="name">The case-insensitive name of the property to retrieve.</param>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Author">
      <summary>
            Gets or sets the name of the document's author.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Bytes">
      <summary>
            Represents an estimate of the number of bytes in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Characters">
      <summary>
            Represents an estimate of the number of characters in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.CharactersWithSpaces">
      <summary>
            Represents an estimate of the number of characters (including spaces) in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Comments">
      <summary>
            Gets or sets the document comments.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Category">
      <summary>
            Gets or sets the category of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.ContentType">
      <summary>
            Gets or sets the content type of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.ContentStatus">
      <summary>
            Gets or sets the content status of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Company">
      <summary>
            Gets or sets the company property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.HyperlinkBase">
      <summary>
            Gets or sets the hyperlinkbase property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.CreatedTime">
      <summary>
            Gets or sets date of the document creation in UTC.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Keywords">
      <summary>
            Gets or sets the document keywords.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.LastPrinted">
      <summary>
            Gets or sets the date when the document was last printed in UTC.
            </summary>
      <remarks>
        <p>If the document was never printed, this property will return DateTime.MinValue.</p>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.LastSavedBy">
      <summary>
            Gets or sets the name of the last author.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.LastSavedTime">
      <summary>
            Gets or sets the time of the last save in UTC.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Lines">
      <summary>
            Represents an estimate of the number of lines in the document.
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Manager">
      <summary>
            Gets or sets the manager property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.NameOfApplication">
      <summary>
            Gets or sets the name of the application.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Pages">
      <summary>
            Represents an estimate of the number of pages in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Paragraphs">
      <summary>
            Represents an estimate of the number of paragraphs in the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.RevisionNumber">
      <summary>
            Gets or sets the document revision number. 
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
      <remarks>NOTE: This property is now obsolete. 
            Instead, please use BuiltInDocumentPropertyCollection.Revision propery,
            this property will be removed 12 months later since February 2017. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Revision">
      <summary>
            Gets or sets the document revision number. 
            </summary>
      <remarks>
        <p>Aspose.Cells does not update this property when you modify the document.</p>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Subject">
      <summary>
            Gets or sets the subject of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Template">
      <summary>
            Gets or sets the informational name of the document template.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Title">
      <summary>
            Gets or sets the title of the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.TotalEditingTime">
      <summary>
            Gets or sets the total editing time in minutes.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Version">
      <summary>
            Represents the version number of the application that created the document.
            </summary>
      <remarks>
            It's format is "00.0000",for example : 12.0000
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.ScaleCrop">
      <summary>
            Indicates the display mode of the document thumbnail.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.LinksUpToDate">
      <summary>
            Indicates whether hyperlinks in a document are up-to-date.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection.Words">
      <summary>
            Represents an estimate of the number of words in the document.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.CustomDocumentPropertyCollection">
      <summary>
             A collection of custom document properties. 
             </summary>
      <remarks>
        <p>Each <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object represents a custom property of a container document.</p>
      </remarks>
      <example>
        <code>
             
             [C#]
             
             //Instantiate a Workbook object
             Workbook workbook = new Workbook("C:\\book1.xls");
             
             //Retrieve a list of all custom document properties of the Excel file
             CustomDocumentPropertyCollection customProperties = workbook.Worksheets.CustomDocumentProperties;
            
             [VB.NET]
             
             'Instantiate a Workbook object
             Dim workbook As New Workbook("C:\book1.xls")
             
             'Retrieve a list of all custom document properties of the Excel file
             Dim customProperties As CustomDocumentPropertyCollection = workbook.Worksheets.CustomDocumentProperties
             
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.Add(System.String,System.String)">
      <overloads>Creates a new custom document property.</overloads>
      <summary>
            Creates a new custom document property of the <b>PropertyType.String</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.Add(System.String,System.Int32)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Number</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.Add(System.String,System.DateTime)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.DateTime</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.Add(System.String,System.Boolean)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Boolean</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.Add(System.String,System.Double)">
      <summary>
            Creates a new custom document property of the <b>PropertyType.Float</b> data type.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="value">The value of the property.</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.AddLinkToContent(System.String,System.String)">
      <summary>
             Creates a new custom document property which links to content.
            </summary>
      <param name="name">The name of the property.</param>
      <param name="source">The source of the property</param>
      <returns>The newly created property object.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.UpdateLinkedPropertyValue">
      <summary>
            Update custom document property value which links to content.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Properties.CustomDocumentPropertyCollection.UpdateLinkedRange">
      <summary>
            Update custom document property value to linked range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.DocumentPropertyCollection">
      <summary>
            Base class for <see cref="T:Aspose.Cells.Properties.BuiltInDocumentPropertyCollection" /> and <see cref="T:Aspose.Cells.Properties.CustomDocumentPropertyCollection" /> collections.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate a Workbook object by calling its empty constructor
            Workbook workbook = new Workbook("C:\\book1.xls");
             
            //Retrieve a list of all custom document properties of the Excel file
            DocumentPropertyCollection customProperties = workbook.Worksheets.CustomDocumentProperties;
             
            //Accessng a custom document property by using the property index
            DocumentProperty customProperty1 = customProperties[3];
             
            //Accessng a custom document property by using the property name
            DocumentProperty customProperty2 = customProperties["Owner"];
            
            [VB.NET]
            
            'Instantiate a Workbook object by calling its empty constructor
            Dim workbook As Workbook = New Workbook("C:\\book1.xls")
             
            'Retrieve a list of all custom document properties of the Excel file
            Dim customProperties As DocumentPropertyCollection = workbook.Worksheets.CustomDocumentProperties
             
            'Accessng a custom document property by using the property index
            Dim customProperty1 As DocumentProperty = customProperties(3)
             
            'Accessng a custom document property by using the property name
            Dim customProperty2 As DocumentProperty = customProperties("Owner")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.#ctor">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentPropertyCollection.Count">
      <summary>
            Gets number of items in the collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentPropertyCollection.Item(System.String)">
      <overloads>Returns a <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object.</overloads>
      <summary>
            Returns a <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object by the name of the property.
            </summary>
      <remarks>
        <p>Returns null if a property with the specified name is not found.</p>
      </remarks>
      <param name="name">The case-insensitive name of the property to retrieve.</param>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentPropertyCollection.Item(System.Int32)">
      <summary>
            Returns a <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> object by index.
            </summary>
      <param name="index">Zero-based index of the <see cref="T:Aspose.Cells.Properties.DocumentProperty" /> to retrieve.</param>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.GetEnumerator">
      <summary>
      </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.Contains(System.String)">
      <summary>
            Returns true if a property with the specified name exists in the collection.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
      <returns>True if the property exists in the collection; false otherwise.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.IndexOf(System.String)">
      <summary>
            Gets the index of a property by name.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
      <returns>The zero based index. Negative value if not found.</returns>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.Remove(System.String)">
      <summary>
            Removes a property with the specified name from the collection.
            </summary>
      <param name="name">The case-insensitive name of the property.</param>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.RemoveAt(System.Int32)">
      <summary>
            Removes a property at the specified index.
            </summary>
      <param name="index">The zero based index.</param>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentPropertyCollection.Clear">
      <summary>
            Removes all properties from the collection.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Properties.DocumentProperty">
      <summary>
             Represents a custom or built-in document property.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Instantiate a Workbook object
             Workbook workbook = new Workbook("C:\\book1.xls");
              
             //Retrieve a list of all custom document properties of the Excel file
             DocumentPropertyCollection customProperties = workbook.Worksheets.CustomDocumentProperties;
              
             //Accessng a custom document property by using the property index
             DocumentProperty customProperty1 = customProperties[3];
              
             //Accessng a custom document property by using the property name
             DocumentProperty customProperty2 = customProperties["Owner"];
            
             [VB.NET]
             
             'Instantiate a Workbook object
             Dim workbook As Workbook = New Workbook("C:\\book1.xls")
              
             'Retrieve a list of all custom document properties of the Excel file
             Dim customProperties As DocumentPropertyCollection = workbook.Worksheets.CustomDocumentProperties
              
             'Accessng a custom document property by using the property index
             Dim customProperty1 As DocumentProperty = customProperties(3)
              
             'Accessng a custom document property by using the property name
             Dim customProperty2 As DocumentProperty = customProperties("Owner")
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.Name">
      <summary>
            Returns the name of the property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.Value">
      <summary>
            Gets or sets the value of the property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.IsLinkedToContent">
      <summary>
            Indicates whether this property is linked to content
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.Source">
      <summary>
            The linked content source.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.Type">
      <summary>
            Gets the data type of the property.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Properties.DocumentProperty.IsGeneratedName">
      <summary>
            Returns true if this property does not have a name in the OLE2 storage
            and a unique name was generated only for the public API.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentProperty.ToString">
      <summary>
            Returns the property value as a string.
            </summary>
      <remarks>
        <p>Converts a number property using Object.ToString(). Converts a boolean property
            into "Y" or "N". Converts a date property into a short date string.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentProperty.ToInt">
      <summary>
            Returns the property value as integer.
            </summary>
      <remarks>
            Throws an exception if the property type is not PropertyType.Number.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentProperty.ToDouble">
      <summary>
            Returns the property value as double.
            </summary>
      <remarks>
            Throws an exception if the property type is not PropertyType.Float.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentProperty.ToDateTime">
      <summary>
            Returns the property value as DateTime in local timezone.
            </summary>
      <remarks>
        <p>Throws an exception if the property type is not PropertyType.Date.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Properties.DocumentProperty.ToBool">
      <summary>
            Returns the property value as bool.
            </summary>
      <remarks>
        <p>Throws an exception if the property type is not PropertyType.Boolean.</p>
      </remarks>
    </member>
    <member name="T:Aspose.Cells.Properties.PropertyType">
      <summary>
            Specifies data type of a document property.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.Boolean">
      <summary>
            The property is a boolean value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.DateTime">
      <summary>
            The property is a date time value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.Double">
      <summary>
            The property is a floating number.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.Number">
      <summary>
            The property is an integer number.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.String">
      <summary>
            The property is a string value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Properties.PropertyType.Blob">
      <summary>
            The property is a byte array.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.NamespaceDoc">
      <summary>
            Contains all classes of Rendering image and pdf.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Rendering.PdfSecurity.NamespaceDoc">
      <summary>
            Contains all security options of Rendering pdf.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.NamespaceDoc">
      <summary>
            Contains all classes of Table(List Object).
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.ListObjectImp">
      <summary>
            Represents a list object on a worksheet.
            The ListObject object is a member of the ListObjects collection. 
            The ListObjects collection contains all the list objects on a worksheet. 
            </summary>
      <example>
        <code>
            
            [C#]
            
            
            Workbook workbook = new Workbook();
            Cells cells = workbook.Worksheets[0].Cells;
            for (int i = 0; i  &lt;5; i++)
            {
            cells[0,i].PutValue(CellsHelper.ColumnIndexToName(i));
             }
            for (int row = 1; row  &lt;10; row++)
            {
             for (int column = 0; column  &lt;5; column++)
            {
            cells[row, column].PutValue(row * column);
             }
             }
            ListObjectCollection tables = workbook.Worksheets[0].ListObjects;
            int index = tables.Add(0, 0, 9, 4, true);
            ListObject table = tables[0];
            table.ShowTotals = true;
            table.ListColumns[4].TotalsCalculation = Aspose.Cells.TotalsCalculation.Sum;
            workbook.Save(@"C:\Book1.xlsx");
            
            
            [Visual Basic]
            
            Dim workbook As Workbook = New Workbook()
            Dim cells As Cells = workbook.Worksheets(0).Cells
            For i As Int32 = 0 To 4
             cells(0, i).PutValue(CellsHelper.ColumnIndexToName(i))
            Next
            For row As Int32 = 1 To 9
             For column As Int32 = 0 To 4
              cells(row, column).PutValue(row * column)
            Next
            Next
            Dim tables As ListObjectCollection = workbook.Worksheets(0).ListObjects
            Dim index As Int32 = tables.Add(0, 0, 9, 4, True)
            Dim table As ListObject = tables(0)
            table.ShowTotals = True
            table.ListColumns(4).TotalsCalculation = Aspose.Cells.TotalsCalculation.Sum
            workbook.Save("C:\Book1.xlsx")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.StartRow">
      <summary>
            Gets the start row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.StartColumn">
      <summary>
            Gets the start column of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.EndRow">
      <summary>
            Gets the end  row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.EndColumn">
      <summary>
            Gets the end column of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.ListColumns">
      <summary>
            Gets ListColumns of the ListObject.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectImp.Resize(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Resize the range of the list object.
            </summary>
      <param name="startRow">The start row index of the new range.</param>
      <param name="startColumn">The start column index of the new range.</param>
      <param name="endRow">The end row index of the new range.</param>
      <param name="endColumn">The end column index of the new range.</param>
      <param name="hasHeaders">Whether the ListObject has has headers.</param>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectImp.PutCellValue(System.Int32,System.Int32,System.Object)">
      <summary>
            Put the value to the cell. 
            </summary>
      <param name="rowOffset">The row offset.</param>
      <param name="columnOffset">The column offset.</param>
      <param name="value">The cell value.</param>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.ShowHeaderRow">
      <summary>
            Gets and sets whether this ListObject show header row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.ShowTotals">
      <summary>
            Gets and sets whether this ListObject show total row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.DataRange">
      <summary>
            Gets the data range of the ListObject.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectImp.UpdateColumnName">
      <summary>
            Updates all list columns' name from the worksheet.
            </summary>
      <remarks>
            The value of the cells in the header row of the table must be same as the name of the ListColumn;
            Cell.PutValue do not auto modify the name of the ListColumn for performance. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.QueryTable">
      <summary>
            Gets the linked QueryTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.DataSourceType">
      <summary>
            Gets the data source type of the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.AutoFilter">
      <summary>
            Gets auto filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.DisplayName">
      <summary>
            Gets and sets the display name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.Comment">
      <summary>
            Gets and sets the comment of the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.ShowTableStyleFirstColumn">
      <summary>
            Inidicates whether the first column in the table should have the style applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.ShowTableStyleLastColumn">
      <summary>
            Indicates whether the last column in the table should have the style applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.ShowTableStyleRowStripes">
      <summary>
            Indicates whether row stripe formatting is applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.ShowTableStyleColumnStripes">
      <summary>
            Indicates whether column stripe formatting is applied.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectImp.ApplyStyleToRange">
      <summary>
            Apply the table style to the range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectImp.ConvertToRange">
      <summary>
            Convert the table to range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.TableStyleType">
      <summary>
            Gets and the built-in table style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectImp.TableStyleName">
      <summary>
            Gets and sets the table style name.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.ListColumn">
      <summary>
            Represents a column in a list.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumn.Name">
      <summary>
            Gets and sets the name of the column.
            </summary>
      <remarks>
            If sets the name of the column, the according cell' value will be changed too.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumn.TotalsCalculation">
      <summary>
            Gets and sets the type of calculation in the Totals row of the list column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumn.Range">
      <summary>
            Gets the range of this list column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumn.Formula">
      <summary>
            Gets and sets the formula of the list column.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.ListColumnCollection">
      <summary>
            Represents A collection of all the <see cref="T:Aspose.Cells.Tables.ListColumn" /> objects in the specified ListObject object. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumnCollection.Item(System.Int32)">
      <summary>
            Gets the ListColumn by the index.
            </summary>
      <param name="index">The index.</param>
      <returns>the ListColumn object.</returns>
    </member>
    <member name="P:Aspose.Cells.Tables.ListColumnCollection.Item(System.String)">
      <summary>
            Gets the ListColumn by the name.
            </summary>
      <param name="name">The name of the ListColumn</param>
      <returns>The ListColumn object.</returns>
    </member>
    <member name="T:Aspose.Cells.Tables.ListObject">
      <summary>
            Represents a list object on a worksheet.
            The ListObject object is a member of the ListObjects collection. 
            The ListObjects collection contains all the list objects on a worksheet. 
            </summary>
      <example>
        <code>
            
            [C#]
            
            
            Workbook workbook = new Workbook();
            Cells cells = workbook.Worksheets[0].Cells;
            for (int i = 0; i  &lt;5; i++)
            {
            cells[0,i].PutValue(CellsHelper.ColumnIndexToName(i));
             }
            for (int row = 1; row  &lt;10; row++)
            {
             for (int column = 0; column  &lt;5; column++)
            {
            cells[row, column].PutValue(row * column);
             }
             }
            ListObjectCollection tables = workbook.Worksheets[0].ListObjects;
            int index = tables.Add(0, 0, 9, 4, true);
            ListObject table = tables[0];
            table.ShowTotals = true;
            table.ListColumns[4].TotalsCalculation = Aspose.Cells.TotalsCalculation.Sum;
            workbook.Save(@"C:\Book1.xlsx");
            
            
            [Visual Basic]
            
            Dim workbook As Workbook = New Workbook()
            Dim cells As Cells = workbook.Worksheets(0).Cells
            For i As Int32 = 0 To 4
             cells(0, i).PutValue(CellsHelper.ColumnIndexToName(i))
            Next
            For row As Int32 = 1 To 9
             For column As Int32 = 0 To 4
              cells(row, column).PutValue(row * column)
            Next
            Next
            Dim tables As ListObjectCollection = workbook.Worksheets(0).ListObjects
            Dim index As Int32 = tables.Add(0, 0, 9, 4, True)
            Dim table As ListObject = tables(0)
            table.ShowTotals = True
            table.ListColumns(4).TotalsCalculation = Aspose.Cells.TotalsCalculation.Sum
            workbook.Save("C:\Book1.xlsx")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.StartRow">
      <summary>
            Gets the start row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.StartColumn">
      <summary>
            Gets the start column of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.EndRow">
      <summary>
            Gets the end  row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.EndColumn">
      <summary>
            Gets the end column of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ListColumns">
      <summary>
            Gets ListColumns of the ListObject.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObject.Resize(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Resize the range of the list object.
            </summary>
      <param name="startRow">The start row index of the new range.</param>
      <param name="startColumn">The start column index of the new range.</param>
      <param name="endRow">The end row index of the new range.</param>
      <param name="endColumn">The end column index of the new range.</param>
      <param name="hasHeaders">Whether the ListObject has has headers.</param>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObject.PutCellValue(System.Int32,System.Int32,System.Object)">
      <summary>
            Put the value to the cell. 
            </summary>
      <param name="rowOffset">The row offset.</param>
      <param name="columnOffset">The column offset.</param>
      <param name="value">The cell value.</param>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowHeaderRow">
      <summary>
            Gets and sets whether this ListObject show header row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowTotals">
      <summary>
            Gets and sets whether this ListObject show total row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.DataRange">
      <summary>
            Gets the data range of the ListObject.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObject.UpdateColumnName">
      <summary>
            Updates all list columns' name from the worksheet.
            </summary>
      <remarks>
            The value of the cells in the header row of the table must be same as the name of the ListColumn;
            Cell.PutValue do not auto modify the name of the ListColumn for performance. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.QueryTable">
      <summary>
            Gets the linked QueryTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.DataSourceType">
      <summary>
            Gets the data source type of the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.AutoFilter">
      <summary>
            Gets auto filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.DisplayName">
      <summary>
            Gets and sets the display name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.Comment">
      <summary>
            Gets and sets the comment of the table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowTableStyleFirstColumn">
      <summary>
            Indicates whether the first column in the table should have the style applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowTableStyleLastColumn">
      <summary>
            Indicates whether the last column in the table should have the style applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowTableStyleRowStripes">
      <summary>
            Indicates whether row stripe formatting is applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.ShowTableStyleColumnStripes">
      <summary>
            Indicates whether column stripe formatting is applied.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObject.ApplyStyleToRange">
      <summary>
            Apply the table style to the range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObject.ConvertToRange">
      <summary>
            Convert the table to range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.TableStyleType">
      <summary>
            Gets and the built-in table style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObject.TableStyleName">
      <summary>
            Gets and sets the table style name.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.ListObjectCollection">
      <summary>
            Represents a collection of <see cref="T:Aspose.Cells.Tables.ListObject" /> objects in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectCollection.Item(System.Int32)">
      <summary>
            Gets the ListObject by index.
            </summary>
      <param name="index">The index.</param>
      <returns>The ListObject</returns>
    </member>
    <member name="P:Aspose.Cells.Tables.ListObjectCollection.Item(System.String)">
      <summary>
            Gets the ListObject by specified name.
            </summary>
      <param name="tableName">ListObject name.</param>
      <returns>The ListObject</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Adds a ListObject to the worksheet.
            </summary>
      <param name="startRow">The start row of the list range.</param>
      <param name="startColumn">The start row of the list range.</param>
      <param name="endRow">The start row of the list range.</param>
      <param name="endColumn">The start row of the list range.</param>
      <param name="hasHeaders">Whether the range has headers.</param>
      <returns>The index of the new ListObject</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectCollection.Add(System.String,System.String,System.Boolean)">
      <summary>
            Adds a ListObject to the worksheet.
            </summary>
      <param name="startCell">The start cell of the list range.</param>
      <param name="endCell">The end cell of the list range.</param>
      <param name="hasHeaders">Whether the range has headers.</param>
      <returns>The index of the new ListObject</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.ListObjectCollection.UpdateColumnName">
      <summary>
            Update all column name of the tables.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TableDataSourceType">
      <summary>
            Represents the table's data source type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableDataSourceType.Worksheet">
      <summary>
            Excel Worksheet Table
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableDataSourceType.SharePoint">
      <summary>
            Read-write SharePoint linked List
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableDataSourceType.XML">
      <summary>
            XML mapper Table
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableDataSourceType.QueryTable">
      <summary>
              Query Table
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyleElement">
      <summary>
            Represents the element of the table style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleElement.Size">
      <summary>
            Number of rows or columns in a single band of striping.
            Applies only when type is firstRowStripe, secondRowStripe, firstColumnStripe, or secondColumnStripe.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleElement.Type">
      <summary>
            Gets the element type.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleElement.GetElementStyle">
      <summary>
            Gets the element style.
            </summary>
      <returns>Returns the <see cref="T:Aspose.Cells.Style" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleElement.SetElementStyle(Aspose.Cells.Style)">
      <summary>
            Sets the element style.
            </summary>
      <param name="style">The element style.</param>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyleElementCollection">
      <summary>
            Represents all elements of the table style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleElementCollection.Item(System.Int32)">
      <summary>
            Gets an element of the table style by the index.
            </summary>
      <param name="index">The index.</param>
      <returns>Returns <see cref="T:Aspose.Cells.Tables.TableStyleElement" /> object</returns>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleElementCollection.Item(Aspose.Cells.Tables.TableStyleElementType)">
      <summary>
            Gets the element of the table style by the <see cref="T:Aspose.Cells.Tables.TableStyleElementType" /></summary>
      <param name="type">The element type.</param>
      <returns>Returns <see cref="T:Aspose.Cells.Tables.TableStyleElement" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleElementCollection.Add(Aspose.Cells.Tables.TableStyleElementType)">
      <summary>
            Adds an element.
            </summary>
      <param name="type">The type of the element</param>
      <returns>Returns the index of the element in the list.</returns>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyle">
      <summary>
            Represents the table style.
            </summary>
      <example>
        <code>
            
            [C#]
            
            Workbook workbook = new Workbook();
            Style firstColumnStyle = workbook.CreateStyle();
            firstColumnStyle.Pattern = BackgroundType.Solid;
            firstColumnStyle.BackgroundColor = Aspose.Cells.Drawing.Color.Red;
            
            Style lastColumnStyle = workbook.CreateStyle();
            lastColumnStyle.Font.IsBold = true;
            lastColumnStyle.Pattern = BackgroundType.Solid;
            lastColumnStyle.BackgroundColor = Aspose.Cells.Drawing.Color.Red;
            string tableStyleName = "Custom1";
            TableStyleCollection tableStyles = workbook.Worksheets.TableStyles;
            int index1 = tableStyles.AddTableStyle(tableStyleName);
            TableStyle tableStyle = tableStyles[index1];
            TableStyleElementCollection elements = tableStyle.TableStyleElements;
            index1 = elements.Add(TableStyleElementType.FirstColumn);
            TableStyleElement element = elements[index1];
            element.SetElementStyle(firstColumnStyle);
            index1 = elements.Add(TableStyleElementType.LastColumn);
            element = elements[index1];
            element.SetElementStyle(lastColumnStyle);
            Cells cells = workbook.Worksheets[0].Cells;
            for (int i = 0; i  &lt;5; i++)
            {
                cells[0, i].PutValue(CellsHelper.ColumnIndexToName(i));
            }
            for (int row = 1; row  &lt;10; row++)
            {
                for (int column = 0; column  &lt;5; column++)
                {
                    cells[row, column].PutValue(row * column);
                }
             }
            ListObjectCollection tables = workbook.Worksheets[0].ListObjects;
            int index = tables.Add(0, 0, 9, 4, true);
            ListObject table = tables[0];
            table.ShowTableStyleFirstColumn = true;
            table.ShowTableStyleLastColumn = true;
            table.TableStyleName = tableStyleName;
            workbook.Save(@"C:\Book1.xlsx");
            
            [Visual Basic]
            
              Dim workbook As Workbook = New Workbook()
            Dim firstColumnStyle As Style = workbook.CreateStyle()
            firstColumnStyle.Pattern = BackgroundType.Solid
            firstColumnStyle.BackgroundColor = Aspose.Cells.Drawing.Color.Red
            Dim lastColumnStyle As Style = workbook.CreateStyle()
            
            lastColumnStyle.Font.IsBold = True
            lastColumnStyle.Pattern = BackgroundType.Solid
            lastColumnStyle.BackgroundColor = Aspose.Cells.Drawing.Color.Red
            Dim tableStyleName As String = "Custom1"
            
            Dim tableStyles As TableStyleCollection = workbook.Worksheets.TableStyles
            Dim index1 As Int32 = tableStyles.AddTableStyle(tableStyleName)
            Dim tableStyle As TableStyle = tableStyles(index1)
            Dim elements As TableStyleElementCollection = tableStyle.TableStyleElements
            index1 = elements.Add(TableStyleElementType.FirstColumn)
            Dim element As TableStyleElement = elements(index1)
            element.SetElementStyle(firstColumnStyle)
            index1 = elements.Add(TableStyleElementType.LastColumn)
            element = elements(index1)
            element.SetElementStyle(lastColumnStyle)
            Dim cells As Cells = workbook.Worksheets(0).Cells
            For i As Int32 = 0 To 4
                cells(0, i).PutValue(CellsHelper.ColumnIndexToName(i))
            Next
            For row As Int32 = 1 To 9
                For column As Int32 = 0 To 4
                    cells(row, column).PutValue(row * column)
                Next
            Next
            Dim tables As ListObjectCollection = workbook.Worksheets(0).ListObjects
            Dim index As Int32 = tables.Add(0, 0, 9, 4, True)
            Dim table As ListObject = tables(0)
            table.ShowTableStyleFirstColumn = True
            table.ShowTableStyleLastColumn = True
            table.TableStyleName = tableStyleName
            workbook.Save("C:\Book1.xlsx")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyle.Name">
      <summary>
            Gets the name of table style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyle.TableStyleElements">
      <summary>
            Gets all elements of the table style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyleElementType">
      <summary>
            Represents the Table or PivotTable style element type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.BlankRow">
      <summary>
            Table style element that applies to PivotTable's blank rows.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstColumn">
      <summary>
            Table style element that applies to table's first column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstColumnStripe">
      <summary>
            Table style element that applies to table's first column stripes.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstColumnSubheading">
      <summary>
            Table style element that applies to PivotTable's first column subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstHeaderCell">
      <summary>
            Table style element that applies to table's first header row cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstRowStripe">
      <summary>
            Table style element that applies to table's first row stripes.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstRowSubheading">
      <summary>
            Table style element that applies to PivotTable's first row subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstSubtotalColumn">
      <summary>
            Table style element that applies to PivotTable's first subtotal column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstSubtotalRow">
      <summary>
            Table style element that applies to pivot table's first subtotal row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.GrandTotalColumn">
      <summary>
            Table style element that applies to pivot table's grand total column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.GrandTotalRow">
      <summary>
            Table style element that applies to pivot table's grand total row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.FirstTotalCell">
      <summary>
            Table style element that applies to table's first total row cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.HeaderRow">
      <summary>
            Table style element that applies to table's header row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.LastColumn">
      <summary>
            Table style element that applies to table's last column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.LastHeaderCell">
      <summary>
            Table style element that applies to table's last header row cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.LastTotalCell">
      <summary>
            Table style element that applies to table's last total row cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.PageFieldLabels">
      <summary>
            Table style element that applies to pivot table's page field labels.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.PageFieldValues">
      <summary>
            Table style element that applies to pivot table's page field values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondColumnStripe">
      <summary>
            Table style element that applies to table's second column stripes.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondColumnSubheading">
      <summary>
            Table style element that applies to pivot table's second column subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondRowStripe">
      <summary>
            Table style element that applies to table's second row stripes.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondRowSubheading">
      <summary>
            Table style element that applies to pivot table's second row subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondSubtotalColumn">
      <summary>
            Table style element that applies to PivotTable's second subtotal column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.SecondSubtotalRow">
      <summary>
            Table style element that applies to PivotTable's second subtotal row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.ThirdColumnSubheading">
      <summary>
            Table style element that applies to PivotTable's third column subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.ThirdRowSubheading">
      <summary>
            Table style element that applies to PivotTable's third row subheading.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.ThirdSubtotalColumn">
      <summary>
            Table style element that applies to pivot table's third subtotal column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.ThirdSubtotalRow">
      <summary>
            Table style element that applies to PivotTable's third subtotal row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.TotalRow">
      <summary>
            Table style element that applies to table's total row.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleElementType.WholeTable">
      <summary>
            Table style element that applies to table's entire content.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyleCollection">
      <summary>
            Represents all custom table styles.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleCollection.AddTableStyle(System.String)">
      <summary>
            Adds a custom table style.
            </summary>
      <param name="name">The table style name.</param>
      <returns>The index of the table style.</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleCollection.AddPivotTableStyle(System.String)">
      <summary>
            Adds a custom pivot table style.
            </summary>
      <param name="name">The pivot table style name.</param>
      <returns>The index of the pivot table style.</returns>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleCollection.Item(System.Int32)">
      <summary>
            Gets the table style by the index.
            </summary>
      <param name="index">The position of the table style in the list.</param>
      <returns>The table style object.</returns>
    </member>
    <member name="P:Aspose.Cells.Tables.TableStyleCollection.Item(System.String)">
      <summary>
            Gets the table style by the name.
            </summary>
      <param name="name">The table style name.</param>
      <returns>The table style object.</returns>
    </member>
    <member name="M:Aspose.Cells.Tables.TableStyleCollection.GetBuiltinTableStyle(Aspose.Cells.Tables.TableStyleType)">
      <summary>
            Gets the builtin table style
            </summary>
      <param name="type">The builtin table style type.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Tables.TableStyleType">
      <summary>
            Represents the built-in table style type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight13">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight14">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight15">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight17">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight18">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight19">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight20">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleLight21">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium12">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium13">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium14">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium15">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium16">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium17">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium18">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium19">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium20">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium21">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium22">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium23">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium24">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium25">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium26">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium27">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleMedium28">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark7">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark8">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark9">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.TableStyleDark11">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TableStyleType.Custom">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Tables.TotalsCalculation">
      <summary>
            Determines the type of calculation in the Totals row of the list column.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Sum">
      <summary>
            Represents Sum totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Count">
      <summary>
            Represents Count totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Average">
      <summary>
            Represents Average totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Max">
      <summary>
            Represents Max totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Min">
      <summary>
            Represents Min totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Var">
      <summary>
            Represents Var totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.CountNums">
      <summary>
            Represents Count Nums totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.StdDev">
      <summary>
            Represents StdDev totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.None">
      <summary>
            Represents No totals calcultation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Tables.TotalsCalculation.Custom">
      <summary>
            Represents custom calcultation.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Vba.NamespaceDoc">
      <summary>
            Contains all classes of VBA project.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FileFormatInfo">
      <summary>
            Contains data returned by <see cref="T:Aspose.Cells.FileFormatUtil" /> file format detection methods. 
             </summary>
    </member>
    <member name="P:Aspose.Cells.FileFormatInfo.IsProtectedByRMS">
      <summary>
            Gets whether the file is protected by Microsoft Rights Management Server.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FileFormatInfo.IsEncrypted">
      <summary>
            Returns true if the document is encrypted and requires a password to open. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.FileFormatInfo.FileFormatType">
      <summary>
            Gets the detected file format. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.FileFormatInfo.LoadFormat">
      <summary>
            Gets the detected load format. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.LightCellsDataHandler">
      <summary>
            Represents cells data handler for reading large spreadsheet files in light weight mode. 	
            </summary>
      <remarks>
            When reading a workbook by this mode, <see cref="M:Aspose.Cells.LightCellsDataHandler.StartSheet(Aspose.Cells.Worksheet)" /> will be checked when reading every worksheet in the workbook.
            For one sheet, if <see cref="M:Aspose.Cells.LightCellsDataHandler.StartSheet(Aspose.Cells.Worksheet)" /> gives true, then all data and properties of rows/cells of this sheet will be checked
            and processed by the implementation of this interface. For every row, <see cref="M:Aspose.Cells.LightCellsDataHandler.StartRow(System.Int32)" /> will be called to check whether it need to be processed.
            If a row needs to be processed, properties of this row will be read firstly and user can access its properties by <see cref="M:Aspose.Cells.LightCellsDataHandler.ProcessRow(Aspose.Cells.Row)" />.
            if row's cells need to be processed too, then <see cref="M:Aspose.Cells.LightCellsDataHandler.ProcessRow(Aspose.Cells.Row)" /> should returns true and then <see cref="M:Aspose.Cells.LightCellsDataHandler.StartCell(System.Int32)" /> will be
            called for every existing cell in this row to check whether one cell need to be processed. If one cell needs to be processed,
            then <see cref="M:Aspose.Cells.LightCellsDataHandler.ProcessCell(Aspose.Cells.Cell)" /> will be called to process the cell by the implementation of this interface.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataHandler.StartSheet(Aspose.Cells.Worksheet)">
      <summary>
            Starts to process a worksheet.
            </summary>
      <remarks>
            It will be called before reading cells data of a worksheet.
            </remarks>
      <param name="sheet">the worksheet to read cells data.</param>
      <returns>
            whether this sheet's cells data needs to be processed. false to ignore this sheet.
            </returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataHandler.StartRow(System.Int32)">
      <summary>
            Prepares to process a row.
            </summary>
      <param name="rowIndex">the index of next row to be processed</param>
      <returns>whether this row(properties or cells data) needs to be processed. false to ignore this row and its cells and check the next row.</returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataHandler.ProcessRow(Aspose.Cells.Row)">
      <summary>
            Starts to process one row.
            </summary>
      <remarks>
            It will be called after row's properties such as height, style, ...etc. have been read. However, cells in this row has not been read yet.
            </remarks>
      <param name="row">
            Row object which is being processed currently.
            </param>
      <returns>whether this row's cells need to be processed. false to ignore all cells in this row.</returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataHandler.StartCell(System.Int32)">
      <summary>
            Prepares to process a cell.
            </summary>
      <remarks>
            It will be called when reaching an existing cell in current row. Current row is the row of last call of <see cref="M:Aspose.Cells.LightCellsDataHandler.ProcessRow(Aspose.Cells.Row)" />.
            </remarks>
      <param name="columnIndex">column index of the cell to be processed</param>
      <returns>whether this cell needs to be processed. false to ignore the cell and check the next one until reach the end of cells data of current row</returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataHandler.ProcessCell(Aspose.Cells.Cell)">
      <summary>
            Starts to process one cell.
            </summary>
      <remarks>
            It will be called after one cell's data has been read.
            </remarks>
      <param name="cell">
            Cell object which is being processed currently
            </param>
      <returns>whether this cell needs to be kept in cells model of current sheet.
            Commonly it should be false so that all cells will not be kept in memory after being processed and then memory be saved.
            For some special purpose such as user needs to access some cells later after the whole workbook having been processed,
            user can make this method return true to keep those special cells in Cells model and access them later by APIs such as Cells[row, column].
            However, keeping cells data in Cells model will requires more memory and if all cells are kept then reading template file
            in LightCells mode will become same with reading it in normal way.</returns>
    </member>
    <member name="T:Aspose.Cells.LoadDataFilterOptions">
      <summary>
            Represents the options to filter data when loading workbook from template.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.None">
      <summary>
            Load nothing
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.All">
      <summary>
            Load all
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellBlank">
      <summary>
            Load cells whose value is blank
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellString">
      <summary>
            Load cells whose value is string
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellNumeric">
      <summary>
            Load cells whose value is numeric(including datetime)
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellError">
      <summary>
            Load cells whose value is error
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellBool">
      <summary>
            Load cells whose value is bool
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellValue">
      <summary>
            Load cells value(all value types) only
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Style">
      <summary>
            Load styles for cell formatting
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Formula">
      <summary>
            Load formulas including defined Names
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.CellData">
      <summary>
            Load cells data including values, formulas and formattings
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.DocumentProperties">
      <summary>
            Load document properties
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Chart">
      <summary>
            Load charts
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Shape">
      <summary>
            Load shapes
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.MergedArea">
      <summary>
            Load merged cells
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.ConditionalFormatting">
      <summary>
            Load conditional formattings
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.DataValidation">
      <summary>
            Load data validations
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.PivotTable">
      <summary>
            Load pivot tables
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Table">
      <summary>
            Load tables
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadDataFilterOptions.Settings">
      <summary>
            Load settings for workbook and worksheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingIcon">
      <summary>
            Represents  the custom  icon of conditional formatting rule.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingIcon.GetIconImageData(Aspose.Cells.IconSetType,System.Int32)">
      <summary>
            Get the icon set data
            </summary>
      <param name="type">icon's type</param>
      <param name="index"> icon's index</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingIcon.ImageData">
      <summary>
            Gets the icon set data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingIcon.Type">
      <summary>
            Gets and sets the icon set type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingIcon.Index">
      <summary>
            Gets and sets the icon's index in the icon set.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingIconCollection">
      <summary>
             Represents  a collection of <see cref="T:Aspose.Cells.ConditionalFormattingIcon" /> objects.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Instantiating a Workbook object
             Workbook workbook = new Workbook();
             
             Worksheet sheet = workbook.Worksheets[0];
             
             //Get Conditional Formattings
             ConditionalFormattingCollection cformattings = sheet.ConditionalFormattings;
             
             //Adds an empty conditional formatting
             int index = cformattings.Add();
             
             //Get newly added Conditional formatting
             FormatConditionCollection fcs = cformattings[index];
             
             //Sets the conditional format range.
             CellArea ca = new CellArea();
             
             ca.StartRow = 0;
             
             ca.EndRow = 0;
             
             ca.StartColumn = 0;
             
             ca.EndColumn = 0;
             
             fcs.AddArea(ca);
             
             ca = new CellArea();
             
             ca.StartRow = 1;
             
             ca.EndRow = 1;
             
             ca.StartColumn = 1;
             
             ca.EndColumn = 1;
             
             fcs.AddArea(ca);
             
             //Sets condition
              int idx = fcs.AddCondition(FormatConditionType.IconSet);
              
              FormatCondition cond = fcs[idx];
                
              //Sets condition's type
              cond.IconSet.Type = IconSetType.ArrowsGray3;
             
             //Add custom iconset condition.
              ConditionalFormattingIcon cfIcon = cond.IconSet.CfIcons[0];
              
              cfIcon.Type = IconSetType.Arrows3;
              
              cfIcon.Index = 0;
              
              ConditionalFormattingIcon cfIcon1 = cond.IconSet.CfIcons[1];
              
               cfIcon1.Type = IconSetType.ArrowsGray3;
               
               cfIcon1.Index = 1;
               
               ConditionalFormattingIcon cfIcon2 = cond.IconSet.CfIcons[2];
               
               cfIcon2.Type = IconSetType.Boxes5;
               
               cfIcon2.Index = 2;
             
             //Saving the Excel file
             workbook.Save("C:\\output.xls");
             
             [VB.NET]
             
             'Instantiating a Workbook object
             Dim workbook As New Workbook()
             
             Dim sheet As Worksheet = workbook.Worksheets(0)
             
             'Get Conditional Formattings
             Dim cformattings As ConditionalFormattingCollection = sheet.ConditionalFormattings
             
             'Adds an empty conditional formatting
             Dim index As Integer = cformattings.Add()
             
             'Get newly added Conditional formatting
             Dim fcs As FormatConditionCollection = cformattings(index)
             
             'Sets the conditional format range.
             Dim ca As New CellArea()
             
             ca.StartRow = 0
             
             ca.EndRow = 0
             
             ca.StartColumn = 0
             
             ca.EndColumn = 0
             
             fcs.AddArea(ca)
             
             ca = New CellArea()
             
             ca.StartRow = 1
             
             ca.EndRow = 1
             
             ca.StartColumn = 1
             
             ca.EndColumn = 1
             
             fcs.AddArea(ca)
             
             //Sets condition
             Dim idx As Integer =fcs.AddCondition(FormatConditionType.IconSet)
             
             Dim cond As FormatCondition=fcs[idx]
             
             //Sets condition's type
             cfIcon.Type = IconSetType.ArrowsGray3
             
             'Add custom iconset  condition.
             Dim cfIcon As ConditionalFormattingIcon = cond.IconSet.CfIcons[0]
             
             cfIcon.Type = IconSetType.Arrows3
            
             cfIcon.Index=0
             
             Dim cfIcon1 As ConditionalFormattingIcon = cond.IconSet.CfIcons[1]
             
             cfIcon1.Type = IconSetType.ArrowsGray3
             
             cfIcon1.Index=1
             
             Dim cfIcon2 As ConditionalFormattingIcon = cond.IconSet.CfIcons[2]
             
             cfIcon2.Type = IconSetType.Boxes5
             
             cfIcon2.Index=2
             
             'Saving the Excel file
             workbook.Save("C:\output.xls")
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingIconCollection.Item(System.Int32)">
      <summary>
            Gets the ConditionalFormattingIcon element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingIconCollection.Add(Aspose.Cells.IconSetType,System.Int32)">
      <summary>
            Adds <see cref="T:Aspose.Cells.ConditionalFormattingIcon" /> object.
            </summary>
      <param name="type">The value type.</param>
      <param name="index">The Index.</param>
      <returns>Returns the index of new object in the list.</returns>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingIconCollection.Add(Aspose.Cells.ConditionalFormattingIcon)">
      <summary>
            Adds <see cref="T:Aspose.Cells.ConditionalFormattingIcon" /> object.
            </summary>
      <param name="cficon">Returns the index of new object in the list.</param>
    </member>
    <member name="T:Aspose.Cells.DataBarAxisPosition">
      <summary>
            Specifies the axis position for a range of cells with conditional formatting as data bars.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.DataBarAxisAutomatic">
      <summary>
            Display the axis at a variable position based on the ratio of the minimum negative value to the maximum positive value in the range. 
            Positive values are displayed in a left-to-right direction. 
            Negative values are displayed in a right-to-left direction. 
            When all values are positive or all values are negative, no axis is displayed.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarAxisPosition.Automatic enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.DataBarAxisMidpoint">
      <summary>
            Display the axis at the midpoint of the cell regardless of the set of values in the range. 
            Positive values are displayed in a left-to-right direction. 
            Negative values are displayed in a right-to-left direction.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarAxisPosition.Midpoint enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.DataBarAxisNone">
      <summary>
            No axis is displayed, and both positive and negative values are displayed in the left-to-right direction.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarAxisPosition.None enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.Automatic">
      <summary>
            Display the axis at a variable position based on the ratio of the minimum negative value to the maximum positive value in the range. 
            Positive values are displayed in a left-to-right direction. 
            Negative values are displayed in a right-to-left direction. 
            When all values are positive or all values are negative, no axis is displayed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.Midpoint">
      <summary>
            Display the axis at the midpoint of the cell regardless of the set of values in the range. 
            Positive values are displayed in a left-to-right direction. 
            Negative values are displayed in a right-to-left direction.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarAxisPosition.None">
      <summary>
            No axis is displayed, and both positive and negative values are displayed in the left-to-right direction.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataBarBorder">
      <summary>
            Represents the border of the data bars specified by a conditional formatting rule.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBarBorder.Color">
      <summary>
            Gets or sets the border's color of data bars specified by a conditional formatting rule.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBarBorder.Type">
      <summary>
            Gets or sets the border's type of data bars specified by a conditional formatting rule.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataBarBorderType">
      <summary>
            Specifies the border type of a data bar.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarBorderType.DataBarBorderNone">
      <summary>
            The data bar has no border.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarBorderType.None enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarBorderType.DataBarBorderSolid">
      <summary>
            The data bar has a solid border.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarBorderType.Solid enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarBorderType.None">
      <summary>
            The data bar has no border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarBorderType.Solid">
      <summary>
            The data bar has a solid border.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataBarFillType">
      <summary>
            Specifies how a data bar is filled with color.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarFillType.DataBarFillSolid">
      <summary>
            The data bar is filled with solid color.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarFillType.Solid enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarFillType.DataBarFillGradient">
      <summary>
            The data bar is filled with a color gradient.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarFillType.Gradient enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarFillType.Solid">
      <summary>
            The data bar is filled with solid color.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarFillType.Gradient">
      <summary>
            The data bar is filled with a color gradient.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataBarNegativeColorType">
      <summary>
            Specifies whether to use the same border and fill color as postive data bars.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarNegativeColorType.DataBarColor">
      <summary>
            Use the color specified in the Negative Value and Axis Setting dialog box 
            or by using the ColorType and BorderColorType properties of the NegativeBarFormat object.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarNegativeColorType.Color enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarNegativeColorType.DataBarSameAsPositive">
      <summary>
            Use the same color as positive data bars.
            </summary>
      <remarks>
            NOTE: This enum type is now obsolete. Instead, 
            please use DataBarNegativeColorType.SameAsPositive enum type.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.DataBarNegativeColorType.Color">
      <summary>
            Use the color specified in the Negative Value and Axis Setting dialog box 
            or by using the ColorType and BorderColorType properties of the NegativeBarFormat object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DataBarNegativeColorType.SameAsPositive">
      <summary>
            Use the same color as positive data bars.
            </summary>
    </member>
    <member name="T:Aspose.Cells.NegativeBarFormat">
      <summary>
            Represents the color settings of the data bars for negative values that are defined by a data bar conditional formating rule.
            </summary>
    </member>
    <member name="P:Aspose.Cells.NegativeBarFormat.BorderColor">
      <summary>
            Gets or sets a FormatColor object that you can use to specify the border color for negative data bars.
            </summary>
    </member>
    <member name="P:Aspose.Cells.NegativeBarFormat.BorderColorType">
      <summary>
            Gets whether to use the same border color as positive data bars.
            </summary>
    </member>
    <member name="P:Aspose.Cells.NegativeBarFormat.Color">
      <summary>
            Gets or sets a FormatColor object that you can use to specify the fill color for negative data bars.
            </summary>
    </member>
    <member name="P:Aspose.Cells.NegativeBarFormat.ColorType">
      <summary>
            Gets or sets whether to use the same fill color as positive data bars.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DeleteOptions">
      <summary>
            Represents the setting of deleting rows/columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DeleteOptions.UpdateReference">
      <summary>
            Indicates if update references in other worksheets.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingResult">
      <summary>
            Represents the result of conditional formatting which applies to a cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingResult.ConditionalStyle">
      <summary>
            Gets the conditional result style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingResult.ConditionalFormattingIcon">
      <summary>
             Gets the image of icon set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingResult.ConditionalFormattingDataBar">
      <summary>
            Gets the DataBar object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingResult.ConditionalFormattingColorScale">
      <summary>
            Gets the ColorScale object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingResult.ColorScaleResult">
      <summary>
            Gets the display color of color scale.
            </summary>
    </member>
    <member name="T:Aspose.Cells.IWarningCallback">
      <summary>
            Callback interface of warning.
            </summary>
    </member>
    <member name="M:Aspose.Cells.IWarningCallback.Warning(Aspose.Cells.WarningInfo)">
      <summary>
            Our callback only needs to implement the "Warning" method.
            </summary>
      <param name="warningInfo"> warning info</param>
    </member>
    <member name="T:Aspose.Cells.HtmlLinkTargetType">
      <summary>
            Represents the type of target attribute in HTML <a /> tag.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlLinkTargetType.Blank">
      <summary>
            Opens the linked document in a new window or tab
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlLinkTargetType.Parent">
      <summary>
            Opens the linked document in the parent frame
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlLinkTargetType.Self">
      <summary>
            Opens the linked document in the same frame as it was clicked (this is default)
            </summary>
    </member>
    <member name="F:Aspose.Cells.HtmlLinkTargetType.Top">
      <summary>
            Opens the linked document in the full body of the window
            </summary>
    </member>
    <member name="T:Aspose.Cells.TxtValueQuoteType">
      <summary>
            Specifies the type of using quotation marks for values in text format files.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtValueQuoteType.Normal">
      <summary>
            All values that contain special characters such as quotation mark, separator character will be quoted.
            Same with the behavior of ms excel for exporting text file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtValueQuoteType.Always">
      <summary>
            All values will be quoted always.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtValueQuoteType.Minimum">
      <summary>
            Only quote values when needed. Such as, if one value contains quotation mark but the quotation mark is not at the begin of this value, this value will not be quoted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TxtValueQuoteType.Never">
      <summary>
            All values will not be quoted. The exported text file with this type may not be read back correctly because the needed quotation marks being absent.
            </summary>
    </member>
    <member name="T:Aspose.Cells.QueryTable">
      <summary>
            Represents QueryTable information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.QueryTable.ConnectionId">
      <summary>
            Gets the connection id of the query table.
            </summary>
    </member>
    <member name="P:Aspose.Cells.QueryTable.Name">
      <summary>
            Gets the name of querytable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.QueryTable.PreserveFormatting">
      <summary>
            Returns or sets the PreserveFormatting of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.QueryTable.AdjustColumnWidth">
      <summary>
            Returns or sets the AdjustColumnWidth of the object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.QueryTableCollection">
      <summary>
            A collection of <see cref="T:Aspose.Cells.QueryTableCollection" /> objects that represent QueryTable collection information. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.QueryTableCollection.Item(System.Int32)">
      <summary>
            Gets the querytable by the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>The querytable</returns>
    </member>
    <member name="T:Aspose.Cells.Scenario">
      <summary>
            Represents an individual scenario.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.Comment">
      <summary>
            Gets and sets the comment of scenario.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.Name">
      <summary>
            Gets and sets the name of scenario.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.User">
      <summary>
            Gets name of user who last changed the scenario.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.IsHidden">
      <summary>
            Indicates whether scenario is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.IsLocked">
      <summary>
            Indicates whether scenario is locked for editing when the sheet is protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Scenario.InputCells">
      <summary>
            Gets the input cells of scenario.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ScenarioCollection">
      <summary>
            Represents the list of scenarios.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioCollection.ActiveIndex">
      <summary>
            Gets and sets which scenario is selected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioCollection.LastSelected">
      <summary>
            Indicates which scenario was last selected by the user to be run/shown.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioCollection.Item(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Scenario" /> object by the index.
            </summary>
      <param name="index">The specific index in the list.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.ScenarioCollection.Add(System.String)">
      <summary>
            Adds a scenario.
            </summary>
      <param name="name">The name of scenario.</param>
      <returns>The index in the list of scanarios.</returns>
    </member>
    <member name="T:Aspose.Cells.ScenarioInputCell">
      <summary>
            Represents input cell for the scenario.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCell.Row">
      <summary>
            Gets and sets the row index of the input cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCell.Column">
      <summary>
            Gets and sets the column index of the input cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCell.Name">
      <summary>
            Gets and sets the input cell address.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCell.Value">
      <summary>
            Gets and sets value of the input cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCell.IsDeleted">
      <summary>
            Indiciates whether input cell is deleted.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ScenarioInputCellCollection">
      <summary>
            Represents the list of the scenario's input cells. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ScenarioInputCellCollection.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.ScenarioInputCell" /> by index in the list.
            </summary>
      <param name="index">The specific index in the list</param>
      <returns>The <see cref="T:Aspose.Cells.ScenarioInputCell" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.ScenarioInputCellCollection.Add(System.Int32,System.Int32,System.String)">
      <summary>
            Adds an input cell.
            </summary>
      <param name="row">The row index of input cell.</param>
      <param name="column">The column index of input cell.</param>
      <param name="value">The value of input cell.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.ISmartMarkerCallBack">
      <summary>
            Represents callback interface of processing smartmarker.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ISmartMarkerCallBack.Process(System.Int32,System.Int32,System.Int32,System.String,System.String)">
      <summary>
            Callback for processing a smart marker.
            </summary>
      <param name="sheetIndex">The sheet index.</param>
      <param name="rowIndex">The row index.</param>
      <param name="colIndex">The column index.</param>
      <param name="tableName">The table name of smartmarker.</param>
      <param name="columnName">The table name of smartmarker.</param>
    </member>
    <member name="T:Aspose.Cells.NumberCategoryType">
      <summary>
            Represents category type of cell's number formatting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.General">
      <summary>
            General
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Text">
      <summary>
            Text
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Number">
      <summary>
            Number
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Date">
      <summary>
            Date or Date and Time
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Time">
      <summary>
            Time
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Fraction">
      <summary>
            Fraction
            </summary>
    </member>
    <member name="F:Aspose.Cells.NumberCategoryType.Scientific">
      <summary>
            Scientific
            </summary>
    </member>
    <member name="T:Aspose.Cells.TextCapsType">
      <summary>
            This type specifies the cap types of the text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextCapsType.None">
      <summary>
            None caps
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextCapsType.All">
      <summary>
            Apply all caps on the text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextCapsType.Small">
      <summary>
            Apply small caps to the text.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TextStrikeType">
      <summary>
            This type specifies the strike type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextStrikeType.Single">
      <summary>
            A single strikethrough applied on the text
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextStrikeType.Double">
      <summary>
            A double strikethrough applied on the text
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextStrikeType.None">
      <summary>
            No strike is applied to the text
            </summary>
    </member>
    <member name="T:Aspose.Cells.UpdateLinksType">
      <summary>
            Represents how to update links to other workbooks when the workbook is opened.
            </summary>
    </member>
    <member name="F:Aspose.Cells.UpdateLinksType.UserSet">
      <summary>
            Prompt user to update.
            </summary>
    </member>
    <member name="F:Aspose.Cells.UpdateLinksType.Never">
      <summary>
            Do not update, and do not prompt user.
            </summary>
    </member>
    <member name="F:Aspose.Cells.UpdateLinksType.Always">
      <summary>
            Always updat.
            </summary>
    </member>
    <member name="T:Aspose.Cells.WarningInfo">
      <summary>
            Warning info
            </summary>
    </member>
    <member name="P:Aspose.Cells.WarningInfo.WarningType">
      <summary>
            Get warning type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WarningInfo.Description">
      <summary>
            Get description of warning info.
            </summary>
    </member>
    <member name="T:Aspose.Cells.WarningType">
      <summary>
            WaringType
            </summary>
    </member>
    <member name="F:Aspose.Cells.WarningType.FontSubstitution">
      <summary>
            Font substitution warning type
            when a font has not been found, this warning type can be get.
            </summary>
    </member>
    <member name="F:Aspose.Cells.WarningType.DuplicateDefinedName">
      <summary>
            Duplicate defined name is found in the file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Workbook">
      <summary>
             Represents a root object to create an Excel spreadsheet. 	
             </summary>
      <remarks>The Workbook class denotes an Excel spreadsheet. Each spreadsheet can contain multiple worksheets.
             The basic feature of the class is to open and save native excel files.
             The class has some advanced features like copying data from other Workbooks, combining two Workbooks and protecting the Excel spreadsheet.
             </remarks>
      <example>
             The following example creates a Workbook, opens a file named designer.xls in it and makes the horizontal and vertical scroll bars invisible for the Workbook. It then replaces two string values with an Integer value and string value respectively within the spreadsheet and finally sends the updated file to the client browser. 
             <code>
             [C#]
            
             
             
             //Open a designer file
             string designerFile = MapPath("Designer") + "\\designer.xls";
             Workbook workbook = new Workbook(designerFile);
             
             //Set scroll bars
             workbook.IsHScrollBarVisible = false;
             workbook.IsVScrollBarVisible = false;
             
             //Replace the placeholder string with new values
             int newInt = 100;
             workbook.Replace("OldInt", newInt);
             
             string newString = "Hello!";
             workbook.Replace("OldString", newString);
             XlsSaveOptions saveOptions = new XlsSaveOptions();
             workbook.Save(Response, "result.xls", ContentDisposition.Inline, saveOptions);
             
             [Visual Basic]
             
             
             
             'Open a designer file
             Dim designerFile as String = MapPath("Designer") + "\designer.xls"
             Dim workbook as Workbook = new Workbook(designerFile)
             
             'Set scroll bars
             workbook.IsHScrollBarVisible = False
             workbook.IsVScrollBarVisible = False
             
             'Replace the placeholder string with new values
             Dim newInt as Integer = 100
             workbook.Replace("OldInt", newInt)
             
             Dim newString as String = "Hello!"
             workbook.Replace("OldString", newString)
             Dim saveOptions as XlsSaveOptions  = new XlsSaveOptions()
             workbook.Save(Response, "result.xls", ContentDisposition.Inline, saveOptions)    
             </code></example>
    </member>
    <member name="P:Aspose.Cells.Workbook.Settings">
      <summary>
            Represents the workbook settings.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class.
            </summary>
      <example>
            The following code shows how to use the Workbook constructor to create and initialize a new instance of the class.
            <code>
            [C#]
            
            Workbook workbook = new Workbook();
            		
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook()
            		
            </code></example>
      <remarks>
            The default file format type is Excel97To2003.If want create other format file type, please call Workbook(FileFormatType fileFormatType).
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor(Aspose.Cells.FileFormatType)">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class.
            </summary>
      <param name="fileFormatType">
            The new file format.
            </param>
      <example>
            The following code shows how to use the Workbook constructor to create and initialize a new instance of the class.
            <code>
            [C#]
            
            Workbook workbook = new Workbook(FileFormatType.Excel2007Xlsx);
            		
            
            [Visual Basic]
            
            Dim workbook as Workbook = new Workbook(FileFormatType.Excel2007Xlsx)
            		
            </code></example>
      <remarks>
            The default file format type is Excel97To2003.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor(System.String)">
      <summary>
             Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class and open a file.
            </summary>
      <param name="file">The file name.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor(System.IO.Stream)">
      <summary>
             Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class and open a stream.
            </summary>
      <param name="stream">The stream.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor(System.String,Aspose.Cells.LoadOptions)">
      <summary>
             Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class and open a file.
            </summary>
      <param name="file">The file name.</param>
      <param name="loadOptions">The load options</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.#ctor(System.IO.Stream,Aspose.Cells.LoadOptions)">
      <summary>
             Initializes a new instance of the <see cref="T:Aspose.Cells.Workbook" /> class and open stream.
            </summary>
      <param name="stream">The stream.</param>
      <param name="loadOptions">The load options</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Initialize">
      <summary>
            Initialize the workbook object.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Workbook constructor. 
            This property will be removed 12 months later since August 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.SaveToStream">
      <summary>
            Saves Excel file to a MemoryStream object and returns it.
            </summary>
      <returns>MemoryStream object which contains an Excel file.</returns>
      <remarks>
            
            This method provides same function as Save method and only save the workbook as Excel97-2003 xls file. 
            It's mainly for calling from COM clients.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String)">
      <summary>
            Creates and saves the specified file to the disk.
            </summary>
      <param name="fileName">The name of created file.</param>
      <remarks>
        <p>File format is according to file extension.</p>
            After calling Save method, data in Workbook instance will be reset.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String,Aspose.Cells.SaveFormat)">
      <summary>
            Saves the workbook to the disk.
            </summary>
      <param name="fileName">The file name.</param>
      <param name="saveFormat">The save format type.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.String,Aspose.Cells.SaveOptions)">
      <summary>
            Saves the workbook to the disk.
            </summary>
      <param name="fileName">The file name.</param>
      <param name="saveOptions">The save options.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.IO.Stream,Aspose.Cells.SaveFormat)">
      <summary>
            Saves the workbook to the stream.
            </summary>
      <param name="stream">The file stream.</param>
      <param name="saveFormat">The save file format type.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Save(System.IO.Stream,Aspose.Cells.SaveOptions)">
      <summary>
            Saves the workbook to the stream.
            </summary>
      <param name="stream">The file stream.</param>
      <param name="saveOptions">The save options.</param>
    </member>
    <member name="P:Aspose.Cells.Workbook.Worksheets">
      <summary>
            Gets the <see cref="T:Aspose.Cells.WorksheetCollection" /> collection in the spreadsheet.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> collection</returns>
    </member>
    <member name="P:Aspose.Cells.Workbook.IsLicensed">
      <summary>
            Indicates whether license is set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.Styles">
      <summary>
            Gets the <see cref="T:Aspose.Cells.StyleCollection" /> collection.
            </summary>
      <remarks>
            NOTE: This class is now obsolete. Instead, 
            please use Workbook.CreateStyle() to create and manipulate style for workbook instead of StyleCollection.Add()
            and use Workbook.GetNamedStyle(string) to get named style instead of StyleCollection[string].
            This property will be removed 12 months later since February 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.RemoveUnusedStyles">
      <summary>
            Remove all unused styles.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.CreateStyle">
      <summary>
            Creates a new style.
            </summary>
      <returns>Returns a style object.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.CreateBuiltinStyle(Aspose.Cells.BuiltinStyleType)">
      <summary>
            Creates built-in style by given type.
            </summary>
      <param name="type">
      </param>
      <returns>style object</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.CreateCellsColor">
      <summary>
            Creates a <see cref="T:Aspose.Cells.CellsColor" /> object.
            </summary>
      <returns>Returns a <see cref="T:Aspose.Cells.CellsColor" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.String)">
      <summary>
             Replaces a cell's value with a new string.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             workbook.Replace("AnOldValue", "NewValue");
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
              ........
            workbook.Replace("AnOldValue", "NewValue")
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">String value to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Int32)">
      <summary>
             Replaces a cell's value with a new integer.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             int newValue = 100;
             workbook.Replace("AnOldValue", newValue);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
            .........
            Dim NewValue As Integer =  100 
            workbook.Replace("AnOldValue", NewValue)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">Integer value to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Double)">
      <summary>
             Replaces a cell's value with a new double.
            </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             double newValue = 100.0;
             workbook.Replace("AnOldValue", newValue);
             
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
            .........
            Dim NewValue As Double =  100.0
            workbook.Replace("AnOldValue", NewValue)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">Double value to replace</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.String[],System.Boolean)">
      <summary>
             Replaces a cell's value with a new string array.
            </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             string[] newValues = new string[]{"Tom", "Alice", "Jerry"};
             workbook.Replace("AnOldValue", newValues, true);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
             .............
            Dim NewValues() As String =  New String() {"Tom", "Alice", "Jerry"}		
            workbook.Replace("AnOldValue", NewValues, True)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValues">String array to replace</param>
      <param name="isVertical">True - Vertical, False - Horizontal</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Int32[],System.Boolean)">
      <summary>
             Replaces cells' values with an integer array.
            </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             int[] newValues = new int[]{1, 2, 3};
             workbook.Replace("AnOldValue", newValues, true);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
            ...........
            Dim NewValues() As Integer =  New Integer() {1, 2, 3}
            workbook.Replace("AnOldValue", NewValues, True)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValues">Integer array to replace</param>
      <param name="isVertical">True - Vertical, False - Horizontal</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.Double[],System.Boolean)">
      <summary>
             Replaces cells' values with a double array.
            </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook workbook = new Workbook();
             ......
             double[] newValues = new double[]{1.23, 2.56, 3.14159};
             workbook.Replace("AnOldValue", newValues, true);
             
             [Visual Basic]
             
             Dim workbook As Workbook =  New Workbook() 
             ...........
             Dim NewValues() As Double =  New Double() {1.23, 2.56, 3.14159}
             workbook.Replace("AnOldValue", NewValues, True)
             </code>
      </example>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValues">Double array to replace</param>
      <param name="isVertical">True - Vertical, False - Horizontal</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.Boolean,System.Object)">
      <summary>
            Replaces cells' values with new data.
            </summary>
      <param name="boolValue">The boolean value to be replaced.</param>
      <param name="newValue">New value. Can be string, integer, double or DateTime value.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.Int32,System.Object)">
      <summary>
            Replaces cells' values with new data.
            </summary>
      <param name="intValue">The integer value to be replaced.</param>
      <param name="newValue">New value. Can be string, integer, double or DateTime value.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Replace(System.String,System.String,Aspose.Cells.ReplaceOptions)">
      <summary>
             Replaces a cell's value with a new string.
            </summary>
      <param name="placeHolder">Cell placeholder</param>
      <param name="newValue">String value to replace</param>
      <param name="options"> The replace options</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Copy(Aspose.Cells.Workbook)">
      <summary>
            Copies data from a source Workbook object.
            </summary>
      <param name="source">Source Workbook object.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Combine(Aspose.Cells.Workbook)">
      <summary>
            Combines another Workbook object.
            </summary>
      <param name="secondWorkbook">Another Workbook object.</param>
      <remarks>Currently, only cell data and cell style of the second Workbook object can be combined. Images, charts and other drawing objects are not supported.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Workbook.Colors">
      <summary>
            Returns colors in the palette for the spreadsheet. 
            </summary>
      <remarks>The palette has 56 entries, each represented by an RGB value.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetStyleInPool(System.Int32)">
      <summary>
            Gets the style in the style pool.
            All styles in the workbook will be gathered into a pool.
            There is only a simple reference index in the cells.
            </summary>
      <param name="index">The index.</param>
      <returns>
            The style in the pool corresponds to given index, may be null.
            </returns>
      <remarks>
            If the returned style is changed, the style of all cells(which refers to this style) will be changed.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Workbook.CountOfStylesInPool">
      <summary>
            Gets number of the styles in the style pool.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetFonts">
      <summary>
            Gets number of the styles in the style pool.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetNamedStyle(System.String)">
      <summary>
            Gets the named style in the style pool.
            </summary>
      <param name="name">name of the style</param>
      <returns>named style, maybe null.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.ChangePalette(Aspose.Cells.Drawing.Color,System.Int32)">
      <summary>
             Changes the palette for the spreadsheet in the specified index.
             </summary>
      <param name="color">Color structure.</param>
      <param name="index">Palette index, 0 - 55.</param>
      <remarks>The palette has 56 entries, each represented by an RGB value. 
             If you set a color which is not in the palette, it will not take effect.
             So if you want to set a custom color, please change the palette at first.
             <p>The following is the standard color palette.</p><table class="dtTABLE" cellspacing="0"><tr><td width="25%"><font color="gray"><b>Color</b></font>¡¡</td><td width="25%"><font color="gray"><b>Red</b></font>¡¡</td><td width="25%"><font color="gray"><b>Green</b></font>¡¡</td><td width="25%"><font color="gray"><b>Blue</b></font>¡¡</td></tr><tr><td width="25%">Black¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">White¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Red¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Lime¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Blue¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Yellow¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Magenta¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Cyan¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Maroon¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Green¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Navy¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Olive¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Purple¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Teal¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Silver¡¡</td><td width="25%">192¡¡</td><td width="25%">192¡¡</td><td width="25%">192¡¡</td></tr><tr><td width="25%">Gray¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Color17¡¡</td><td width="25%">153¡¡</td><td width="25%">153¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color18¡¡</td><td width="25%">153¡¡</td><td width="25%">51¡¡</td><td width="25%">102¡¡</td></tr><tr><td width="25%">Color19¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td><td width="25%">204¡¡</td></tr><tr><td width="25%">Color20¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color21¡¡</td><td width="25%">102¡¡</td><td width="25%">0¡¡</td><td width="25%">102¡¡</td></tr><tr><td width="25%">Color22¡¡</td><td width="25%">255¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Color23¡¡</td><td width="25%">0¡¡</td><td width="25%">102¡¡</td><td width="25%">204¡¡</td></tr><tr><td width="25%">Color24¡¡</td><td width="25%">204¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color25¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Color26¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color27¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color28¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color29¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Color30¡¡</td><td width="25%">128¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color31¡¡</td><td width="25%">0¡¡</td><td width="25%">128¡¡</td><td width="25%">128¡¡</td></tr><tr><td width="25%">Color32¡¡</td><td width="25%">0¡¡</td><td width="25%">0¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color33¡¡</td><td width="25%">0¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color34¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color35¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td><td width="25%">204¡¡</td></tr><tr><td width="25%">Color36¡¡</td><td width="25%">255¡¡</td><td width="25%">255¡¡</td><td width="25%">153¡¡</td></tr><tr><td width="25%">Color37¡¡</td><td width="25%">153¡¡</td><td width="25%">204¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color38¡¡</td><td width="25%">255¡¡</td><td width="25%">153¡¡</td><td width="25%">204¡¡</td></tr><tr><td width="25%">Color39¡¡</td><td width="25%">204¡¡</td><td width="25%">153¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color40¡¡</td><td width="25%">255¡¡</td><td width="25%">204¡¡</td><td width="25%">153¡¡</td></tr><tr><td width="25%">Color41¡¡</td><td width="25%">51¡¡</td><td width="25%">102¡¡</td><td width="25%">255¡¡</td></tr><tr><td width="25%">Color42¡¡</td><td width="25%">51¡¡</td><td width="25%">204¡¡</td><td width="25%">204¡¡</td></tr><tr><td width="25%">Color43¡¡</td><td width="25%">153¡¡</td><td width="25%">204¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color44¡¡</td><td width="25%">255¡¡</td><td width="25%">204¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color45¡¡</td><td width="25%">255¡¡</td><td width="25%">153¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color46¡¡</td><td width="25%">255¡¡</td><td width="25%">102¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color47¡¡</td><td width="25%">102¡¡</td><td width="25%">102¡¡</td><td width="25%">153¡¡</td></tr><tr><td width="25%">Color48¡¡</td><td width="25%">150¡¡</td><td width="25%">150¡¡</td><td width="25%">150¡¡</td></tr><tr><td width="25%">Color49¡¡</td><td width="25%">0¡¡</td><td width="25%">51¡¡</td><td width="25%">102¡¡</td></tr><tr><td width="25%">Color50¡¡</td><td width="25%">51¡¡</td><td width="25%">153¡¡</td><td width="25%">102¡¡</td></tr><tr><td width="25%">Color51¡¡</td><td width="25%">0¡¡</td><td width="25%">51¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color52¡¡</td><td width="25%">51¡¡</td><td width="25%">51¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color53¡¡</td><td width="25%">153¡¡</td><td width="25%">51¡¡</td><td width="25%">0¡¡</td></tr><tr><td width="25%">Color54¡¡</td><td width="25%">153¡¡</td><td width="25%">51¡¡</td><td width="25%">102¡¡</td></tr><tr><td width="25%">Color55¡¡</td><td width="25%">51¡¡</td><td width="25%">51¡¡</td><td width="25%">153¡¡</td></tr><tr><td width="25%">Color56¡¡</td><td width="25%">51¡¡</td><td width="25%">51¡¡</td><td width="25%">51¡¡</td></tr></table></remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.IsColorInPalette(Aspose.Cells.Drawing.Color)">
      <summary>
            Checks if a color is in the palette for the spreadsheet.
            </summary>
      <param name="color">Color structure.</param>
      <returns>Returns true if this color is in the palette. Otherwise, returns false</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula">
      <summary>
             Calculates the result of formulas.
             </summary>
      <remarks>
        <p>Now Workbook built-in functions are not supported in this method:</p>
        <p>[A]</p>
        <p>ASC</p>
        <p>[B]</p>
        <p>BAHTTEXT</p>
        <p>[C]</p>
        <p>CALL, CLEAN, CODE, CONVERT, CUBEKPIMEMBER, CUBEMEMBER, CUBEMEMBERPROPERTY, CUBERANKEDMEMBER, CUBESET, CUBESETCOUNT, CUBEVALUE</p>
        <p>[E]</p>
        <p>EUROCONVERT</p>
        <p>[G]</p>
        <p>GETPIVOTDATA</p>
        <p>[I]</p>
        <p>INFO</p>
        <p>[J]</p>
        <p>JIS</p>
        <p>[P]</p>
        <p>PHONETIC</p>
        <p>[R]</p>
        <p>REGISTER.ID, RTD</p>
        <p>[S]</p>
        <p>SQL.REQUEST</p>
        <p>[Y]</p>
        <p>YIELD, YIELDDISC</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula(System.Boolean)">
      <summary>
            Calculates the result of formulas.
            </summary>
      <param name="ignoreError">Indicates if hide the error in calculating formulas. The error may be unsupported function, external links, etc.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula(System.Boolean,Aspose.Cells.ICustomFunction)">
      <summary>
            Calculates the result of formulas.
            </summary>
      <param name="ignoreError">Indicates if hide the error in calculating formulas. The error may be unsupported function, external links, etc.</param>
      <param name="customFunction">The custom formula calculation functions to extend the calculation engine.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.CalculateFormula(Aspose.Cells.CalculationOptions)">
      <summary>
            Calcualting formulas in this workbook.
            </summary>
      <param name="options">Options for calculation</param>
    </member>
    <member name="P:Aspose.Cells.Workbook.DefaultStyle">
      <summary>
             Gets or sets the default <see cref="T:Aspose.Cells.Style" /> object of the workbook.
             </summary>
      <remarks>
             The DefaultStyle property is useful to implement a Style for the whole Workbook. 
             </remarks>
      <example>
             The following code creates and instantiates a new Workbook and sets a default <see cref="T:Aspose.Cells.Style" /> to it.
             <code>
             [C#]
             Workbook workbook = new Workbook();
             Style defaultStyle = workbook.DefaultStyle;
             defaultStyle.Font.Name = "Tahoma";
             workbook.DefaultStyle = defaultStyle;
            
             [Visual Basic]
             Dim workbook as Workbook = new Workbook()
             Dim defaultStyle as Style = workbook.DefaultStyle
             defaultStyle.Font.Name = "Tahoma"
             workbook.DefaultStyle = defaultStyle
             </code></example>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetMatchingColor(Aspose.Cells.Drawing.Color)">
      <summary>
            Find best matching Color in current palette.
            </summary>
      <param name="rawColor">Raw color.</param>
      <returns>Best matching color.</returns>
    </member>
    <member name="P:Aspose.Cells.Workbook.IsDigitallySigned">
      <summary>
            Indicates if this spreadsheet is digitally signed.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.SetEncryptionOptions(Aspose.Cells.EncryptionType,System.Int32)">
      <summary>
            Set Encryption Options.
            </summary>
      <param name="encryptionType">The encryption type.</param>
      <param name="keyLength">The key length.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.CheckWriteProtectedPassword(System.String)">
      <summary>
            Check whether the password is correct write protected password.
            </summary>
      <param name="password">The password.</param>
      <returns>
      </returns>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use WorkbookSettings.WriteProtection.ValidatePassword method.
            This property will be removed 12 months later since October 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.Protect(Aspose.Cells.ProtectionType,System.String)">
      <summary>
            Protects a workbook.
            </summary>
      <param name="protectionType">Protection type.</param>
      <param name="password">Password to protect the workbook.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Unprotect(System.String)">
      <summary>
            Unprotects a workbook.
            </summary>
      <param name="password">Password to unprotect the workbook.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.RemoveDigitalSignature">
      <summary>
            Removes digital signature from this spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.AcceptAllRevisions">
      <summary>
            Accepts all tracked changes in the workbook. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.HasMacro">
      <summary>
            Indicates if this spreadsheet contains macro/VBA.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.HasRevisions">
      <summary>
            Gets if the workbook has any tracked changes
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.FileName">
      <summary>
            Gets and sets current file name of this workbook.
            </summary>
      <remarks>
            If this workbook is used as external data source for another workbook which contains some external formula references,
            please set correct value for this property.
            The set value(combined with CellsHelper.StartupPath,CellsHelper.AltStartPath,CellsHelper.LibraryPath if those properties exist)
            should be same with the external reference defined in the formula.
            </remarks>
      <seealso cref="M:Aspose.Cells.Workbook.UpdateLinkedDataSource(Aspose.Cells.Workbook[])" />
    </member>
    <member name="P:Aspose.Cells.Workbook.DataSorter">
      <summary>
            Gets a DataSorter object to sort data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.RemoveExternalLinks">
      <summary>
            Removes all external links in the workbook.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.GetThemeColor(Aspose.Cells.ThemeColorType)">
      <summary>
            Gets theme color.
            </summary>
      <param name="type">The theme color type.</param>
      <returns>The theme color.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.SetThemeColor(Aspose.Cells.ThemeColorType,Aspose.Cells.Drawing.Color)">
      <summary>
            Sets the theme color
            </summary>
      <param name="type">The theme color type.</param>
      <param name="color">the theme color</param>
    </member>
    <member name="P:Aspose.Cells.Workbook.Theme">
      <summary>
            Gets the theme name. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Workbook.CustomTheme(System.String,Aspose.Cells.Drawing.Color[])">
      <summary>
            Customs the theme.
            </summary>
      <param name="themeName">The theme name</param>
      <param name="colors">The theme colors</param>
      <remarks>
            The length of colors should be 12.
            <table class="dtTABLE" cellspacing="0"><tr><td width="50%"><font color="gray"><b>Array index</b></font>¡¡</td><td width="50%"><font color="gray"><b>Theme type</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>0</b></font>¡¡</td><td width="50%"><font color="gray"><b>Backgournd1</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>1</b></font>¡¡</td><td width="50%"><font color="gray"><b>Text1</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>2</b></font>¡¡</td><td width="50%"><font color="gray"><b>Backgournd2</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>3</b></font>¡¡</td><td width="50%"><font color="gray"><b>Text2</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>4</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent1</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>5</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent2</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>6</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent3</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>7</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent4</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>8</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent5</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>9</b></font>¡¡</td><td width="50%"><font color="gray"><b>Accent6</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>10</b></font>¡¡</td><td width="50%"><font color="gray"><b>Hyperlink</b></font>¡¡</td></tr><tr><td width="50%"><font color="gray"><b>11</b></font>¡¡</td><td width="50%"><font color="gray"><b>Followed Hyperlink</b></font>¡¡</td></tr></table></remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.CopyTheme(Aspose.Cells.Workbook)">
      <summary>
            Copies the theme from another workbook.
            </summary>
      <param name="source">Source workbook.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.HasExernalLinks">
      <summary>
            Indicates whether this workbook contains external links to other data sources.
            </summary>
      <returns>Whether this workbook contains external links to other data sources.</returns>
    </member>
    <member name="M:Aspose.Cells.Workbook.UpdateLinkedDataSource(Aspose.Cells.Workbook[])">
      <summary>
            If this workbook contains external links to other data source,
            Aspose.Cells will attempt to retrieve the latest data.
            </summary>
      <param name="exteralWorkbooks">
            External workbooks are referenced by this workbook.
            If it's null, we will directly open the external linked files..
            If it's not null, 
            we will check whether the external link in the array first;
            if not, we will open the external linked files again.
            </param>
      <remarks>
            If the method is not called before calculating formulas,
            Aspose.Cells will use the previous information(cached in the file);
            Please set CellsHelper.StartupPath,CellsHelper.AltStartPath,CellsHelper.LibraryPath. 
            And please set Workbook.FileName if this workbook is from a stream,
            otherwise Aspose.Cells could not get the external link full path sometimes
            and external data cannot be fetched and used when calculating formulas.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Workbook.BuiltInDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the built-in document properties of the spreadsheet. 
            </summary>
      <remarks>A new property cannot be added to built-in document properties list. You can only get a built-in property and change its value.
            The following is the built-in properties name list:
            <p>Title</p><p>Subject</p><p>Author</p><p>Keywords</p><p>Comments</p><p>Template</p><p>Last Author</p><p>Revision Number</p><p>Application Name</p><p>Last Print Date</p><p>Creation Date</p><p>Last Save Time</p><p>Total Editing Time</p><p>Number of Pages</p><p>Number of Words</p><p>Number of Characters</p><p>Security</p><p>Category</p><p>Format</p><p>Manager</p><p>Company</p><p>Number of Bytes</p><p>Number of Lines</p><p>Number of Paragraphs</p><p>Number of Slides</p><p>Number of Notes</p><p>Number of Hidden Slides</p><p>Number of Multimedia Clips</p></remarks>
      <example>
        <code>
            [C#]
            DocumentProperty doc = workbook.BuiltInDocumentProperties["Author"];
            doc.Value = "John Smith";
            
            [Visual Basic]
            Dim doc as DocumentProperty = workbook.BuiltInDocumentProperties("Author")
            doc.Value = "John Smith"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Workbook.CustomDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the custom document properties of the spreadsheet. 
            </summary>
      <example>
        <code>
            [C#]
            excel.CustomDocumentProperties.Add("Checked by", "Jane");
            
            [Visual Basic]
            excel.CustomDocumentProperties.Add("Checked by", "Jane")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Workbook.FileFormat">
      <summary>
            Gets and sets the file format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.InterruptMonitor">
      <summary>
            Gets and sets the interrupt monitor.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.ContentTypeProperties">
      <summary>
            Gets the contenttypeproperties objects in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.CustomXmlParts">
      <summary>
            Represents a InnerCustom XML Data Storage Part (custom XML data within a package). 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.RibbonXml">
      <summary>
            Gets and sets the XML file that defines the Ribbon UI.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Workbook.AbsolutePath">
      <summary>
            Gets and sets the Absolute path of the file.
            </summary>
      <remarks>
            Only used for external links.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Workbook.ImportXml(System.String,System.String,System.Int32,System.Int32)">
      <summary>
            Imports an xml file into the workbook.
            </summary>
      <param name="url">the path of the xml file.</param>
      <param name="sheetName">the destination sheet name .</param>
      <param name="row">the destination row of the xml.</param>
      <param name="col">the destination column of the xml.</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.ExportXml(System.String,System.String)">
      <summary>
            Export XML data.
            </summary>
      <param name="mapName">name of the XML map that need to be exported</param>
      <param name="path">the export path</param>
    </member>
    <member name="M:Aspose.Cells.Workbook.Dispose">
      <summary>
            Performs application-defined tasks associated with freeing, releasing, or
            resetting unmanaged resources.
            </summary>
    </member>
    <member name="T:Aspose.Cells.WriteProtection">
      <summary>
            Specifies write protection settings for a workbook. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WriteProtection.RecommendReadOnly">
      <summary>
            Indicates if the Read Only Recommended option is selected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WriteProtection.IsWriteProtected">
      <summary>
            Indicates whether this workbook is write protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WriteProtection.Password">
      <summary>
            Sets the protected password to modify the file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WriteProtection.ValidatePassword(System.String)">
      <summary>
            Returns true if the specified password is the same as the write-protection password the file was protected with. 
            </summary>
      <param name="password">The specified password.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.ParameterType">
      <summary>
            Represents all parameters' type or return value type of function.
             </summary>
    </member>
    <member name="F:Aspose.Cells.ParameterType.Reference">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ParameterType.Value">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ParameterType.Array">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.ICustomParser">
      <summary>
            Allows users to add their custom value parser for parsing string values to other proper cell value object. 	
            </summary>
    </member>
    <member name="M:Aspose.Cells.ICustomParser.ParseObject(System.String)">
      <summary>
            Parses given string to proper value object.
            </summary>
      <param name="value">The string value to be parsed</param>
      <returns>
            Parsed value object from given string. If given string cannot be parsed to proper value object, returns null.
            </returns>
    </member>
    <member name="M:Aspose.Cells.ICustomParser.GetFormat">
      <summary>
            Gets the formatting pattern for last invocation of <see cref="M:Aspose.Cells.ICustomParser.ParseObject(System.String)" />.
            </summary>
      <remarks>
            The formatting pattern should be same with Style.InnerCustom of InvariantCulture to be used for formatting corresponding cell in ms excel.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.ImportTableOptions">
      <summary>
            Represents the options of importing data into cells.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ImportTableOptions.#ctor">
      <summary>
            Creates the default imporing options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.ConvertGridStyle">
      <summary>
            Indicates whether apply the style of the grid view to cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.ConvertNumericData">
      <summary>
            Gets or sets a value that indicates whether the string value should be converted to numeric or date value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.InsertRows">
      <summary>
            Gets or sets a value that indicates whether new rows should be added for importing data records.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.IsFieldNameShown">
      <summary>
            Gets or sets a value that indicates whether field name should be imported to the first row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.DateFormat">
      <summary>
            Gets or sets date format string for cells with imported datetime values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.NumberFormats">
      <summary>
            Gets or sets the number formats
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.TotalRows">
      <summary>
            Gets or sets total row count to import from data source. -1 means all rows of given data source.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.TotalColumns">
      <summary>
            Gets or sets total column count to import from data source. -1 means all rows of given data source.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.ColumnIndexes">
      <summary>
            Gets or sets the columns(0-based) to import from data source. null means all columns should be imported.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.DefaultValues">
      <summary>
            Default value for the value in the table is null.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ImportTableOptions.IsHtmlString">
      <summary>
            Indicates whether the value contains html tags.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ICellsDataTable">
      <summary>
            Represents data table.
            </summary>
      <remarks>
      </remarks>
    </member>
    <member name="P:Aspose.Cells.ICellsDataTable.Columns">
      <summary>
            Gets the columns' name.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ICellsDataTable.Count">
      <summary>
            Gets the count of the records. -1 for unknown records count.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ICellsDataTable.BeforeFirst">
      <summary>
            Move the cursor to the front of this object, just before the first row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ICellsDataTable.Item(System.Int32)">
      <summary>
             Gets the data stored in the column specified by index.
            </summary>
      <param name="columnIndex">The zero-based index of the column.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.ICellsDataTable.Item(System.String)">
      <summary>
            Gets the data stored in the column specified by column name.
            </summary>
      <param name="columnName">The column name.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.ICellsDataTable.Next">
      <summary>
            Moves the cursor down one row from its current position.
            </summary>
      <returns> if the new current row is valid; false if there are no more rows </returns>
    </member>
    <member name="T:Aspose.Cells.ErrorCheckOptionCollection">
      <summary>
            Represents all erorr check option.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ErrorCheckOptionCollection.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.ErrorCheckOption" /> object by the given index.
            </summary>
      <param name="index">The index</param>
      <returns>Return <see cref="T:Aspose.Cells.ErrorCheckOption" /> object </returns>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOptionCollection.Add">
      <summary>
            Add an error check option.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.ErrorCheckOption">
      <summary>
            Error check setting applied on certain ranges.
            </summary>
      <example>
        <code>
            
            [C#]
            
              Workbook workbook = new Workbook();
              ErrorCheckOptionCollection opts = workbook.Worksheets[0].ErrorCheckOptions;
              int optionIdx = opts.Add();
              ErrorCheckOption opt = opts[optionIdx];
              opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.InconsistFormula, false);
              opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.InconsistRange, false);
              opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.TextDate, false);
              opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.TextNumber, false);
              opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.Validation, false);
              opt.AddRange(CellArea.CreateCellArea("A1", "B10"));
              workbook.Save(@"D:\Filetemp\Book1.xlsx");
              
            [Visual Basic]
            
               Dim workbook As Workbook = New Workbook()
               Dim opts As ErrorCheckOptionCollection = workbook.Worksheets(0).ErrorCheckOptions
               Dim optionIdx As Integer = opts.Add()
               Dim opt As ErrorCheckOption = opts(optionIdx)
               opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.InconsistFormula, False)
               opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.InconsistRange, False)
               opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.TextDate, False)
               opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.TextNumber, False)
               opt.SetErrorCheck(Aspose.Cells.ErrorCheckType.Validation, False)
               opt.AddRange(CellArea.CreateCellArea("A1", "B10"))
               workbook.Save("D:\Filetemp\Book1.xlsx")
               
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.IsErrorCheck(Aspose.Cells.ErrorCheckType)">
      <summary>
            Checks whether given error type will be checked.
            </summary>
      <param name="errorCheckType">error type can be checked</param>
      <returns>return true if given error type will be checked.</returns>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.SetErrorCheck(Aspose.Cells.ErrorCheckType,System.Boolean)">
      <summary>
            Sets whether given error type will be checked.
            </summary>
      <param name="errorCheckType">error type can be checked.</param>
      <param name="isCheck">true if given error type needs to be checked.</param>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.GetCountOfRange">
      <summary>
            Gets the count of ranges that influenced by this setting.
            </summary>
      <returns>the count of ranges that influenced by this setting.</returns>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.AddRange(Aspose.Cells.CellArea)">
      <summary>
            Adds one influenced range by this setting.
            </summary>
      <param name="ca">the range to be added.</param>
      <returns>the index of the added range in the range list of this setting.</returns>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.GetRange(System.Int32)">
      <summary>
             Gets the influenced range of this setting by given index.
            </summary>
      <param name="index">the index of range</param>
      <returns>return influenced range at given index.</returns>
    </member>
    <member name="M:Aspose.Cells.ErrorCheckOption.RemoveRange(System.Int32)">
      <summary>
            Removes one range by given index.
            </summary>
      <param name="index">the index of the range to be removed.</param>
    </member>
    <member name="T:Aspose.Cells.ErrorCheckType">
      <summary>
            Represents all error check type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.Calc">
      <summary>
             check for calculation errors
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.EmptyCellRef">
      <summary>
             check for references to empty cells
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.TextNumber">
      <summary>
             check the format of numeric values
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.InconsistRange">
      <summary>
             check formulas with references to less than the entirety
             of a range containing continuous data
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.InconsistFormula">
      <summary>
             check formulas that are inconsistent with formulas in neighboring cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.TextDate">
      <summary>
             check the format of date/time values
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.UnproctedFormula">
      <summary>
             check for unprotected formulas
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.Validation">
      <summary>
             whether to perform data validation
            </summary>
    </member>
    <member name="F:Aspose.Cells.ErrorCheckType.CalculatedColumn">
      <summary>
            Ignore errors when cells contain a value different from a calculated column formula.
            </summary>
    </member>
    <member name="T:Aspose.Cells.InterruptMonitor">
      <summary>
            Represents all operator about the interrupt.
            </summary>
    </member>
    <member name="M:Aspose.Cells.InterruptMonitor.Interrupt">
      <summary>
            Interrupt the current operator.
            </summary>
    </member>
    <member name="T:Aspose.Cells.License">
      <summary>
            Provides methods to license the component.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></ms><java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code></java></example>
    </member>
    <member name="M:Aspose.Cells.License.#ctor">
      <summary>
            Initializes a new instance of this class.
            </summary>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As license = New license
            License.SetLicense("MyLicense.lic")
            </code></ms><java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code></java></example>
    </member>
    <member name="M:Aspose.Cells.License.SetLicense(System.String)">
      <summary>
            Licenses the component.
            </summary>
      <remarks>
        <p>Tries to find the license in the following locations:</p>
        <p>1. Explicit path.</p>
        <ms>
          <p>2. The folder that contains the Aspose component assembly.</p>
          <p>3. The folder that contains the client's calling assembly.</p>
          <p>4. The folder that contains the entry (startup) assembly.</p>
          <p>5. An embedded resource in the client's calling assembly.</p>
          <p>
            <b>Note:</b>On the .NET Compact Framework, tries to find the license only in these locations:</p>
          <p>1. Explicit path.</p>
          <p>2. An embedded resource in the client's calling assembly.</p>
        </ms>
        <java>
          <p>2. The current working directory of the java application.</p>
          <p>3. The folder that contains the Aspose component JAR file.</p>
          <p>4. The folder that contains the client's calling JAR file.</p>
        </java>
      </remarks>
      <example>
            In this example, an attempt will be made to find a license file named MyLicense.lic
            in the folder that contains 
            
            <ms>
            the component, in the folder that contains the calling assembly,
            in the folder of the entry assembly and then in the embedded resources of the calling assembly.
            <code>
            [C#]
            
            License license = new License();
            license.SetLicense("MyLicense.lic");
            
            
            [Visual Basic]
            
            Dim license As License = New License
            license.SetLicense("MyLicense.lic")
            </code></ms><java>
            the component jar file:
            <code>
            License license = new License();
            license.setLicense("MyLicense.lic");
            </code></java><param name="licenseName">Can be a full or short file name<ms> or name of an embedded resource</ms>.
            Use an empty string to switch to evaluation mode.</param></example>
    </member>
    <member name="M:Aspose.Cells.License.SetLicense(System.IO.Stream)">
      <summary>
            Licenses the component.
            </summary>
      <param name="stream">A stream that contains the license.</param>
      <remarks>
        <p>Use this method to load a license from a stream.</p>
      </remarks>
      <example>
        <code>
          <ms>
            [C#]
            
            License license = new License();
            license.SetLicense(myStream);
            
            
            [Visual Basic]
            
            Dim license as License = new License
            license.SetLicense(myStream)
            </ms>
          <java>
            License license = new License();
            license.setLicense(myStream);
            </java>
        </code>
      </example>
      <javaName>void setLicense(java.io.InputStream stream)</javaName>
    </member>
    <member name="T:Aspose.Cells.LightCellsDataProvider">
      <summary>
            Represents Data provider for saving large spreadsheet files in light weight mode. 	
            </summary>
      <remarks>
            When saving a workbook by this mode, <see cref="M:Aspose.Cells.LightCellsDataProvider.StartSheet(System.Int32)" /> will be checked when saving every worksheet in the workbook.
            For one sheet, if <see cref="M:Aspose.Cells.LightCellsDataProvider.StartSheet(System.Int32)" /> gives true, then all data and properties of rows/cells of this sheet to be saved
            will be provided by the implementation of this interface. In the first place, <see cref="M:Aspose.Cells.LightCellsDataProvider.NextRow" /> will be called to get the next row index to be saved.
            If a valid row index is returned(the row index must be in ascending order for the rows to be saved),
            then a Row object representing this row will be provided for implementation to set its properties by <see cref="M:Aspose.Cells.LightCellsDataProvider.StartRow(Aspose.Cells.Row)" />.
            For one row, <see cref="M:Aspose.Cells.LightCellsDataProvider.NextCell" /> will be checked firstly. If a valid column index be returned(the column index must be in ascending order for all cells of one row to be saved),
            then a Cell object representing this cell will be provided for implementation to set its data and properties by <see cref="M:Aspose.Cells.LightCellsDataProvider.StartCell(Aspose.Cells.Cell)" />.
            After data of this cell is set, this cell will be saved directy to the generated spreadsheet file and the next cell will be checked and processed.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.StartSheet(System.Int32)">
      <summary>
            Starts to save a worksheet.
            </summary>
      <remarks>
            It will be called at the beginning of saving a worksheet during saving a workbook.
            If the provider needs to refer to <i><code>sheetIndex</code></i> later
            in startRow(Row) or startCell(Cell) method,
            that is, if the process needs to know which worksheet is being processed, 
            the implementation should retain the <i><code>sheetIndex</code></i> value here.
            </remarks>
      <param name="sheetIndex">index of current sheet to be saved.</param>
      <returns>
            true if this provider will provide data for the given sheet; false if given sheet should use its normal data model(Cells).
            </returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.NextRow">
      <summary>
            Gets the next row to be saved.
            </summary>
      <remarks>
            It will be called at the beginning of saving a row and its cells data(before <see cref="M:Aspose.Cells.LightCellsDataProvider.StartRow(Aspose.Cells.Row)" />).
            </remarks>
      <returns>
            the next row index to be saved. -1 means the end of current sheet data has been reached and no further row of current sheet to be saved.
            </returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.StartRow(Aspose.Cells.Row)">
      <summary>
            Starts to save data of one row.
            </summary>
      <remarks>
            It will be called at the beginning of saving a row and its cells data.
            If current row has some custom properties such as height, style, ...etc.,
            implementation should set those properties to given Row object here.
            </remarks>
      <param name="row">
            Row object for implementation to fill data. Its row index is the returned value of latest call of <see cref="M:Aspose.Cells.LightCellsDataProvider.NextRow" />.
            If the row has been initialized in the inner cells model, the existing row object will be used.
            Otherwise a temporary Row object will be used for implementation to fill data.
            </param>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.NextCell">
      <summary>
            Gets next cell to be saved.
            </summary>
      <remarks>
            It will be called at the beginning of saving one cell.
            </remarks>
      <returns>
            column index of the next cell to be saved. -1 means the end of current row data has been reached and no further cell of current row to be saved.
            </returns>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.StartCell(Aspose.Cells.Cell)">
      <summary>
            Starts to save data of one cell.
            </summary>
      <remarks>
      </remarks>
      <param name="cell">
            Cell object for implementation to fill data. Its column index is the returned value of latest call of <see cref="M:Aspose.Cells.LightCellsDataProvider.NextCell" />.
            If the cell has been initialized in the inner cells model, the existed cell object will be used.
            Otherwise a temporary Cell object will be used for implementation to fill data.
            </param>
    </member>
    <member name="M:Aspose.Cells.LightCellsDataProvider.IsGatherString">
      <summary>
            Checks whether the current string value of cell needs to be gathered into a global pool.
            </summary>
      <remarks>
            Gathering string values will take advantage only when there are many duplicated string values for the cells provided by this implementation.
            In this situation gathering string will save much memory and generate smaller resultant file.
            If there are many string values for the cells provided by LightCellsDataProvider but few of them are same,
            gathering string will cost more memory and time and has no advantage for the resultant file.
            </remarks>
      <returns>
            true if string value need to be gathered into a global pool for the resultant file.
            </returns>
    </member>
    <member name="T:Aspose.Cells.LoadFormat">
      <summary>
            Represents the load file format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Auto">
      <summary>
            Represents recognizing the format automatically. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.CSV">
      <summary>
            Represents a CSV file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Xlsx">
      <summary>
            Represents Office Open XML spreadsheetML workbook or template, with or without macros. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.TabDelimited">
      <summary>
            Represents a tab delimited text file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Html">
      <summary>
            Represents a html file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.MHtml">
      <summary>
            Represents a mhtml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.ODS">
      <summary>
            Represents a ods file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Excel97To2003">
      <summary>
            Represents an Excel97-2003 xls file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.SpreadsheetML">
      <summary>
            Represents an Excel 2003 xml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Xlsb">
      <summary>
            Represents an xlsb file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadFormat.Unknown">
      <summary>
            Represents unrecognized format, cannot be loaded. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.LoadOptions">
      <summary>
            Represents the options of loading the file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LoadOptions.m_LoadFormat">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadFormat">
      <summary>
            Gets and set the load format.
            </summary>
    </member>
    <member name="M:Aspose.Cells.LoadOptions.#ctor">
      <summary>
            Creates an options of loading the file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.LoadOptions.#ctor(Aspose.Cells.LoadFormat)">
      <summary>
            Creates an options of loading the file.
            </summary>
      <param name="loadFormat">The loading format.</param>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.Password">
      <summary>
            Gets and set the password of the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.ParsingFormulaOnOpen">
      <summary>
            Indicates whether parsing the formula when reading the file.
            </summary>
      <remarks>
            Only applies for Excel Xlsx, Xltx, Xltm and Xlsm file
            because the formulas in the files are stored with a string formula.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadDataAndFormatting">
      <summary>
            If true, only loads data , formulas and formatting from the file, other contents and settings are all discarded. 
            For example : shapes ,validation,conditional formatting,pivotables are not loaded.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use LoadFilter property(LoadFilter = new LoadFilter(LoadDataFilterOptions.CellData).
            This property will be removed 12 months later since November 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.LoadOptions.SetPaperSize(Aspose.Cells.PaperSizeType)">
      <summary>
            Sets the default print paper size from default printer's setting.
            </summary>
      <param name="type">The default paper size.</param>
      <remarks>
            If there is no setting about paper size,MS Excel will use default printer's setting.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadDataOnly">
      <summary>
            If true, only loads data and formulas from the file, other contents and settings are all discarded. 
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use LoadFilter property(LoadFilter = new LoadFilter(LoadDataFilterOptions.CellData).
            This property will be removed 12 months later since June 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.OnlyLoadDocumentProperties">
      <summary>
            If true, only loads document properties
            </summary>
      <remarks>
            Only for excel 97- 2003 xls file.
            If the file is encrypted, we still can get the document properties without password
            NOTE: This member is now obsolete. Instead, 
            please use LoadFilter property(LoadFilter = new LoadFilter(LoadDataFilterOptions.DocumentProperties).
            This property will be removed 12 months later since November 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadDataOptions">
      <summary>
            Only effects when OnlyLoadData is true.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use LoadFilter property(User may extend LoadFilter to filter the worksheet and data).
            This property will be removed 12 months later since November 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LanguageCode">
      <summary>
            Gets or sets the user interface language of the Workbook version based on CountryCode that has saved the file. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.Region">
      <summary>
            Gets or sets the system regional settings based on CountryCode at the time the file was loaded. 
            </summary>
      <remarks>If you do not want to use the region  saved in the file, 
            please reset it after reading the file.</remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.CultureInfo">
      <summary>
            Gets or sets the system culture info at the time the file was loaded.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.ConvertNumericData">
      <summary>
            Gets or sets a value that indicates whether the string in text file is converted to numeric data.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, please use HTMLLoadOptions.ConvertNumericData or HTMLLoadOptions.ConvertDateTimeData property.
            This property will be removed 12 months later since April 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.StandardFont">
      <summary>
            Sets the default standard font name
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.StandardFontSize">
      <summary>
            Sets the default standard font size.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.InterruptMonitor">
      <summary>
            Gets and sets the interrupt monitor.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.IgnoreNotPrinted">
      <summary>
            Ignore the data which are not printed if directly printing the file
            </summary>
      <remarks>
            Only for xlsx file.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.CheckExcelRestriction">
      <summary>
            Whether check restriction of excel file when user modify cells related objects.
            For example, excel does not allow inputting string value longer than 32K.
            When you input a value longer than 32K such as by Cell.PutValue(string), if this property is true, you will get an Exception.
            If this property is false, we will accept your input string value as the cell's value so that later
            you can output the complete string value for other file formats such as CSV.
            However, if you have set such kind of value that is invalid for excel file format,
            you should not save the workbook as excel file format later. Otherwise there may be unexpected error for the generated excel file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadFilter">
      <summary>
            The filter to denote how to load data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LoadDataFilterOptions">
      <summary>
            The filter options to denote what data should be loaded.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, please use LoadFilter property(LoadFilter = new LoadFilter(LoadDataFilterOptions).
            This property will be removed 12 months later since November 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.LightCellsDataHandler">
      <summary>
            The data handler for processing cells data when reading template file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.MemorySetting">
      <summary>
            Gets or sets the memory usage options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.LoadOptions.WarningCallback">
      <summary>
            Gets or sets warning callback.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TxtLoadOptions">
      <summary>
            Represents the options for loading text file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.ConvertNumericData">
      <summary>
            Gets or sets a value that indicates whether the string in text file is converted to numeric data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.TxtLoadOptions.#ctor">
      <summary>
            Creates the options for loading text file.
            </summary>
      <remarks>The default load file type is CSV .</remarks>
    </member>
    <member name="M:Aspose.Cells.TxtLoadOptions.#ctor(Aspose.Cells.LoadFormat)">
      <summary>
            Creates the options for loading text file.
            </summary>
      <param name="loadFormat">The loading format</param>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.Separator">
      <summary>
            Gets and sets char Delimiter of text file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.SeparatorString">
      <summary>
            Gets and sets the a string value as separator.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.Encoding">
      <summary>
            Gets and sets the default encoding.Only applies for csv file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.IsMultiEncoded">
      <summary>
            True means that the file contains several encoding.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.PreferredParsers">
      <summary>
            Gets and sets preferred value parsers for loading text file.
            </summary>
      <remarks>
            parsers[0] is the parser will be used for the first column in text template file,
            parsers[1] is the parser will be used for the second column, ...etc.
            The last one(parsers[parsers.length-1]) will be used for all other columns start from parsers.length-1.
            If one item is null, the corresponding column will be parsed by the default parser of Aspose.Cells.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.ConvertDateTimeData">
      <summary>
            Gets or sets a value that indicates whether the string in text file is converted to date data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.LoadStyleStrategy">
      <summary>
            Indicates the strategy to apply style for parsed values when converting string value to number or datetime.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.HasFormula">
      <summary>
            Indicates whether the text is formula if it starts with "=". 
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtLoadOptions.KeepExactFormat">
      <summary>
            Indicates whether the exact formatting should be kept for the cell when converting string value to number or datetime.
            When ms excel loading datetime or numeric values from csv file, the formatting of those values may be changed, such as
            leading/tailing zeros of number, year/month/day order of datetime, ...etc.
            To simulate ms excel's behavior, please set this property to false.
            Default value of this property is true, so the cell value will be formatted as the same string value in csv template file.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please set LoadStyleStrategy property to TxtLoadStyleStrategy.BuiltIn to get same result with this property's false value
            and TxtLoadStyleStrategy.ExactFormat to get same result with this property's true value.
            This property will be removed 12 months later since February 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="T:Aspose.Cells.DifSaveOptions">
      <summary>
            Represents the options of saving dif file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DifSaveOptions.#ctor">
      <summary>
            Creates the options for saving DIF file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingValueCollection">
      <summary>
            Describes a collection of CFValueObject.
            Use only for icon sets.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingValueCollection.Item(System.Int32)">
      <summary>
            Get the CFValueObject element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingValueCollection.Add(Aspose.Cells.FormatConditionValueType,System.String)">
      <summary>
            Adds <see cref="T:Aspose.Cells.ConditionalFormattingValue" /> object.
            </summary>
      <param name="type">The value type.</param>
      <param name="value">The value.</param>
      <returns>Returns the index of new object in the list.</returns>
    </member>
    <member name="T:Aspose.Cells.FormatConditionValueType">
      <summary>
            Condition value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Formula">
      <summary>
            The minimum/ midpoint / maximum value for the
            gradient is determined by a formula.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Max">
      <summary>
            Indicates that the maximum value in the range shall be
            used as the maximum value for the gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Min">
      <summary>
            Indicates that the minimum value in the range shall be
            used as the minimum value for the gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Number">
      <summary>
            Indicates that the minimum / midpoint / maximum
            value for the gradient is specified by a constant
            numeric value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Percent">
      <summary>
            Value indicates a percentage between the minimum
            and maximum values in the range shall be used as the
            minimum / midpoint / maximum value for the gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.Percentile">
      <summary>
            Value indicates a percentile ranking in the range shall
            be used as the minimum / midpoint / maximum value
            for the gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.AutomaticMax">
      <summary>
            Indicates that the Automatic maximum value in the range shall be
            used as the Automatic maximum value for the gradient.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionValueType.AutomaticMin">
      <summary>
            Indicates that the Automatic minimum value in the range shall be
            used as the Automatic minimum value for the gradient.
            </summary>
    </member>
    <member name="T:Aspose.Cells.IconSetType">
      <summary>
            Icon set type for conditional formatting. 
            The threshold values for triggering the different icons within a set are
            configurable, and the icon order is reversible. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Arrows3">
      <summary>
            3 arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.ArrowsGray3">
      <summary>
            3 gray arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Flags3">
      <summary>
            3 flags icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Signs3">
      <summary>
            3 signs icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Symbols3">
      <summary>
            3 symbols icon set (circled).
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Symbols32">
      <summary>
            3 Symbols icon set (uncircled).
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.TrafficLights31">
      <summary>
            3 traffic lights icon set (unrimmed).
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.TrafficLights32">
      <summary>
            3 traffic lights icon set with thick black border.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Arrows4">
      <summary>
            4 arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.ArrowsGray4">
      <summary>
            4 gray arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Rating4">
      <summary>
            4 ratings icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.RedToBlack4">
      <summary>
            4 'red to black' icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.TrafficLights4">
      <summary>
            4 traffic lights icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Arrows5">
      <summary>
            5 arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.ArrowsGray5">
      <summary>
            5 gray arrows icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Quarters5">
      <summary>
            5 quarters icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Rating5">
      <summary>
            5 rating icon set.
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Stars3">
      <summary>
            3 stars set
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Boxes5">
      <summary>
            5 boxes set
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.Triangles3">
      <summary>
            3 triangles set
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.None">
      <summary>
            None 
            </summary>
    </member>
    <member name="F:Aspose.Cells.IconSetType.CustomSet">
      <summary>
            CustomSet ,This element is read-only.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TimePeriodType">
      <summary>
            Used in a FormatConditionType.TimePeriod conditional formatting rule. 
            These are dynamic time periods, which change based on
            the date the conditional formatting is refreshed / applied.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.Today">
      <summary>
            Today's date.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.Yesterday">
      <summary>
            Yesterday's date.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.Tomorrow">
      <summary>
            Tomorrow's date.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.Last7Days">
      <summary>
            A date in the last seven days.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.ThisMonth">
      <summary>
            A date occuring in this calendar month.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.LastMonth">
      <summary>
            A date occuring in the last calendar month.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.NextMonth">
      <summary>
            A date occuring in the next calendar month.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.ThisWeek">
      <summary>
            A date occuring this week.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.LastWeek">
      <summary>
            A date occuring last week.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TimePeriodType.NextWeek">
      <summary>
            A date occuring next week.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Top10">
      <summary>
            Describe the Top10 conditional formatting rule. 
            This conditional formatting rule highlights cells whose
            values fall in the top N or bottom N bracket, as specified.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10.IsPercent">
      <summary>
            Get or set the flag indicating whether a "top/bottom n" rule is a "top/bottom n percent" rule.
            Default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10.IsBottom">
      <summary>
            Get or set the flag indicating whether a "top/bottom n" rule is a "bottom n" rule. '1' indicates 'bottom'.
            Default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10.Rank">
      <summary>
            Get or set the value of "n" in a "top/bottom n" conditional formatting rule.
            If IsPercent is true, the value must between 0 and 100.
            Otherwise it must between 0 and 1000.
            Default value is 10.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ContentDisposition">
      <summary>
            The content disposition type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ContentDisposition.Inline">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ContentDisposition.Attachment">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.HeaderFooterCommandType">
      <summary>
            Represents the command type of header and footer.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.Text">
      <summary>
            The text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.CurrentPage">
      <summary>
            Current page number
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.Pagecount">
      <summary>
            Page count
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.CurrentDate">
      <summary>
            Current date
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.CurrentTime">
      <summary>
            Current time
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.SheetName">
      <summary>
            Sheet name
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.FileName">
      <summary>
            File name without path
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.FilePath">
      <summary>
             File path without file name
            </summary>
    </member>
    <member name="F:Aspose.Cells.HeaderFooterCommandType.Picture">
      <summary>
            Picture
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "M:Aspose.Cells.ExternalRow.GetPosition(Aspose.Cells.CellsSs.CellData,System.Int32,System.Int16,System.Boolean,System.Boolean)" -->
    <member name="T:Aspose.Cells.FileFormatUtil">
      <summary>
            Provides utility methods for converting file format enums to strings or file extensions and back.
            </summary>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.IO.Stream)">
      <summary>
            Detects and returns the information about a format of an excel stored in a stream. 
            </summary>
      <param name="stream">
      </param>
      <returns>A <see cref="T:Aspose.Cells.FileFormatInfo" /> object that contains the detected information.</returns>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.String)">
      <summary>
            Detects and returns the information about a format of an excel stored in a file. 
            </summary>
      <param name="filePath">The file path.</param>
      <returns>A <see cref="T:Aspose.Cells.FileFormatInfo" /> object that contains the detected information.</returns>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.ExtensionToSaveFormat(System.String)">
      <summary>
            Converts a file name extension into a SaveFormat value.
            </summary>
      <param name="extension">The file extension. Can be with or without a leading dot. Case-insensitive.</param>
      <returns>
      </returns>
      <remarks>If the extension cannot be recognized, returns <see cref="F:Aspose.Cells.SaveFormat.Unknown" />.</remarks>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.IsTemplateFormat(System.String)">
      <summary>
            Returns true if the extension is .xlt, .xltX, .xltm,.ots.
            </summary>
      <param name="extension">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.LoadFormatToExtension(Aspose.Cells.LoadFormat)">
      <summary>
            Converts a load format enumerated value into a file extension.
            </summary>
      <param name="loadFormat">The loaded file format.</param>
      <returns> The returned extension is a lower-case string with a leading dot.</returns>
      <remarks>If it can not be converted, returns null.</remarks>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.LoadFormatToSaveFormat(Aspose.Cells.LoadFormat)">
      <summary>
            Converts a LoadFormat value to a SaveFormat value if possible. 
            </summary>
      <param name="loadFormat">The load format.</param>
      <returns>The save format.</returns>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.SaveFormatToExtension(Aspose.Cells.SaveFormat)">
      <summary>
            Converts a save format enumerated value into a file extension.
            </summary>
      <param name="format">The save format.</param>
      <returns>The returned extension is a lower-case string with a leading dot. </returns>
    </member>
    <member name="M:Aspose.Cells.FileFormatUtil.SaveFormatToLoadFormat(Aspose.Cells.SaveFormat)">
      <summary>
            Converts a SaveFormat value to a LoadFormat value if possible. 
            </summary>
      <param name="saveFormat">The save format.</param>
      <returns>The load format</returns>
    </member>
    <member name="T:Aspose.Cells.PasteType">
      <summary>
            Represents the paste special type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.All">
      <summary>
            Copies all data of the ranage.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Default">
      <summary>
            It works as "All" behavior of MS Excel.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.AllExceptBorders">
      <summary>
            Copies all data of the ranage withoutd the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.DefaultExceptBorders">
      <summary>
             It works as "All except borders" behavior of MS Excel.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.ColumnWidths">
      <summary>
            Only copies the widths of the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.RowHeights">
      <summary>
            Only copies the heights of the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Comments">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Formats">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Formulas">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.FormulasAndNumberFormats">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Validation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.Values">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.PasteType.ValuesAndNumberFormats">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.ColorScale">
      <summary>
            Describe the ColorScale conditional formatting rule. 
            This conditional formatting rule creates a gradated color scale on the cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.Is3ColorScale">
      <summary>
            Indicates whether conditional formatting is 3 color scale.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MinCfvo">
      <summary>
            Get or set this ColorScale's min value object.
            Cannot set null or CFValueObject with type FormatConditionValueType.Max to it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MidCfvo">
      <summary>
            Get or set this ColorScale's mid value object.
            Cannot set CFValueObject with type FormatConditionValueType.Max or FormatConditionValueType.Min to it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MaxCfvo">
      <summary>
            Get or set this ColorScale's max value object.
            Cannot set null or CFValueObject with type FormatConditionValueType.Min to it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MinColor">
      <summary>
            Get or set the min value object's corresponding color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MidColor">
      <summary>
            Get or set the mid value object's corresponding color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorScale.MaxColor">
      <summary>
            Get or set the max value object's corresponding color.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingValue">
      <summary>
            Describes the values of the interpolation points in a gradient scale, dataBar or iconSet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingValue.Value">
      <summary>
            Get or set the value of this conditional formatting value object.
            It should be used in conjunction with Type. 
            </summary>
      <remarks>
            If the value is string  and start with "=", it will be processed as a formula,
            otherwise we will process it as a simple value. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingValue.Type">
      <summary>
            Get or set the type of this conditional formatting value object.
            Setting the type to FormatConditionValueType.Min or FormatConditionValueType.Max 
            will auto set "Value" to null.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingValue.IsGTE">
      <summary>
            Get or set the Greater Than Or Equal flag. 
            Use only for icon sets, determines whether this threshold value uses 
            the greater than or equal to operator. 
            'false' indicates 'greater than' is used instead of 'greater than or equal to'.
            Default value is true.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataBar">
      <summary>
            Describe the DataBar conditional formatting rule. 
            This conditional formatting rule displays a gradated
            data bar in the range of cells.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            Worksheet sheet = workbook.Worksheets[0];
            
            //Adds an empty conditional formatting
            int index = sheet.ConditionalFormattings.Add();
            
            FormatConditions fcs = sheet.ConditionalFormattings[index];
            
            //Sets the conditional format range.
            CellArea ca = new CellArea();
            
            ca.StartRow = 0;
            
            ca.EndRow = 2;
            
            ca.StartColumn = 0;
            
            ca.EndColumn = 0;
            
            fcs.AddArea(ca);
            
            //Adds condition.
            int idx = fcs.AddCondtion(FormatConditionType.DataBar);
            
            fcs.AddArea(ca);
            
            FormatCondition cond = fcs[idx];
            
            //Get Databar
            DataBar dataBar = cond.DataBar;
            
            dataBar.Color = Color.Orange;
            
            //Set Databar properties
            dataBar.MinCfvo.Type = FormatConditionValueType.Percentile;
            
            dataBar.MinCfvo.Value = 30;
            
            dataBar.ShowValue = false;
            
            dataBar.BarBorder.Type = DataBarBorderType.DataBarBorderSolid;
            
            dataBar.BarBorder.Color = Color.Plum;
            
             dataBar.BarFillType = DataBarFillType.DataBarFillSolid;
              
             dataBar.AxisColor = Color.Red;
             
             dataBar.AxisPosition = DataBarAxisPosition.DataBarAxisMidpoint;
             
             dataBar.NegativeBarFormat.ColorType = DataBarNegativeColorType.DataBarColor;
             
             dataBar.NegativeBarFormat.Color = Color.White;
             
             dataBar.NegativeBarFormat.BorderColorType = DataBarNegativeColorType.DataBarColor;
             
             dataBar.NegativeBarFormat.BorderColor = Color.Yellow;
             
            //Put Cell Values
            Aspose.Cells.Cell cell1 = sheet.Cells["A1"];
            
            cell1.PutValue(10);
            
            Aspose.Cells.Cell cell2 = sheet.Cells["A2"];
            
            cell2.PutValue(120);
            
            Aspose.Cells.Cell cell3 = sheet.Cells["A3"];
            
            cell3.PutValue(260);
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xlsx");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            Dim sheet As Worksheet = workbook.Worksheets(0)
            
            'Adds an empty conditional formatting
            Dim index As Integer = sheet.ConditionalFormattings.Add()
            
            Dim fcs As FormatConditions = sheet.ConditionalFormattings(index)
            
            'Sets the conditional format range.
            Dim ca As New CellArea()
            
            ca.StartRow = 0
            
            ca.EndRow = 2
            
            ca.StartColumn = 0
            
            ca.EndColumn = 0
            
            fcs.AddArea(ca)
            
            'Adds condition.
            Dim idx As Integer = fcs.AddCondtion(FormatConditionType.DataBar)
            
            fcs.AddArea(ca)
            
            Dim cond As FormatCondition = fcs(idx)
            
            'Get Databar
            Dim dataBar As DataBar = cond.DataBar
            
            dataBar.Color = Color.Orange
            
            'Set Databar properties
            dataBar.MinCfvo.Type = FormatConditionValueType.Percentile
            
            dataBar.MinCfvo.Value = 30
            
            dataBar.ShowValue = False
            
            dataBar.BarBorder.Type = DataBarBorderType.DataBarBorderSolid
            
            dataBar.BarBorder.Color = Color.Plum
            
             dataBar.BarFillType = DataBarFillType.DataBarFillSolid
              
             dataBar.AxisColor = Color.Red
             
             dataBar.AxisPosition = DataBarAxisPosition.DataBarAxisMidpoint
             
             dataBar.NegativeBarFormat.ColorType = DataBarNegativeColorType.DataBarColor
             
             dataBar.NegativeBarFormat.Color = Color.White
             
             dataBar.NegativeBarFormat.BorderColorType = DataBarNegativeColorType.DataBarColor
             
             dataBar.NegativeBarFormat.BorderColor = Color.Yellow
            
            'Put Cell Values
            Dim cell1 As Aspose.Cells.Cell = sheet.Cells("A1")
            
            cell1.PutValue(10)
            
            Dim cell2 As Aspose.Cells.Cell = sheet.Cells("A2")
            
            cell2.PutValue(120)
            
            Dim cell3 As Aspose.Cells.Cell = sheet.Cells("A3")
            
            cell3.PutValue(260)
            
            'Saving the Excel file
            workbook.Save("D:\book1.xlsx")
            
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.DataBar.AxisColor">
      <summary>
            Gets the color of the axis for cells with conditional formatting as data bars.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.AxisPosition">
      <summary>
            Gets or sets the position of the axis of the data bars specified by a conditional formatting rule.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.BarFillType">
      <summary>
            Gets or sets how a data bar is filled with color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.Direction">
      <summary>
            Gets or sets the direction the databar is displayed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.BarBorder">
      <summary>
            Gets an object that specifies the border of a data bar.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.NegativeBarFormat">
      <summary>
            Gets the NegativeBarFormat object associated with a data bar conditional formatting rule.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.MinCfvo">
      <summary>
            Get or set this DataBar's min value object.
            Cannot set null or CFValueObject with type FormatConditionValueType.Max to it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.MaxCfvo">
      <summary>
            Get or set this DataBar's max value object.
            Cannot set null or CFValueObject with type FormatConditionValueType.Min to it.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.Color">
      <summary>
            Get or set this DataBar's Color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.MinLength">
      <summary>
            Represents the min length of data bar . 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.MaxLength">
      <summary>
            Represents the max length of data bar . 
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataBar.ShowValue">
      <summary>
            Get or set the flag indicating whether to show the values of the cells on which this data bar is applied.
            Default value is true.
            </summary>
    </member>
    <member name="T:Aspose.Cells.IconSet">
      <summary>
            Describe the IconSet conditional formatting rule. 
            This conditional formatting rule applies icons to cells
            according to their values.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            Worksheet sheet = workbook.Worksheets[0];
            
            //Adds an empty conditional formatting
            int index = sheet.ConditionalFormattings.Add();
            
            FormatConditions fcs = sheet.ConditionalFormattings[index];
            
            //Sets the conditional format range.
            CellArea ca = new CellArea();
            
            ca.StartRow = 0;
            
            ca.EndRow = 2;
            
            ca.StartColumn = 0;
            
            ca.EndColumn = 0;
            
            fcs.AddArea(ca);
            
            //Adds condition.
            int idx = fcs.AddCondtion(FormatConditionType.IconSet);
            
            fcs.AddArea(ca);
            
            FormatCondition cond = fcs[idx];
            
            //Get Icon Set
            IconSet iconSet = cond.IconSet;
            
            //Set Icon Type
            iconSet.Type = IconSetType.Arrows3;
            
            //Put Cell Values
            Aspose.Cells.Cell cell1 = sheet.Cells["A1"];
            
            cell1.PutValue(10);
            
            Aspose.Cells.Cell cell2 = sheet.Cells["A2"];
            
            cell2.PutValue(120);
            
            Aspose.Cells.Cell cell3 = sheet.Cells["A3"];
            
            cell3.PutValue(260);
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xlsx");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            Dim sheet As Worksheet = workbook.Worksheets(0)
            
            'Adds an empty conditional formatting
            Dim index As Integer = sheet.ConditionalFormattings.Add()
            
            Dim fcs As FormatConditions = sheet.ConditionalFormattings(index)
            
            'Sets the conditional format range.
            Dim ca As New CellArea()
            
            ca.StartRow = 0
            
            ca.EndRow = 2
            
            ca.StartColumn = 0
            
            ca.EndColumn = 0
            
            fcs.AddArea(ca)
            
            'Adds condition.
            Dim idx As Integer = fcs.AddCondtion(FormatConditionType.IconSet)
            
            fcs.AddArea(ca)
            
            Dim cond As FormatCondition = fcs(idx)
            
            'Get Icon Set
            Dim iconSet As IconSet = cond.IconSet
            
            'Set Icon Type
            iconSet.Type = IconSetType.Arrows3
            
            'Put Cell Values
            Dim cell1 As Aspose.Cells.Cell = sheet.Cells("A1")
            
            cell1.PutValue(10)
            
            Dim cell2 As Aspose.Cells.Cell = sheet.Cells("A2")
            
            cell2.PutValue(120)
            
            Dim cell3 As Aspose.Cells.Cell = sheet.Cells("A3")
            
            cell3.PutValue(260)
            
            'Saving the Excel file
            workbook.Save("D:\book1.xlsx") 
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.IconSet.CfIcons">
      <summary>
            Get the<see cref="T:Aspose.Cells.ConditionalFormattingIcon" /> from the collection
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconSet.Cfvos">
      <summary>
            Get the CFValueObjects instance.
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconSet.Type">
      <summary>
            Get or Set the icon set type to display.
            Setting the type will auto check if the current Cfvos's count is
            accord with the new type. If not accord, old Cfvos will be cleaned and 
            default Cfvos will be added.
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconSet.IsCustom">
      <summary>
            Indicates whether the icon set is custom.
            Default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconSet.ShowValue">
      <summary>
            Get or set the flag indicating whether to show the values of the cells on which this icon set is applied.
            Default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconSet.Reverse">
      <summary>
            Get or set the flag indicating whether to reverses the default order of the icons in this icon set.
            Default value is false.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ProtectedRange">
      <summary>
            A specified range to be allowed to edit when the sheet protection is ON. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.ProtectedRange.Name">
      <summary>
            Gets the Range title. This is used as a descriptor, not as a named range definition.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ProtectedRange.CellArea">
      <summary>
            Gets the <see cref="P:Aspose.Cells.ProtectedRange.CellArea" /> object represents the cell area to be protected.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ProtectedRange.GetAreas">
      <summary>
            Gets all referred areas.
            </summary>
      <returns>Returns all referred areas.</returns>
    </member>
    <member name="M:Aspose.Cells.ProtectedRange.AddArea(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a referred area to this 
            </summary>
      <param name="startRow">The start row.</param>
      <param name="startColumn">The start column.</param>
      <param name="endRow">The end row.</param>
      <param name="endColumn">The end column.</param>
    </member>
    <member name="P:Aspose.Cells.ProtectedRange.Password">
      <summary>
            Represents the password to protect the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ProtectedRange.SecurityDescriptor">
      <summary>
            The security descriptor defines user accounts who may edit this range without providing a password to access the range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ProtectedRangeCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.ProtectedRange" /> objects.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ProtectedRangeCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.ProtectedRange" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:Aspose.Cells.ProtectedRangeCollection.Add(System.String,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a <see cref="T:Aspose.Cells.ProtectedRange" /> item to the collection.
            </summary>
      <param name="name">Range title. This is used as a descriptor, not as a named range definition.</param>
      <param name="startRow">Start row index of the range.</param>
      <param name="startColumn">Start column index of the range.</param>
      <param name="endRow">End row index of the range.</param>
      <param name="endColumn">End column index of the range.</param>
      <returns>object index.</returns>
    </member>
    <member name="T:Aspose.Cells.ColorFilter">
      <summary>
            Represents the color filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ColorFilter.FilterByFillColor">
      <summary>
            Flag indicating whether or not to filter by the cell's fill color.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ColorFilter.GetColor(Aspose.Cells.WorksheetCollection)">
      <summary>
      </summary>
      <param name="sheets">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.CustomFilter">
      <summary>
            Represents the custom filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CustomFilter.FilterOperatorType">
      <summary>
            Gets and sets the filter operator type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CustomFilter.Criteria">
      <summary>
            Gets and sets the criteria.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CustomFilterCollection">
      <summary>
            Represents the custom filters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CustomFilterCollection.And">
      <summary>
            Indicates whether the two criteria have an "and" relationship. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.CustomFilterCollection.Item(System.Int32)">
      <summary>
            Gets the custom filter in the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.DateTimeGroupItem">
      <summary>
            Represents the datetime's group setting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.MinValue">
      <summary>
            Gets the min value.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DateTimeGroupItem.#ctor(Aspose.Cells.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
      </summary>
      <param name="type">
      </param>
      <param name="year">
      </param>
      <param name="month">
      </param>
      <param name="day">
      </param>
      <param name="hour">
      </param>
      <param name="minute">
      </param>
      <param name="second">
      </param>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.DateTimeGroupingType">
      <summary>
            Gets and sets the group type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Year">
      <summary>
            Gets and sets the year of the grouped date time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Month">
      <summary>
            Gets and sets the month of the grouped date time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Day">
      <summary>
            Gets and sets the day of the grouped date time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Hour">
      <summary>
            Gets and sets the hour of the grouped date time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Minute">
      <summary>
            Gets and sets the minute of the grouped date time.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DateTimeGroupItem.Second">
      <summary>
            Gets and sets the second of the grouped date time.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DateTimeGroupingType">
      <summary>
            Specifies how to group dateTime values. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Day">
      <summary>
            Group by day. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Hour">
      <summary>
            Group by hour. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Minute">
      <summary>
            Group by Minute.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Month">
      <summary>
            Group by Month.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Second">
      <summary>
            Group by Second.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DateTimeGroupingType.Year">
      <summary>
            Group by Year.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DynamicFilter">
      <summary>
            Represents the dynamic filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DynamicFilter.DynamicFilterType">
      <summary>
            Gets and sets the dynamic filter type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DynamicFilter.Value">
      <summary>
            Gets and sets the dynamic filter value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DynamicFilter.MaxValue">
      <summary>
            Gets and sets the dynamic filter max value.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DynamicFilterType">
      <summary>
            Dynamic filter type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.AboveAverage">
      <summary>
            Shows values that are above average. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.BelowAverage">
      <summary>
            Shows values that are below average. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.LastMonth">
      <summary>
            Shows last month's dates.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.LastQuarter">
      <summary>
            Shows last quarter's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.LastWeek">
      <summary>
            Shows last week's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.LastYear">
      <summary>
            Shows last year's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.January">
      <summary>
            Shows the dates that are in January, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.October">
      <summary>
            Shows the dates that are in October, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.November">
      <summary>
            Shows the dates that are in November, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.December">
      <summary>
            Shows the dates that are in December, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Februray">
      <summary>
            Shows the dates that are in Februray, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.March">
      <summary>
            Shows the dates that are in March, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.April">
      <summary>
            Shows the dates that are in April, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.May">
      <summary>
            Shows the dates that are in May, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.June">
      <summary>
            Shows the dates that are in June, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.July">
      <summary>
            Shows the dates that are in July, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.August">
      <summary>
            Shows the dates that are in August, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.September">
      <summary>
            Shows the dates that are in September, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.NextMonth">
      <summary>
            Shows next month's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.NextQuarter">
      <summary>
            Shows next quarter's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.NextWeek">
      <summary>
            Shows next week's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.NextYear">
      <summary>
            Shows next year's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.None">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Quarter1">
      <summary>
            Shows the dates that are in the 1st quarter, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Quarter2">
      <summary>
            Shows the dates that are in the 2nd quarter, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Quarter3">
      <summary>
            Shows the dates that are in the 3rd quarter, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Quarter4">
      <summary>
            Shows the dates that are in the 4th quarter, regardless of year. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.ThisMonth">
      <summary>
            Shows this month's dates.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.ThisQuarter">
      <summary>
            Shows this quarter's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.ThisWeek">
      <summary>
            Shows this week's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.ThisYear">
      <summary>
            Shows this year's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Today">
      <summary>
            Shows today's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Tomorrow">
      <summary>
            Shows tomorrow's dates. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.YearToDate">
      <summary>
            Shows the dates between the beginning of the year and today, inclusive. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.DynamicFilterType.Yesterday">
      <summary>
            Shows yesterday's dates. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.MultipleFilterCollection">
      <summary>
            Represents the multiple filte collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.MultipleFilterCollection.MatchBlank">
      <summary>
            Indicates whether to filter by blank. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.MultipleFilterCollection.Item(System.Int32)">
      <summary>
            DateTimeGroupItem or a simple object.
            </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.FilterType">
      <summary>
            The filter type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.ColorFilter">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.CustomFilters">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.DynamicFilter">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.MultipleFilters">
      <summary>
            When multiple values are chosen to filter by, or when a group of date values are chosen to filter by, 
            this element groups those criteria together. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.IconFilter">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.Top10">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.FilterType.None">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.IconFilter">
      <summary>
            Represents icon filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.IconFilter.IconSetType">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.IconFilter.IconId">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Top10Filter">
      <summary>
            Represents the top 10 filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10Filter.IsTop">
      <summary>
            Indicates whether it's top filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10Filter.IsPercent">
      <summary>
            Indicates whether the items is percent.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10Filter.Items">
      <summary>
            Gets and sets the items of the filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Top10Filter.Criteria">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.DirectoryType">
      <summary>
            Represents the directory  type of the file name.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DirectoryType.Volume">
      <summary>
            Represents an MS-DOS drive letter. It is followed by the drive letter.
            Or UNC file names, such as \\server\share\myfile.xls
            </summary>
    </member>
    <member name="F:Aspose.Cells.DirectoryType.SameVolume">
      <summary>
            Indicates that the source workbook is on the same drive as the dependent workbook (the drive letter is omitted)
            </summary>
    </member>
    <member name="F:Aspose.Cells.DirectoryType.DownDirectory">
      <summary>
            Indicates that the source workbook is in a subdirectory of the current directory.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DirectoryType.UpDirectory">
      <summary>
            Indicates that the source workbook is in the parent directory of the current directory.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExportTableOptions">
      <summary>
            Represents all export table options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.DataTable">
      <summary>
            Gets and sets the DataTable which columns's data type is assigned. 
            </summary>
      <msonly>n/a for java</msonly>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.ExportColumnName">
      <summary>
            Indicates whether the data in the first row are exported to the column name of the DataTable.
            The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.SkipErrorValue">
      <summary>
            Indicates whether skip invalid value for the column.
             For example,if the column type is decimal ,the value is greater than decimal.MaxValue 
             and this property is true,we will not throw exception again.
             The default value is false.
             </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.PlotVisibleCells">
      <summary>
            Only exports visible cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.PlotVisibleRows">
      <summary>
            Only exports visible rows.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.PlotVisibleColumns">
      <summary>
            Only exports visible columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.ExportAsString">
      <summary>
            Exported the string value of the cells to the DataTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.FormatStrategy">
      <summary>
            Gets and sets the format strategy when exporting the value as string value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.CheckMixedValueType">
      <summary>
            False, Aspose.Cells will set the DataColumn's type by the value type of the first row for performance.
            True, Aspose.Cells will check whether the value type in the column are mixed before set the DataColumn's type 
            And the value type are mixed, the DataColumn's type will be string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.IsVertical">
      <summary>
            True if a row in Workbook file represents a row in DataTable. False if a column in Workbook file represents a row in DataTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.Indexes">
      <summary>
            The indexes of columns/rows which shoudl be exported out.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExportTableOptions.RenameStrategy">
      <summary>
             Renames strategy when columns contains the duplicate names.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PasteOptions">
      <summary>
            Represents the paste special options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PasteOptions.PasteType">
      <summary>
            The paste special type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PasteOptions.SkipBlanks">
      <summary>
            Indicates whether skips blank cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PasteOptions.OnlyVisibleCells">
      <summary>
            True means only copying visible cells.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PasteOptions.Transpose">
      <summary>
             True to transpose rows and columns when the range is pasted. The default value is False.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ReferredAreaCollection">
      <summary>
            Represents all referred cells and areas.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredAreaCollection.Item(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.SaveFormat">
      <summary>
            Represents the format in which the workbook is saved.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.CSV">
      <summary>
            Represents a CSV file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xlsx">
      <summary>
            Represents an xlsx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xlsm">
      <summary>
            Represents an xlsm file which enable macros.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xltx">
      <summary>
            Represents an xltx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xltm">
      <summary>
            Represents an xltm file which enable macros.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xlam">
      <summary>
            Represents an xltm file which enable addin macros.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.TabDelimited">
      <summary>
            Represents a tab delimited text file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Html">
      <summary>
            Represents a html file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.MHtml">
      <summary>
            Represents a mhtml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.ODS">
      <summary>
            Represents a ods file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Excel97To2003">
      <summary>
            Represents an Excel97-2003 xls file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.SpreadsheetML">
      <summary>
            Represents an Excel 2003 xml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Xlsb">
      <summary>
            Represents an xlsb file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Auto">
      <summary>
            If saving the file to the disk,the file format accords to the extension of the file name.
            If saving the file to the stream, the file format is xlsx.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Unknown">
      <summary>
            Represents unrecognized format, cannot be saved. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Pdf">
      <summary>
            Represents a Pdf file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.XPS">
      <summary>
            Represents an XPS file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.TIFF">
      <summary>
            Represents an TIFF file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.SVG">
      <summary>
            Represents an SVG file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveFormat.Dif">
      <summary>
            Data Interchange Format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.SpreadsheetML2003SaveOptions">
      <summary>
            Represents the options for saving Excel 2003 spreadml file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.SpreadsheetML2003SaveOptions.#ctor">
      <summary>
            Creates the options for saving Excel 2003 spreadml file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.SpreadsheetML2003SaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates the options for saving Excel 2003 spreadml file.
            </summary>
      <param name="saveFormat">The save format.</param>
    </member>
    <member name="P:Aspose.Cells.SpreadsheetML2003SaveOptions.IsIndentedFormatting">
      <summary>
            Causes child elements to be indented.
            </summary>
      <remarks>
            The default value is true.
            If the value is false, it will reduce the size of the xml file 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.SpreadsheetML2003SaveOptions.LimitAsXls">
      <summary>
            Limit as xls, the max row index is 65535 and the max column index is 255.
            </summary>
    </member>
    <member name="P:Aspose.Cells.SpreadsheetML2003SaveOptions.ExportColumnIndexOfCell">
      <summary>
            The default value is false, it means that column index  will be ignored if the cell is contiguous to the previous cell.
            </summary>
    </member>
    <member name="T:Aspose.Cells.BuiltinStyleType">
      <summary>
            Represents all builin style type
            </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.TwentyPercentAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FortyPercentAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.SixtyPercentAccent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Bad">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Calculation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.CheckCell">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Comma">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Comma1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Currency">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Currency1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.ExplanatoryText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Good">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Header1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Header2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Header3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Header4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Hyperlink">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.FollowedHyperlink">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Input">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.LinkedCell">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Neutral">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Normal">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Note">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Output">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Percent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Title">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.Total">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.WarningText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.RowLevel">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.BuiltinStyleType.ColumnLevel">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.CellsColor">
      <summary>
            Represents all types of color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.IsShapeColor">
      <summary>
            Gets and set the color which should apply to cell or shape.
            </summary>
      <remarks>
            The expression of the color of the cell and the shape is different.
            For example: the theme color with same tint value will be not same in the cell and the shape.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.CellsColor.Type">
      <summary>
            The color type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.ThemeColor">
      <summary>
            Gets the theme color. Only applies for theme color type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.ColorIndex">
      <summary>
            Gets and sets the color index in the color palette. Only applies of indexed color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.Color">
      <summary>
            Gets and sets the RGB color.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.Argb">
      <summary>
            Gets and sets the color from a 32-bit ARGB value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsColor.Transparency">
      <summary>
            Gets and sets transparency as a value from 0.0 (opaque) through 1.0 (clear).
            </summary>
    </member>
    <member name="M:Aspose.Cells.CellsColor.SetTintOfShapeColor(System.Double)">
      <summary>
            Set the tint of the shape color
            </summary>
      <param name="tint">
      </param>
    </member>
    <member name="T:Aspose.Cells.ColorType">
      <summary>
            Represents all color type 
            </summary>
    </member>
    <member name="F:Aspose.Cells.ColorType.Automatic">
      <summary>
            Automatic color.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ColorType.AutomaticIndex">
      <summary>
            It's automatic color,but the displayed color depends the setting of the OS System.
            </summary>
      <remarks>
            Not supported.
            </remarks>
    </member>
    <member name="F:Aspose.Cells.ColorType.RGB">
      <summary>
            The RGB color.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ColorType.IndexedColor">
      <summary>
            The color index in the color palette.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ColorType.Theme">
      <summary>
            The theme color.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DxfCollection">
      <summary>
            Represents the master differential formatting records.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DxfCollection.Item(System.Int32)">
      <summary>
             Gets the element at the specified index.
            </summary>
      <param name="index">The specified index. </param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.LookAtType">
      <summary>
            Represents look at type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookAtType.Contains">
      <summary>
            Cell value Contains the find object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookAtType.StartWith">
      <summary>
            Cell value Starts with the find object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookAtType.EndWith">
      <summary>
            Cell value ends with the find object.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookAtType.EntireContent">
      <summary>
            Cell value is same as the find object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.LookInType">
      <summary>
            Represents look in type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.Formulas">
      <summary>
            If the cell contains a formula, find it from formula.
            Else find object from the formula.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.Values">
      <summary>
            Only find object from the formatted values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.ValuesExcludeFormulaCell">
      <summary>
            Only find object from the values of cells which do not contains formula.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.Comments">
      <summary>
            Only find object from the comments.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.OnlyFormulas">
      <summary>
            Only find object from formulas.
            </summary>
    </member>
    <member name="F:Aspose.Cells.LookInType.OriginalValues">
      <summary>
            Only find object from the original values.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ReplaceOptions">
      <summary>
            Represent the replace options.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReplaceOptions.IsCaseSensitive">
      <summary>
            Indicates if the searched string is case sensitive.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use ReplaceOptions.CaseSensitive property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.ReplaceOptions.CaseSensitive">
      <summary>
            Indicates if the searched string is case sensitive.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReplaceOptions.MatchEntireCellContents">
      <summary>
            Indicates whether to match entire cells contents
            </summary>
    </member>
    <member name="T:Aspose.Cells.ReferredArea">
      <summary>
            Represents a referred area by the formula.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.IsExternalLink">
      <summary>
            Indicates whether this is an external link.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.ExternalFileName">
      <summary>
             Get the external file name if this is an external reference.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.SheetName">
      <summary>
            Indicates which sheet this reference is in.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.IsArea">
      <summary>
            Indicates whether this is an area.
            </summary>
      <remarks>
            If this is not an area, only StartRow and StartColumn effect.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.EndColumn">
      <summary>
            The end column of the area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.StartColumn">
      <summary>
            The start column of the area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.EndRow">
      <summary>
            The end row of the area.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ReferredArea.StartRow">
      <summary>
            The start row of the area.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ReferredArea.GetValues">
      <summary>
            Gets cell values in this area.
            </summary>
      <returns>If this area is invalid, "#REF!" will be returned;
            If this area is one single cell, then return the cell value object;
            Otherwise return one 2D array for all values in this area.</returns>
    </member>
    <member name="M:Aspose.Cells.ReferredArea.GetValue(System.Int32,System.Int32)">
      <summary>
            Gets cell value with given offset from the top-left of this area.
            </summary>
      <param name="rowOffset">row offset from the start row of this area</param>
      <param name="colOffset">column offset from the start row of this area</param>
      <returns>"#REF!" if this area is invalid;
            "#N/A" if given offset out of this area;
            Otherwise return the cell value at given position.</returns>
    </member>
    <member name="T:Aspose.Cells.FindOptions">
      <summary>
            Represents find options.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate the workbook object
            Workbook workbook = new Workbook("C:\\book1.xls");
            
            //Get Cells collection 
            Cells cells = workbook.Worksheets[0].Cells;
            
            //Instantiate FindOptions Object
            FindOptions findOptions = new FindOptions();
            
            //Create a Cells Area
            CellArea ca = new CellArea();
            ca.StartRow = 8;
            ca.StartColumn = 2;
            ca.EndRow = 17;
            ca.EndColumn = 13;
            
            //Set cells area for find options
            findOptions.SetRange(ca);
            
            //Set searching properties
            findOptions.SearchNext = true;
            
            findOptions.SeachOrderByRows = true;
            
            findOptions.LookInType = LookInType.Values;
            
            //Find the cell with 0 value
            Cell cell = cells.Find(0, null, findOptions);
            
            [VB.NET]
            
            'Instantiate the workbook object
            Dim workbook As New Workbook("C:\book1.xls")
            
            'Get Cells collection 
            Dim cells As Cells = workbook.Worksheets(0).Cells
            
            'Instantiate FindOptions Object
            Dim findOptions As New FindOptions()
            
            'Create a Cells Area
            Dim ca As New CellArea()
            ca.StartRow = 8
            ca.StartColumn = 2
            ca.EndRow = 17
            ca.EndColumn = 13
            
            'Set cells area for find options
            findOptions.SetRange(ca)
            
            'Set searching properties
            findOptions.SearchNext = True
            
            findOptions.SeachOrderByRows = True
            
            findOptions.LookInType = LookInType.Values
            
            'Find the cell with 0 value
            Dim cell As Cell = cells.Find(0, Nothing, findOptions)
            
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.FindOptions.IsCaseSensitive">
      <summary>
            Indicates if the searched string is case sensitive.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use FindOptions.CaseSensitive property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.FindOptions.CaseSensitive">
      <summary>
            Indicates if the searched string is case sensitive.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.LookAtType">
      <summary>
            Look at type.
            </summary>
    </member>
    <member name="M:Aspose.Cells.FindOptions.GetRange">
      <summary>
            Gets and sets the searched range.
            </summary>
      <returns>
            Returns the seached range.
            </returns>
    </member>
    <member name="M:Aspose.Cells.FindOptions.SetRange(Aspose.Cells.CellArea)">
      <summary>
            Sets the searched range.
            </summary>
      <param name="ca">the searched range.</param>
    </member>
    <member name="P:Aspose.Cells.FindOptions.IsRangeSet">
      <summary>
            Indicates whether the searched range is set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.SearchNext">
      <summary>
            Search order. True: search next. False: search previous.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.SeachOrderByRows">
      <summary>
            Indicates whether search order by rows or columns.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.LookInType">
      <summary>
            Look in type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.RegexKey">
      <summary>
            Indicates whether the searched key is regex. If true then the searched key will be taken as regex.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.Style">
      <summary>
            The format to search for.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FindOptions.ConvertNumericData">
      <summary>
             Gets or sets a value that indicates whether converting the searched string value to numeric data.
            </summary>
    </member>
    <member name="T:Aspose.Cells.AutoFilter">
      <summary>
            Represents autofiltering for the specified worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Creating a file stream containing the Excel file to be opened
            FileStream fstream = new FileStream("C:\\book1.xls", FileMode.Open);
            //Instantiating a Workbook object and open a stream.
            Workbook workbook = new Workbook(fstream);
            //Accessing the first worksheet in the Excel file
            Worksheet worksheet = workbook.Worksheets[0];
            //Creating AutoFilter by giving the cells range of the heading row
            worksheet.AutoFilter.Range = "A1:B1";
            //Filtering columns with specified values
            worksheet.AutoFilter.Filter(1, "Bananas");
            //Saving the modified Excel file.
            workbook.Save("C:\\output.xls");
            //Closing the file stream to free all resources
            fstream.Close();
            
            [Visual Basic]
               
            'Creating a file stream containing the Excel file to be opened
            Dim fstream As FileStream = New FileStream("C:\\book1.xls", FileMode.Open)
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook(fstream)
            'Accessing the first worksheet in the Excel file
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            'Creating AutoFilter by giving the cells range of the heading row
            worksheet.AutoFilter.Range = "A1:B1"
            'Filtering columns with specified values
            Worksheet.AutoFilter.Filter(1, "Bananas")
            'Saving the modified Excel file 
            workbook.Save("C:\\output.xls")
            'Closing the file stream to free all resources
            fstream.Close()
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.AutoFilter.Sorter">
      <summary>
            Gets the data sorter.
            </summary>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.SetRange(System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets the range to which the specified AutoFilter applies.
            </summary>
      <param name="row">Row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column Index.</param>
    </member>
    <member name="P:Aspose.Cells.AutoFilter.Range">
      <summary>
            Represents the range to which the specified AutoFilter applies.
            </summary>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.AddFilter(System.Int32,System.String)">
      <summary>
            Adds a filter for a filter column.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="criteria">The specified criteria (a string; for example, "101"). 
            It only can be null or be one of the cells' value in this column.
            </param>
      <remarks>
            MS Excel 2007 supports multiple selection in a filter column.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.AddDateFilter(System.Int32,Aspose.Cells.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a date filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="dateTimeGroupingType">
        <see cref="T:Aspose.Cells.DateTimeGroupingType" />
      </param>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <param name="hour">The hour.</param>
      <param name="minute">The minute.</param>
      <param name="second">The second.</param>
      <remarks>
            If DateTimeGroupingType is Year, only the param year effects.
            If DateTiemGroupingType is Month, only the param year and month effect.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.RemoveDateFilter(System.Int32,Aspose.Cells.DateTimeGroupingType,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Removes a date filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="dateTimeGroupingType">
        <see cref="T:Aspose.Cells.DateTimeGroupingType" />
      </param>
      <param name="year">The year.</param>
      <param name="month">The month.</param>
      <param name="day">The day.</param>
      <param name="hour">The hour.</param>
      <param name="minute">The minute.</param>
      <param name="second">The second.</param>
      <remarks>
            If DateTimeGroupingType is Year, only the param year effects.
            If DateTiemGroupingType is Month, only the param year and month effect.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.RemoveFilter(System.Int32,System.String)">
      <summary>
            Removes a filter for a filter column.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="criteria">The specified criteria (a string; for example, "101"). 
            It only can be null or be one of the cells' value in this column.
            </param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.Filter(System.Int32,System.String)">
      <summary>
            Filters a list with specified criteria.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <param name="criteria">The specified criteria (a string; for example, "101"). </param>
      <remarks>
            Aspose.Cells will remove all other filter setting on this field as Ms Excel 97-2003.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.FilterTop10(System.Int32,System.Boolean,System.Boolean,System.Int32)">
      <summary>
            Filter the top 10 item in the list
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="isTop">Indicates whether filter from top or bottom</param>
      <param name="isPercent">Indicates whether the items is percent or count </param>
      <param name="itemCount">The item count</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.DynamicFilter(System.Int32,Aspose.Cells.DynamicFilterType)">
      <summary>
            Adds a dynamic filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="dynamicFilterType">
            Dynamic filter type.
            </param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.AddFontColorFilter(System.Int32,Aspose.Cells.CellsColor)">
      <summary>
            Adds a font color filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="color">The <see cref="T:Aspose.Cells.CellsColor" /> object.
            </param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.AddFillColorFilter(System.Int32,Aspose.Cells.BackgroundType,Aspose.Cells.CellsColor,Aspose.Cells.CellsColor)">
      <summary>
            Adds a fill color filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="pattern">The background pattern type.</param>
      <param name="foregroundColor">The foreground color.</param>
      <param name="backgroundColor">The background color.</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.AddIconFilter(System.Int32,Aspose.Cells.IconSetType,System.Int32)">
      <summary>
            Adds an icon filter.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="iconSetType">The icon set type.</param>
      <param name="iconId">The icon id.</param>
      <remarks>
            Only supports to add the icon filter.
            Not supports checking which row is visible if the filter is icon filter.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.MatchBlanks(System.Int32)">
      <summary>
            Match all blank cell in the list.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.MatchNonBlanks(System.Int32)">
      <summary>
            Match all not blank cell in the list.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.Custom(System.Int32,Aspose.Cells.FilterOperatorType,System.Object)">
      <summary>
            Filters a list with a custom criteria.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="operatorType1">The filter operator type</param>
      <param name="criteria1">The custom criteria</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.Custom(System.Int32,Aspose.Cells.FilterOperatorType,System.Object,System.Boolean,Aspose.Cells.FilterOperatorType,System.Object)">
      <summary>
            Filters a list with custom criteria.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).</param>
      <param name="operatorType1">The filter operator type</param>
      <param name="criteria1">The custom criteria</param>
      <param name="isAnd">
      </param>
      <param name="operatorType2">The filter operator type</param>
      <param name="criteria2">The custom criteria</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.ShowAll">
      <summary>
            Unhide all rows.
            </summary>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.RemoveFilter(System.Int32)">
      <summary>
            Remove the specific filter.
            </summary>
      <param name="fieldIndex">The specific filter index</param>
    </member>
    <member name="M:Aspose.Cells.AutoFilter.Refresh">
      <summary>
            Refresh auto filters to hide or unhide the rows. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.AutoFilter.FilterColumns">
      <summary>
            Gets the collection of the filter columns.
            </summary>
    </member>
    <member name="T:Aspose.Cells.BackgroundType">
      <summary>
            Enumerates cell background pattern types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.DiagonalCrosshatch">
      <summary>
            Represents diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.DiagonalStripe">
      <summary>
            Represents diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray6">
      <summary>
            Represents 6.25% gray pattern
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray12">
      <summary>
            Represents 12.5% gray pattern
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray25">
      <summary>
            Represents 25% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray50">
      <summary>
            Represents 50% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Gray75">
      <summary>
            Represents 75% gray pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.HorizontalStripe">
      <summary>
            Represents horizontal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.None">
      <summary>
            Represents no background.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ReverseDiagonalStripe">
      <summary>
            Represents reverse diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.Solid">
      <summary>
            Represents solid pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThickDiagonalCrosshatch">
      <summary>
            Represents thick diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinDiagonalCrosshatch">
      <summary>
            Represents thin diagonal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinDiagonalStripe">
      <summary>
            Represents thin diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinHorizontalCrosshatch">
      <summary>
            Represents thin horizontal crosshatch pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinHorizontalStripe">
      <summary>
            Represents thin horizontal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinReverseDiagonalStripe">
      <summary>
            Represents thin reverse diagonal stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.ThinVerticalStripe">
      <summary>
            Represents thin vertical stripe pattern.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BackgroundType.VerticalStripe">
      <summary>
            Represents vertical stripe pattern.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Border">
      <summary>
            Encapsulates the object that represents the cell border.
            </summary>
      <example>
        <code>
            [C#]
            
            int styleIndex = workbook.Styles.Add();
            Style style = workbook.Styles[styleIndex];
            //Set top border style and color
            Border border = style.Borders[BorderType.TopBorder];
            border.LineStyle = CellBorderType.Medium;
            border.Color = Color.Red;
            cell.SetStyle(style);
            
            [Visual Basic]
            
            Dim styleIndex as Integer = workbook.Styles.Add()
            Dim style as Style = workbook.Styles[styleIndex]
            'Set top border style and color
            Dim border as Border = style.Borders(BorderType.TopBorder)
            border.LineStyle = CellBorderType.Medium
            border.Color = Color.Red
            cell.SetStyle(style);
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Border.ThemeColor">
      <summary>
             Gets and sets the theme color of the border.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Border.Color">
      <summary>
            Gets or sets the <see cref="T:Aspose.Cells.Drawing.Color" /> of the border.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Border.ArgbColor">
      <summary>
            Gets and sets the color with a 32-bit ARGB value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Border.LineStyle">
      <summary>
            Gets or sets the cell border type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.BorderCollection">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.Border" /> objects.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Instantiating a Workbook object
             Workbook workbook = new Workbook();
             
             //Adding a new worksheet to the Excel object
             workbook.Worksheets.Add();
             
             //Obtaining the reference of the newly added worksheet by passing its sheet index
             Worksheet worksheet = workbook.Worksheets[0];
             
             //Accessing the "A1" cell from the worksheet
             Cell cell = worksheet.Cells["A1"];
             
             //Adding some value to the "A1" cell
             cell.PutValue("Visit Aspose!");
             
             Style style = cell.GetStyle();
             
             //Setting the line style of the top border
             style.Borders[BorderType.TopBorder].LineStyle = CellBorderType.Thick;
             
             //Setting the color of the top border
             style.Borders[BorderType.TopBorder].Color = Color.Black;
             
             //Setting the line style of the bottom border
             style.Borders[BorderType.BottomBorder].LineStyle = CellBorderType.Thick;
             
             //Setting the color of the bottom border
             style.Borders[BorderType.BottomBorder].Color = Color.Black;
             
             //Setting the line style of the left border
             style.Borders[BorderType.LeftBorder].LineStyle = CellBorderType.Thick;
             
             //Setting the color of the left border
             style.Borders[BorderType.LeftBorder].Color = Color.Black;
             
             //Setting the line style of the right border
             style.Borders[BorderType.RightBorder].LineStyle = CellBorderType.Thick;
             
             //Setting the color of the right border
             style.Borders[BorderType.RightBorder].Color = Color.Black;
             
             cell.SetStyle(style);
             
             //Saving the Excel file
             workbook.Save("C:\\book1.xls");
            
             [VB.NET]
             
             'Instantiating a Workbook object
             Dim workbook As Workbook = New Workbook()
             
             'Adding a new worksheet to the Workbook object
             workbook.Worksheets.Add()
             
             'Obtaining the reference of the newly added worksheet by passing its sheet index
             Dim worksheet As Worksheet = workbook.Worksheets(0)
             
             'Accessing the "A1" cell from the worksheet
             Dim cell As Cell = worksheet.Cells("A1")
             
             'Adding some value to the "A1" cell
             cell.PutValue("Visit Aspose!")
             
             Dim style as Style = cell.GetStyle()
             
             'Setting the line style of the top border
             style.Borders(BorderType.TopBorder).LineStyle = CellBorderType.Thick
             
             'Setting the color of the top border
             style.Borders(BorderType.TopBorder).Color = Color.Black
             
             'Setting the line style of the bottom border
             style.Borders(BorderType.BottomBorder).LineStyle = CellBorderType.Thick
             
             'Setting the color of the bottom border
             style.Borders(BorderType.BottomBorder).Color = Color.Black
             
             'Setting the line style of the left border
             style.Borders(BorderType.LeftBorder).LineStyle = CellBorderType.Thick
             
             'Setting the color of the left border
             style.Borders(BorderType.LeftBorder).Color = Color.Black
             
             'Setting the line style of the right border
             style.Borders(BorderType.RightBorder).LineStyle = CellBorderType.Thick
             
             'Setting the color of the right border
             style.Borders(BorderType.RightBorder).Color = Color.Black
             
             cell.SetStyle(style)
             
             'Saving the Excel file
             workbook.Save("C:\book1.xls")
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.BorderCollection.Item(Aspose.Cells.BorderType)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Border" /> element at the specified index.
             </summary>
      <param name="borderType">The border to be retrieved.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:Aspose.Cells.BorderCollection.SetColor(Aspose.Cells.Drawing.Color)">
      <summary>
            Sets the <see cref="T:Aspose.Cells.Drawing.Color" /> of all borders in the collection.
            </summary>
      <param name="color">Borders' <see cref="T:Aspose.Cells.Drawing.Color" />.</param>
    </member>
    <member name="M:Aspose.Cells.BorderCollection.SetStyle(Aspose.Cells.CellBorderType)">
      <summary>
            Sets the style of all borders of the collection.
            </summary>
      <param name="style">Borders' style</param>
    </member>
    <member name="P:Aspose.Cells.BorderCollection.DiagonalColor">
      <summary>
            Gets or sets the <see cref="T:Aspose.Cells.Drawing.Color" /> of Diagonal lines.
            </summary>
    </member>
    <member name="P:Aspose.Cells.BorderCollection.DiagonalStyle">
      <summary>
            Gets or sets the style of Diagonal lines.
            </summary>
    </member>
    <member name="T:Aspose.Cells.BorderType">
      <summary>
            Enumerates the border line and diagonal line types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.BottomBorder">
      <summary>
            Represents bottom border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.DiagonalDown">
      <summary>
            Represents the diagonal line from top left to right bottom.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.DiagonalUp">
      <summary>
            Represents the diagonal line from bottom left to right top.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.LeftBorder">
      <summary>
            Represents left border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.RightBorder">
      <summary>
            Represents right border line exists.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.TopBorder">
      <summary>
            Represents top border line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.Horizontal">
      <summary>
            Only for dynamic style,such as conditional formatting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.BorderType.Vertical">
      <summary>
            Only for dynamic style,such as conditional formatting.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CalcModeType">
      <summary>
            Represents the mode type of calculating formulas.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CalcModeType.Automatic">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CalcModeType.AutomaticExceptTable">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CalcModeType.Manual">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Cell">
      <summary>
             Encapsulates the object that represents a single Workbook cell.
             </summary>
      <example>
        <code>
            	[C#]
            	
            	Workbook excel = new Workbook();
            	Cells cells = excel.Worksheets[0].Cells;
            	
            	//Put a string into a cell
            	Cell cell = cells[0, 0];
            	cell.PutValue("Hello");
            	
            	string first = cell.StringValue;
            		
            	//Put an integer into a cell
            	cell = cells["B1"];
            	cell.PutValue(12);
            	
            	int second = cell.IntValue;
            	
            	//Put a double into a cell
            	cell = cells[0, 2];
            	cell.PutValue(-1.234);
            	
            	double third = cell.DoubleValue;
            	
            	//Put a formula into a cell
            	cell = cells["D1"];
            	cell.Formula = "=B1 + C1";
            	
            	//Put a combined formula: "sum(average(b1,c1), b1)" to cell at b2
            	cell = cells["b2"];
            	cell.Formula = "=sum(average(b1,c1), b1)";
            	
            	//Set style of a cell
            	Style style = cell.GetStyle();
            	//Set background color
            	style.BackgroundColor = Color.Yellow;
            	//Set format of a cell
            	style.Font.Name = "Courier New";
            	style.VerticalAlignment = TextAlignmentType.Top;
             cell.SetStyle(style);
            
            
             
             [Visual Basic]
             
            	Dim excel as Workbook = new Workbook()
            	Dim cells as Cells = exce.Worksheets(0).Cells
            	
            	'Put a string into a cell
            	Dim cell as Cell = cells(0, 0)
            	cell.PutValue("Hello")
            	
            	Dim first as String = cell.StringValue
            		
            	//Put an integer into a cell
            	cell = cells("B1")
            	cell.PutValue(12)
            	
            	Dim second as Integer = cell.IntValue
            	
            	//Put a double into a cell
            	cell = cells(0, 2)
            	cell.PutValue(-1.234)
            	
            	Dim third as Double = cell.DoubleValue
            	
            	//Put a formula into a cell
            	cell = cells("D1")
            	cell.Formula = "=B1 + C1"
            	
            	//Put a combined formula: "sum(average(b1,c1), b1)" to cell at b2
            	cell = cells("b2")
            	cell.Formula = "=sum(average(b1,c1), b1)"
            		
            	//Set style of a cell
            	Dim style as Style = cell.GetStyle()
            	
            	//Set background color
            	style.BackgroundColor = Color.Yellow
            	//Set font of a cell
            	style.Font.Name = "Courier New"
            	style.VerticalAlignment = TextAlignmentType.Top
            	cell.SetStyle(style)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cell.Calculate(Aspose.Cells.CalculationOptions)">
      <summary>
            Calcaulate the formula of the cell.
            </summary>
      <param name="options">Options for calculation</param>
    </member>
    <member name="M:Aspose.Cells.Cell.Calculate(System.Boolean,Aspose.Cells.ICustomFunction)">
      <summary>
            Calcaulate the formula of the cell.
            </summary>
      <param name="ignoreError">Indicates if hide the error in calculating formulas.
            The error may be unsupported function, external links, etc.</param>
      <param name="customFunction">The custom formula calculation functions to extend the calculation engine.</param>
    </member>
    <member name="P:Aspose.Cells.Cell.Worksheet">
      <summary>
            Gets the parent worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Boolean)">
      <summary>
            Puts an boolean value into the cell.
            </summary>
      <param name="boolValue">
      </param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Int32)">
      <summary>
            Puts an integer value into the cell.
            </summary>
      <param name="intValue">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Double)">
      <summary>
            Puts a double value into the cell.
            </summary>
      <param name="doubleValue">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.String,System.Boolean,System.Boolean)">
      <summary>
            Puts a value into the cell, if appropriate the value will be converted to other data type and cell's number format will be reset.
            </summary>
      <param name="stringValue">Input value</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
      <param name="setStyle">True: set the number format to cell's style when converting to other data type</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.String,System.Boolean)">
      <summary>
            Puts a string value into the cell and converts the value to other data type if appropriate.
            </summary>
      <param name="stringValue">Input value</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.String)">
      <summary>
            Puts a string value into the cell.
            </summary>
      <param name="stringValue">Input value</param>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.DateTime)">
      <summary>
            Puts a DateTime value into the cell.
            </summary>
      <param name="dateTime">Input value</param>
    </member>
    <member name="P:Aspose.Cells.Cell.DateTimeValue">
      <summary>
            Gets the DateTime value contained in the cell.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.PutValue(System.Object)">
      <summary>
            Puts an object value into the cell.
            </summary>
      <param name="objectValue">input value</param>
    </member>
    <member name="P:Aspose.Cells.Cell.Row">
      <summary>
            Gets row number (zero based) of the cell.
            </summary>
      <value>Cell row number</value>
    </member>
    <member name="P:Aspose.Cells.Cell.Column">
      <summary>
            Gets column number (zero based) of the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IsFormula">
      <summary>
            Represents if the specified cell contains formula.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Type">
      <summary>
            Represents cell value type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Name">
      <summary>
            Gets the name of the cell. 
            </summary>
      <remarks>
            A cell name includes its column letter and row number. For example, the name of a cell in row 0 and column 0 is A1.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Cell.IsErrorValue">
      <summary>
            Checks if a formula can properly evaluate a result.
            </summary>
      <remarks>Only applies to formula cell.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.GetStringValue(Aspose.Cells.CellValueFormatStrategy)">
      <summary>
            Gets the string value by specific formatted strategy.
            </summary>
      <param name="formatStrategy">The formatted strategy.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Cell.StringValue">
      <summary>
            Gets the string value contained in the cell. If the type of this cell is string, then return the string value itself.
            For other cell types, the formatted string value (formatted with the specified style of this cell) will be returned.
            The formatted cell value is same with what you can get from excel when copying a cell as text (such as
            copying cell to text editor or exporting to csv).
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.StringValueWithoutFormat">
      <summary>
            Gets cell's value as string without any format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.NumberCategoryType">
      <summary>
            Represents the category type of this cell's number formatting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.DisplayStringValue">
      <summary>
            Gets the formatted string value of this cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IntValue">
      <summary>
            Gets the integer value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.DoubleValue">
      <summary>
            Gets the double value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.FloatValue">
      <summary>
            Gets the float value contained in the cell.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.BoolValue">
      <summary>
            Gets the boolean value contained in the cell.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.GetDisplayStyle">
      <summary>
            Gets the display style of the cell.
            If the cell is conditional formatted, the display style is not same as the cell.GetStyle().
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.GetFormatConditions">
      <summary>
            Gets format conditions which applies to this cell.
            </summary>
      <returns>Returns <see cref="T:Aspose.Cells.FormatConditionCollection" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetStyle">
      <summary>
             Gets the cell style.
             </summary>
      <returns>Style object.</returns>
      <remarks>To change the style of the cell, please call Cell.SetStyle() method after changing the style.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.GetStyle(System.Boolean)">
      <summary>
            If parameter is true, check whether other cells' borders will effecting the style of this cell.
            </summary>
      <param name="checkBorders">Check other cells' borders</param>
      <returns>
      </returns>
      <remarks>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.SetStyle(Aspose.Cells.Style)">
      <summary>
            Sets the cell style.
            </summary>
      <param name="style">The cell style.</param>
      <remarks>
            If the border settings are changed, the border of adjact cells will be updated too.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.SetStyle(Aspose.Cells.Style,System.Boolean)">
      <summary>
            Apply the cell style.
            </summary>
      <param name="style">The cell style.</param>
      <param name="explicitFlag">True, only overwriting formatting which is explicitly set.
            </param>
    </member>
    <member name="M:Aspose.Cells.Cell.SetStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Apply the cell style.
            </summary>
      <param name="style">The cell style.</param>
      <param name="flag">The style flag.</param>
    </member>
    <member name="P:Aspose.Cells.Cell.SharedStyleIndex">
      <summary>
            Gets cell's shared style index in the style pool.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.Formula">
      <summary>
             Gets or sets a formula of the <see cref="T:Aspose.Cells.Cell" />.
             </summary>
      <remarks>A formula string always begins with an equal sign (=). 
            And please always use comma (,) as parameters delimeter, such as "=SUM(A1, E1, H2)".<p></p>
            User can set any formula in Workbook designer file. Aspose.Cells will keep all the formulas.
            If user use this property to set a formula to a cell, major part of Workbook built-in functions
            is supported. And more is coming. If you have any special need for Workbook built-in functions, 
            please let us know.		
            </remarks>
      <example>
        <code>
            [C#]
            
            Workbook excel = new Workbook();
            Cells cells = excel.Worksheets[0];
            cells["B6"].Formula = "=SUM(B2:B5, E1) + sheet2!A1";
            
            [Visual Basic]
            
            Dim excel As Workbook =  New Workbook() 
            Dim cells As Cells =  excel.Worksheets(0) 
            cells("B6").Formula = "=SUM(B2:B5, E1) + sheet2!A1"
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cell.SetFormula(System.String,System.Object)">
      <summary>
            Set the formula and the value of the formula.
            </summary>
      <param name="formula">The formula.</param>
      <param name="value">The value of the formula.</param>
    </member>
    <member name="P:Aspose.Cells.Cell.R1C1Formula">
      <summary>
            Gets or sets a R1C1 formula of the <see cref="T:Aspose.Cells.Cell" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.ContainsExternalLink">
      <summary>
            Indicates wether this cell contains an external link.
            Only applies when the cell is a formula cell.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.GetPrecedents">
      <summary>
            Gets all cells or ranges which this cell's formula depends on.
            </summary>
      <returns>
            Returns all cells or ranges.
            </returns>
      <remarks>Returns null if this is not a formula cell.</remarks>
      <example>
        <code>
            
            [C#]
            
            Workbook workbook = new Workbook();
            Cells cells = workbook.Worksheets[0].Cells;
            cells["A1"].Formula = "= B1 + SUM(B1:B10) + [Book1.xls]Sheet1!A1";
             ReferredAreas areas = cells["A1"].GetPrecedents();
            for (int i = 0; i &lt; areas.Count; i++)
            {
                ReferredArea area = areas[i];
                 StringBuilder stringBuilder = new StringBuilder();
                 if (area.IsExternalLink)
                 {
                     stringBuilder.Append("[");
                      stringBuilder.Append(area.ExternalFileName);
                      stringBuilder.Append("]");
                  }
                  stringBuilder.Append(area.SheetName);
                  stringBuilder.Append("!");
                  stringBuilder.Append(CellsHelper.CellIndexToName(area.StartRow, area.StartColumn));
                  if (area.IsArea)
                   {
                       stringBuilder.Append(":");
                       stringBuilder.Append(CellsHelper.CellIndexToName(area.EndRow, area.EndColumn));
                   }
                   Console.WriteLine(stringBuilder.ToString());
                }
             workbook.Save(@"C:\Book2.xls");
            
            [Visual Basic]
            
            Dim workbook As Workbook = New Workbook()
            Dim cells As Cells = workbook.Worksheets(0).Cells
            cells("A1").Formula = "= B1 + SUM(B1:B10) + [Book1.xls]Sheet1!A1"
             Dim areas As ReferredAreas = cells("A1").GetPrecedents()
            For i As Integer = 0 To areas.Count - 1
                Dim area As ReferredArea = areas(i)
                Dim stringBuilder As StringBuilder = New StringBuilder()
                If (area.IsExternalLink) Then
                    stringBuilder.Append("[")
                    stringBuilder.Append(area.ExternalFileName)
                   stringBuilder.Append("]")
                End If
                stringBuilder.Append(area.SheetName)
                stringBuilder.Append("!")
                stringBuilder.Append(CellsHelper.CellIndexToName(area.StartRow, area.StartColumn))
                If (area.IsArea) Then
                    stringBuilder.Append(":")
                    stringBuilder.Append(CellsHelper.CellIndexToName(area.EndRow, area.EndColumn))
                 End If
                Console.WriteLine(stringBuilder.ToString())
             Next
             workbook.Save("C:\Book2.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cell.GetDependents(System.Boolean)">
      <summary>
            Get all cells which refer to the specific cell.
            </summary>
      <param name="isAll">Indicates whether check other worksheets</param>
    </member>
    <member name="M:Aspose.Cells.Cell.GetLeafs">
      <summary>
            Get all cells which will be updated when this cell is modified.
            This method can only work after calling Workbook.CalculateFormula.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.GetWidthOfValue">
      <summary>
            Gets the width of the value in unit of pixels.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetHeightOfValue">
      <summary>
            Gets the height of the value in unit of pixels.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Cell.IsArrayHeader">
      <summary>
            Indicates the cell's formula is and array formula 
            and it is the first cell of the array.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.GetArrayRange">
      <summary>
            Gets the array range if the cell's formula is an array formula.
            </summary>
      <returns>
            The array range.
            </returns>
      <remarks>Only applies when the cell's formula is an array formula</remarks>
    </member>
    <member name="P:Aspose.Cells.Cell.IsInArray">
      <summary>
            Indicates whether the cell formula is an array formula.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cell.IsInTable">
      <summary>
            Indicates whether this cell is part of table formula.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.SetArrayFormula(System.String,System.Int32,System.Int32)">
      <summary>
            Sets an array formula to a range of cells.
            </summary>
      <param name="arrayFormula">Array formula.</param>
      <param name="rowNumber">Number of rows to populate result of the array formula.</param>
      <param name="columnNumber">Number of columns to populate result of the array formula.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.RemoveArrayFormula(System.Boolean)">
      <summary>
            Remove array formula.
            </summary>
      <param name="leaveNormalFormula">True represents converting the array formula to normal formula.</param>
    </member>
    <member name="M:Aspose.Cells.Cell.SetAddInFormula(System.String,System.String)">
      <summary>
             Sets an Add-In formula to the cell.
             </summary>
      <param name="addInFileName">Add-In file name.</param>
      <param name="addInFunction">Add-In function name.</param>
      <example>
        <code>
             [C#]
             cells["h11"].SetAddInFormula("HRVSTTRK.xla", "=pct_overcut(F3:G3)");
             cells["h12"].SetAddInFormula("HRVSTTRK.xla", "=pct_overcut()"); 
            
             [Visual Basic]
             cells("h11").SetAddInFormula("HRVSTTRK.xla", "=pct_overcut(F3:G3)")
             cells("h12").SetAddInFormula("HRVSTTRK.xla", "=pct_overcut()")
             </code>
      </example>
      <remarks>
             Add-In file should be placed in the directory or sub-directory of Workbook Add-In library.
             For example, file name can be "Eurotool.xla" or "solver\solver.xla". 
             </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.Copy(Aspose.Cells.Cell)">
      <summary>
            Copies data from a source cell.
            </summary>
      <param name="cell">Source <see cref="T:Aspose.Cells.Cell" /> object.</param>
    </member>
    <member name="P:Aspose.Cells.Cell.Value">
      <summary>
            Gets the value contained in this cell.
            </summary>
      <remarks>Possible type:
            <p>null,</p><p>Boolean,</p><p>DateTime,</p><p>Double,</p><p>Integer</p><p>String.</p></remarks>
    </member>
    <member name="P:Aspose.Cells.Cell.IsStyleSet">
      <summary>
            Indicates if the cell's style is set. If return false, it means this cell has a default cell format.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.Characters(System.Int32,System.Int32)">
      <summary>
            Returns a Characters object that represents a range of characters within the cell text.
            </summary>
      <param name="startIndex">The index of the start of the character.</param>
      <param name="length">The number of characters.</param>
      <returns>Characters object.</returns>
      <remarks>This method only works on cell with string value.</remarks>
      <example>
        <code>
            [C#]
            excel.Worksheets[0].Cells["A1"].PutValue("Helloworld");
            excel.Worksheets[0].Cells["A1"].Characters(5, 5).Font.IsBold = true;
            excel.Worksheets[0].Cells["A1"].Characters(5, 5).Font.Color = Color.Blue;
            
            [Visual Basic]
            excel.Worksheets(0).Cells("A1").PutValue("Helloworld")
            excel.Worksheets(0).Cells("A1").Characters(5, 5).Font.IsBold = True
            excel.Worksheets(0).Cells("A1").Characters(5, 5).Font.Color = Color.Blue
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Cell.IsRichText">
      <summary>
            Indicates whether the cell string value is a rich text.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.GetCharacters">
      <summary>
            Returns all Characters objects 
            that represents a range of characters within the cell text.
            </summary>
      <returns>All Characters objects </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetCharacters(System.Boolean)">
      <summary>
            Returns all Characters objects 
            that represents a range of characters within the cell text.
            </summary>
      <param name="flag">Indicates whether applying table style to the cell if the cell is in the table.</param>
      <returns>All Characters objects </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.SetCharacters(Aspose.Cells.FontSetting[])">
      <summary>
            Sets rich text format of the cell.
            </summary>
      <param name="characters">All Characters objects.</param>
    </member>
    <member name="P:Aspose.Cells.Cell.IsMerged">
      <summary>
            Checks if a cell is part of a merged range or not. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cell.GetMergedRange">
      <summary>
            Returns a <see cref="T:Aspose.Cells.Range" /> object which represents a merged range.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Range" /> object. Null if this cell is not merged.</returns>
    </member>
    <member name="M:Aspose.Cells.Cell.SetSharedFormula(System.String,System.Int32,System.Int32)">
      <summary>
            Sets a formula to a range of cells.
            </summary>
      <param name="sharedFormula">Shared formula.</param>
      <param name="rowNumber">Number of rows to populate the formula.</param>
      <param name="columnNumber">Number of columns to populate the formula.</param>
      <remarks>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.Equals(Aspose.Cells.Cell)">
      <summary>
            Checks whether this object refers to the same cell with another cell object.
            </summary>
      <param name="cell">another cell object</param>
      <returns>true if two cell objects refers to the same cell.</returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetConditionalFormattingResult">
      <summary>
            Get the result of the conditional formatting.
            </summary>
      <remarks>
            Returns null if no conditional formatting is applied to this cell, 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cell.GetValidation">
      <summary>
            Gets the validation applied to this cell.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetValidationValue">
      <summary>
            Gets the value of validation which applied to this cell.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cell.GetTable">
      <summary>
            Gets the table which contains this cell.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.CellArea">
      <summary>
            Represent an area of cells.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Create Cell Area
            CellArea ca = new CellArea();
            ca.StartRow = 0;
            ca.EndRow = 0;
            ca.StartColumn = 0;
            ca.EndColumn = 0;
            
            [VB.NET]
            
            'Create Cell Area
            Dim ca As CellArea = New CellArea()
            ca.StartRow = 0
            ca.EndRow = 0
            ca.StartColumn = 0
            ca.EndColumn = 0
            
            </code>
      </example>
    </member>
    <member name="F:Aspose.Cells.CellArea.StartRow">
      <summary>
            Gets or set the start row of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellArea.EndRow">
      <summary>
            Gets or set the end row of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellArea.StartColumn">
      <summary>
            Gets or set the start column of this area.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellArea.EndColumn">
      <summary>
            Gets or set the end column of this area.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CellArea.CompareTo(System.Object)">
      <summary>
            Internal use only.
            </summary>
      <param name="obj">
      </param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CellArea.ToString">
      <summary>
            Returns a string represents the current Worksheet object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CellArea.CreateCellArea(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creats a cell area.
            </summary>
      <param name="startRow">The start row.</param>
      <param name="startColumn">The start column.</param>
      <param name="endRow">The end row.</param>
      <param name="endColumn">The end column.</param>
      <returns>Return a <see cref="T:Aspose.Cells.CellArea" />.</returns>
    </member>
    <member name="M:Aspose.Cells.CellArea.CreateCellArea(System.String,System.String)">
      <summary>
            Creats a cell area.
            </summary>
      <param name="startCellName">The top-left cell of the range.</param>
      <param name="endCellName">The bottom-right cell of the range.</param>
      <returns>Return a <see cref="T:Aspose.Cells.CellArea" />.</returns>
    </member>
    <member name="T:Aspose.Cells.CellBorderType">
      <summary>
            Enumerates a cell's border type. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.DashDot">
      <summary>
            Represents thin dash-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.DashDotDot">
      <summary>
            Represents thin dash-dot-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Dashed">
      <summary>
            Represents dashed line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Dotted">
      <summary>
            Represents dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Double">
      <summary>
            Represents double line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Hair">
      <summary>
            Represents hair line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.MediumDashDot">
      <summary>
            Represents medium dash-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.MediumDashDotDot">
      <summary>
            Represents medium dash-dot-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.MediumDashed">
      <summary>
            Represents medium dashed line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.None">
      <summary>
            Represents no line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Medium">
      <summary>
            Represents medium line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.SlantedDashDot">
      <summary>
            Represents slanted medium dash-dotted line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Thick">
      <summary>
            Represents thick line.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellBorderType.Thin">
      <summary>
            Represents thin line.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Cells">
      <summary>
             Encapsulates a collection of <see cref="T:Aspose.Cells.Cell" /> objects.
             </summary>
      <example>
        <code>
             
             [C#]
             
             Workbook excel = new Workbook();
            	Cells cells = excel.Worksheets[0].Cells;
            	
            	//Set default row height
            	cells.StandardHeight = 20;
            	//Set row height
            	cells.SetRowHeight(2, 20.5);
            	
            	//Set default colum width
            	cells.StandardWidth = 15;
            	//Set column width
            	cells.SetColumnWidth(3, 12.57);
            	
            	//Merge cells
            	cells.Merge(5, 4, 2, 2);
            	
            	//Import data
            	DataTable dt = new DataTable("Products");
             dt.Columns.Add("Product_ID",typeof(Int32));
             dt.Columns.Add("Product_Name",typeof(string));
             dt.Columns.Add("Units_In_Stock",typeof(Int32));
             DataRow dr = dt.NewRow();
             dr[0] = 1;
             dr[1] = "Aniseed Syrup";
             dr[2] = 15;
             dt.Rows.Add(dr);
             dr = dt.NewRow();
             dr[0] = 2;
             dr[1] = "Boston Crab Meat";
             dr[2] = 123;
             dt.Rows.Add(dr);
             cells.ImportDataTable(dt, true, 12, 12, 10, 10);
             
             //Export data
             DataTable outDataTable = cells.ExportDataTable(12, 12, 10, 10);
            
             [Visual Basic]
             
             Dim excel as Workbook = new Workbook()
            	Dim cells as Cells = excel.Worksheets(0).Cells
            	
            	'Set default row height
            	cells.StandardHeight = 20
            	'Set row height
            	cells.SetRowHeight(2, 20.5)
            	
            	'Set default colum width
            	cells.StandardWidth = 15
            	'Set column width
            	cells.SetColumnWidth(3, 12.57)
            	
            	'Merge cells
            	cells.Merge(5, 4, 2, 2)
            	
            	'Import data
            	Dim dt as DataTable = new DataTable("Employee")
            	dt.Columns.Add("Employee_ID",typeof(Int32))
             dt.Columns.Add("Employee_Name",typeof(string))
             dt.Columns.Add("Gender",typeof(string))
             Dim dr as DataRow = dt.NewRow()
             dr(0) = 1
             dr(1) = "John Smith"
             dr(2) = "Male"
             dt.Rows.Add(dr)
             dr = dt.NewRow()
             dr(0) = 2
             dr(1) = "Mary Miller"
             dr(2) = "Female"
             dt.Rows.Add(dr)
             cells.ImportDataTable(dt, true, 12, 12, 10, 10)
             
             'Export data
             Dim outDataTable as DataTable = cells.ExportDataTable(12, 12, 10, 10)
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Cells.Count">
      <summary>
            Gets the number of cells.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.GetEnumerator">
      <summary>
            Gets the cells enumerator.
            </summary>
      <remarks>When traversing elements by the returned Enumerator, the cells collection
            should not be modified (such as operations that will cause new Cell/Row be instantiated or existing Cell/Row be deleted).
            Otherwise the enumerator may not be able to traverse all cells correctly (some elements may be traversed repeatedly or skipped).</remarks>
      <returns>The cells enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRowEnumerator">
      <summary>
            Gets the rows enumerator
            </summary>
      <returns>The rows enuerator.</returns>
    </member>
    <member name="P:Aspose.Cells.Cells.Rows">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Row" /> objects that represents the individual rows in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MergedCells">
      <summary>
            Gets the collection of merged cells.
            </summary>
      <remarks>In this collection, each item is a <see cref="T:Aspose.Cells.CellArea" /> structure which represents an area of merged cells.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetCell(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element or null at the specified cell row index and column index.
            </summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <returns>Return Cell object if a Cell object exists.
            Return null if the cell does not exist.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRow(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Row" /> element at the specified cell row index.
            </summary>
      <param name="row">Row index</param>
      <returns>
            If the row object does exist return Row object, otherwise return null.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CheckCell(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element or null at the specified cell row index and column index.
            </summary>
      <param name="row">Row index</param>
      <param name="column">Column index</param>
      <returns>Return Cell object if a Cell object exists.
            Return null if the cell does not exist.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CheckRow(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Row" /> element or at the specified cell row index.
            </summary>
      <param name="row">Row index</param>
      <returns>
            If the row object does exist return Row object, otherwise return null.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CheckColumn(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Column" /> element or null at the specified column index.
            </summary>
      <param name="columnIndex">The column index.</param>
      <returns>The Column object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.IsRowHidden(System.Int32)">
      <summary>
            Checks whether a row at given index is hidden.
            </summary>
      <param name="rowIndex">row index</param>
      <returns>true if the row is hidden</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.IsColumnHidden(System.Int32)">
      <summary>
            Checks whether a column at given index is hidden.
            </summary>
      <param name="columnIndex">column index</param>
      <returns>true if the column is hidden.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.AddRange(Aspose.Cells.Range)">
      <summary>
            Adds a range object reference to cells
            </summary>
      <param name="rangeObject">The range object will be contained in the cells</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.String,System.String)">
      <summary>
            Creates a <see cref="T:Aspose.Cells.Range" /> object from a range of cells.
            </summary>
      <param name="upperLeftCell">Upper left cell name.</param>
      <param name="lowerRightCell">Lower right cell name.</param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Creates a <see cref="T:Aspose.Cells.Range" /> object from a range of cells.
            </summary>
      <param name="firstRow">First row of this range</param>
      <param name="firstColumn">First column of this range</param>
      <param name="totalRows">Number of rows</param>
      <param name="totalColumns">Number of columns</param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.String)">
      <summary>
             Creates a <see cref="T:Aspose.Cells.Range" /> object from an address of the range.
            </summary>
      <param name="address">The address of the range.</param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.CreateRange(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Creates a <see cref="T:Aspose.Cells.Range" /> object from rows of cells or columns of cells.
            </summary>
      <param name="firstIndex">First row index or first column index, zero based.</param>
      <param name="number">Total number of rows or columns, one based.</param>
      <param name="isVertical">True - Range created from columns of cells. False - Range created from rows of cells. </param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object.</returns>
    </member>
    <member name="P:Aspose.Cells.Cells.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Cell" /> item within the worksheet
            </summary>
      <param name="index">The zero based index of the element.</param>
      <value>The element at the specified index.</value>
      <remarks>NOTE: This member is now obsolete. 
            Instead, please use Cells.GetEnumerator() method to iterate all cells in this worksheet.
            This property will be removed 12 months later since February 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.Item(System.Int32,System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element at the specified cell row index and column index.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>The <see cref="T:Aspose.Cells.Cell" /> object.</returns>
      <example>
        <code> 
            [C#]
            
            Cells cells = excel.Worksheets[0].Cells;
            Cell cell = cells[0, 0];	//Gets the cell at "A1"
            
            [Visual Basic]
            
            Dim cells As Cells =  excel.Worksheets(0).Cells 
            Dim cell As Cell =  cells(0,0)  'Gets the cell at "A1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Cells.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Cell" /> element at the specified cell name.
            </summary>
      <param name="cellName">Cell name,including its column letter and row number, for example A5.</param>
      <returns>A <see cref="T:Aspose.Cells.Cell" /> object</returns>
      <example>
        <code>
            [C#]
            
            Cells cells = excel.Worksheets[0].Cells;
            Cell cell = cells["A1"];	//Gets the cell at "A1"
            
            [Visual Basic]
            
            Dim cells As Cells =  excel.Worksheets(0).Cells 
            Dim cell As Cell =  cells("A1")  'Gets the cell at "A1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Cells.MultiThreadReading">
      <summary>
            Gets or sets whether the cells data model should support Multi-Thread reading.
            Default value of this property is false.
            If there are multiple threads to read Row/Cell objects in this collection concurrently,
            this property should be set as true, otherwise unexpected result may be produced.
            Supporting Multi-Thread reading may degrade the performance for accessing Row/Cell objects from this collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MemorySetting">
      <summary>
            Gets or sets the memory usage option for this cells.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.Clear">
      <summary>
            Clears all cell and row objects.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Style">
      <summary>
            Gets and sets the default style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardWidthInch">
      <summary>
             Gets or sets the default column width in the worksheet, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardWidthPixels">
      <summary>
             Gets or sets the default column width in the worksheet, in unit of pixels.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardWidth">
      <summary>
            Gets or sets the default column width in the worksheet, in unit of characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardHeight">
      <summary>
            Gets or sets the default row height in this worksheet, in unit of points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.StandardHeightPixels">
      <summary>
            Gets or sets the default row height in this worksheet, in unit of pixels.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportData(Aspose.Cells.ICellsDataTable,System.Int32,System.Int32,Aspose.Cells.ImportTableOptions)">
      <summary>
            Import data from custom data table.
            </summary>
      <param name="table">The custom data table.</param>
      <param name="firstRow">First row index.</param>
      <param name="firstColumn">First column index.</param>
      <param name="options">The import options</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportTwoDimensionArray(System.Object[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of data into a worksheet.
            </summary>
      <param name="objArray">Two-dimension data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportTwoDimensionArray(System.Object[0:,0:],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a two-dimension array of data into a worksheet.
            </summary>
      <param name="objArray">Two-dimension data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportTwoDimensionArray(System.Object[0:,0:],System.Object[0:,0:],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports a two-dimension array of data into a worksheet.
            </summary>
      <param name="objArray">Two-dimension data array.</param>
      <param name="styles">Two-dimension data style.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportTwoDimensionArray(System.Object[0:,0:],System.Object[0:,0:],System.Int32,System.Int32,Aspose.Cells.TxtLoadOptions)">
      <summary>
            Imports a two-dimension array of data into a worksheet.
            </summary>
      <param name="objArray">Two-dimension data array.</param>
      <param name="styles">Two-dimension data style.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="opts">Options for converting string values</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportObjectArray(System.Object[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of data into a worksheet.
            </summary>
      <param name="objArray">Data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArrayList(System.Collections.ArrayList,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an arraylist of data into a worksheet.
            </summary>
      <param name="arrayList">Data arraylist.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportObjectArray(System.Object[],System.Int32,System.Int32,System.Boolean,System.Int32)">
      <summary>
            Imports an array of data into a worksheet.
            </summary>
      <param name="objArray">Data array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
      <param name="skip">Skipped number of rows or columns.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.String[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of string into a worksheet.
            </summary>
      <param name="stringArray">Two-dimension string array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportFormulaArray(System.String[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of formula into a worksheet.
            </summary>
      <param name="stringArray">Formula array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.String[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of string into a worksheet.
            </summary>
      <param name="stringArray">String array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Int32[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of integer into a worksheet.
            </summary>
      <param name="intArray">Two-dimension integer array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Int32[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of integer into a worksheet.
            </summary>
      <param name="intArray">Integer array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Double[0:,0:],System.Int32,System.Int32)">
      <summary>
            Imports a two-dimension array of double into a worksheet.
            </summary>
      <param name="doubleArray">Two-dimension double array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportArray(System.Double[],System.Int32,System.Int32,System.Boolean)">
      <summary>
            Imports an array of double into a worksheet.
            </summary>
      <param name="doubleArray">Double array.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="isVertical">Specifies to import data vertically or horizontally.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.TextToColumns(System.Int32,System.Int32,System.Int32,Aspose.Cells.TxtLoadOptions)">
      <summary>
            Splits the text in the column to columns.
            </summary>
      <param name="row">The row index.</param>
      <param name="column">The column index.</param>
      <param name="totalRows">The number of rows.</param>
      <param name="options">The split options.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCSV(System.String,System.String,System.Boolean,System.Int32,System.Int32)">
      <summary>
            Import a CSV file to the cells.
            </summary>
      <param name="fileName">The CSV file name.</param>
      <param name="spliter">The spliter</param>
      <param name="convertNumericData"> Whether the string in text file is converted to numeric data.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCSV(System.IO.Stream,System.String,System.Boolean,System.Int32,System.Int32)">
      <summary>
            Import a CSV file to the cells.
            </summary>
      <param name="stream">The CSV file stream.</param>
      <param name="spliter">The spliter</param>
      <param name="convertNumericData"> Whether the string in text file is converted to numeric data.</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCSV(System.String,Aspose.Cells.TxtLoadOptions,System.Int32,System.Int32)">
      <summary>
            Import a CSV file to the cells.
            </summary>
      <param name="fileName">The CSV file name.</param>
      <param name="options">The load options for reading text file</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCSV(System.IO.Stream,Aspose.Cells.TxtLoadOptions,System.Int32,System.Int32)">
      <summary>
            Import a CSV file to the cells.
            </summary>
      <param name="stream">The CSV file stream.</param>
      <param name="options">The load options for reading text file</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
    </member>
    <member name="P:Aspose.Cells.Cells.PreserveString">
      <summary>
            Gets or sets a value indicating whether all worksheet values are preserved as strings. 
            Default is false.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.Merge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Merges a specified range of cells into a single cell. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="totalRows">Number of rows(one based)</param>
      <param name="totalColumns">Number of columns(one based)</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.Merge(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Merges a specified range of cells into a single cell. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="totalRows">Number of rows(one based)</param>
      <param name="totalColumns">Number of columns(one based)</param>
      <param name="mergeConflict">Merge conflict merged ranges.</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            If mergeConflict is true and the merged range conflicts with other merged cells,
            other merged cells will be  automatically removed.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.Merge(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean,System.Boolean)">
      <summary>
            Merges a specified range of cells into a single cell. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="totalRows">Number of rows(one based)</param>
      <param name="totalColumns">Number of columns(one based)</param>
      <param name="checkConflict">Indicates whether check the merged cells intersects other merged cells</param>
      <param name="mergeConflict">Merge conflict merged ranges.</param>
      <remarks>
            Reference the merged cell via the address of the upper-left cell in the range. 
            If mergeConflict is true and the merged range conflicts with other merged cells,
            other merged cells will be  automatically removed.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.UnMerge(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Unmerges a specified range of merged cells. 		
            </summary>
      <param name="firstRow">First row of this range(zero based)</param>
      <param name="firstColumn">First column of this range(zero based)</param>
      <param name="totalRows">Number of rows(one based)</param>
      <param name="totalColumns">Number of columns(one based)</param>
    </member>
    <member name="M:Aspose.Cells.Cells.HideRow(System.Int32)">
      <summary>
            Hides a row.
            </summary>
      <param name="row">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UnhideRow(System.Int32,System.Double)">
      <summary>
            Unhides a row.
            </summary>
      <param name="row">Row index.</param>
      <param name="height">Row height. The row's height will be changed only when the row is hidden and given height value is positive.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.HideRows(System.Int32,System.Int32)">
      <summary>
            Hides multiple rows.
            </summary>
      <param name="row">The row index.</param>
      <param name="totalRows">The row number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UnhideRows(System.Int32,System.Int32,System.Double)">
      <summary>
            Unhides the hidden rows.
            </summary>
      <param name="row">The row index.</param>
      <param name="totalRows">The row number.</param>
      <param name="height">Row height. The row's height will be changed only when the row is hidden and given height value is positive.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetRowHeightPixel(System.Int32,System.Int32)">
      <summary>
            Sets row height in unit of pixels.
            </summary>
      <param name="row">Row index.</param>
      <param name="pixels">Number of pixels.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetRowHeightInch(System.Int32,System.Double)">
      <summary>
            Sets row height in unit of inches.
            </summary>
      <param name="row">Row index.</param>
      <param name="inches">Number of inches.It should be between 0 and 409.5/72.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetRowHeight(System.Int32,System.Double)">
      <summary>
            Sets the height of the specified row.
            </summary>
      <param name="row">Row index.</param>
      <param name="height">Height of row.In unit of point It should be between 0 and 409.5.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRowHeight(System.Int32)">
      <summary>
            Gets the height of a specified row.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.HideColumn(System.Int32)">
      <summary>
            Hides a column.
            </summary>
      <param name="column">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UnhideColumn(System.Int32,System.Double)">
      <summary>
            Unhides a column
            </summary>
      <param name="column">Column index.</param>
      <param name="width">Column width.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.HideColumns(System.Int32,System.Int32)">
      <summary>
            Hide multiple columns.
            </summary>
      <param name="column">Column index.</param>
      <param name="totalColumns">Column number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UnhideColumns(System.Int32,System.Int32,System.Double)">
      <summary>
            Unhide multiple columns.
            </summary>
      <param name="column">Column index.</param>
      <param name="totlaColumns">Column number</param>
      <param name="width">Column width.</param>
      <remarks>
            Only applies the column width to the hidden columns.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRowHeightPixel(System.Int32)">
      <summary>
            Gets the height of a specified row in unit of pixel.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetRowHeightInch(System.Int32)">
      <summary>
            Gets the height of a specified row in unit of inches.
            </summary>
      <param name="row">Row index</param>
      <returns>Height of row</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.SetColumnWidthPixel(System.Int32,System.Int32)">
      <summary>
            Sets column width in unit of pixels.
            </summary>
      <param name="column">Column index.</param>
      <param name="pixel">Number of pixels.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetColumnWidthInch(System.Int32,System.Double)">
      <summary>
            Sets column width in unit of inches.
            </summary>
      <param name="column">Column index.</param>
      <param name="inches">Number of inches.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.SetColumnWidth(System.Int32,System.Double)">
      <summary>
            Sets the width of the specified column.
            </summary>
      <param name="column">Column index.</param>
      <param name="width">Width of column.Column width must be between 0 and 255.</param>
      <remarks>To hide a column, sets column width to zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetViewColumnWidthPixel(System.Int32)">
      <summary>
            Get the width in different view type.
            </summary>
      <param name="column">The column index.</param>
      <returns>the column width in unit of pixels</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetColumnWidthPixel(System.Int32)">
      <summary>
            Gets the width of the specified column, in units of pixel.
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column in normal view.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetColumnWidthInch(System.Int32)">
      <summary>
            Gets the width of the specified column, in units of inches.
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetColumnWidth(System.Int32)">
      <summary>
            Gets the width of the specified column
            </summary>
      <param name="column">Column index</param>
      <returns>Width of column</returns>
    </member>
    <member name="P:Aspose.Cells.Cells.MinRow">
      <summary>
            Minimum row index of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxRow">
      <summary>
            Maximum row index of cell which contains data or style.
            </summary>
      <remarks>
            Return -1 if there is no cell whiche contains data or style in the worksheet.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.MinColumn">
      <summary>
            Minimum column index of cell which contains data or style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxColumn">
      <summary>
            Maximum column index of cell which contains data or style.
            </summary>
      <remarks>
            Return -1 if ther is not cell.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.MinDataRow">
      <summary>
            Minimum row index of cell which contains data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxDataRow">
      <summary>
            Maximum row index of cell which contains data.
            </summary>
      <remarks>
            Return -1 if there is no cell which contains data.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.MinDataColumn">
      <summary>
            Minimum column index of cell which contains data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.MaxDataColumn">
      <summary>
            Maximum column index of cell which contains data.
            </summary>
      <remarks>
            Return -1 if there is not cell which contains data.
            Don't call this property repeatedly. This property will iterate all cells in a worksheet.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetLastDataRow(System.Int32)">
      <summary>
            Gets the last row index of cell which contains data in the specified column.
            </summary>
      <param name="column">Column index.</param>
      <returns>last row index.</returns>
    </member>
    <member name="P:Aspose.Cells.Cells.IsDefaultRowHeightMatched">
      <summary>
            Indicates that row height and default font height matches
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.IsDefaultRowHidden">
      <summary>
            Indicates whether the row is defaultly hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Columns">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Column" /> objects that represents the individual columns in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.ApplyColumnStyle(System.Int32,Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formats for a whole column.
            </summary>
      <param name="column">The column index.</param>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ApplyRowStyle(System.Int32,Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formats for a whole row.
            </summary>
      <param name="row">The row index.</param>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formats for a whole worksheet.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyColumn(Aspose.Cells.Cells,System.Int32,System.Int32)">
      <summary>
            Copies data and formats of a whole column.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formats to copy.</param>
      <param name="sourceColumnIndex">Source column index.</param>
      <param name="destinationColumnIndex">Destination column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyColumns(Aspose.Cells.Cells,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies data and formats of a whole column.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formats to copy.</param>
      <param name="sourceColumnIndex">Source column index.</param>
      <param name="destinationColumnIndex">Destination column index.</param>
      <param name="columnNumber">The copied column number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyColumns(Aspose.Cells.Cells,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies data and formats of the whole columns.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formats to copy.</param>
      <param name="sourceColumnIndex">Source column index.</param>
      <param name="sourceTotalColumns">The number of the source columns.</param>
      <param name="destinationColumnIndex">Destination column index.</param>
      <param name="destinationTotalColumns">The number of the destination columns.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyRow(Aspose.Cells.Cells,System.Int32,System.Int32)">
      <summary>
            Copies data and formats of a whole row.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formats to copy.</param>
      <param name="sourceRowIndex">Source row index.</param>
      <param name="destinationRowIndex">Destination row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyRows(Aspose.Cells.Cells,System.Int32,System.Int32,System.Int32)">
      <summary>
            Copies data and formats of some whole rows.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formats to copy.</param>
      <param name="sourceRowIndex">Source row index.</param>
      <param name="destinationRowIndex">Destination row index.</param>
      <param name="rowNumber">The copied row number.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.CopyRows(Aspose.Cells.Cells,System.Int32,System.Int32,System.Int32,Aspose.Cells.CopyOptions)">
      <summary>
            Copies data and formats of some whole rows.
            </summary>
      <param name="sourceCells">Source Cells object contains data and formats to copy.</param>
      <param name="sourceRowIndex">Source row index.</param>
      <param name="destinationRowIndex">Destination row index.</param>
      <param name="rowNumber">The copied row number.</param>
      <param name="copyOptions">The copy options.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GetGroupedRowOutlineLevel(System.Int32)">
      <summary>
            Gets the outline level (zero-based) of the row.
            </summary>
      <param name="rowIndex">The row index.</param>
      <returns>The outline level (zero-based) of the row.</returns>
      <remarks>If the row is not grouped, returns zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetGroupedColumnOutlineLevel(System.Int32)">
      <summary>
            Gets the outline level (zero-based) of the column.
            </summary>
      <param name="columnIndex">The column index</param>
      <returns>The outline level of the column</returns>
      <remarks>If the column is not grouped, returns zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GetMaxGroupedColumnOutlineLevel">
      <summary>
            Gets the max grouped column outline level (zero-based).
            </summary>
      <returns> The max grouped column outline level(zero-based)</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetMaxGroupedRowOutlineLevel">
      <summary>
            Gets the max grouped row outline level (zero-based).
            </summary>
      <returns> The max grouped row outline level (zero-based)</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ShowGroupDetail(System.Boolean,System.Int32)">
      <summary>
            Uncollapses the grouped rows/columns. 
            </summary>
      <param name="isVertical">True, uncollapse the grouped rows.</param>
      <param name="index">The row/column index</param>
    </member>
    <member name="M:Aspose.Cells.Cells.HideGroupDetail(System.Boolean,System.Int32)">
      <summary>
            Collapses the grouped rows/columns. 
            </summary>
      <param name="isVertical">True, collapse the grouped rows.</param>
      <param name="index">The row/column index</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UngroupColumns(System.Int32,System.Int32)">
      <summary>
            Ungroups columns.
            </summary>
      <param name="firstIndex">The first column index to be ungrouped.</param>
      <param name="lastIndex">The last column index to be ungrouped.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupColumns(System.Int32,System.Int32)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstIndex">The first column index to be grouped.</param>
      <param name="lastIndex">The last column index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Groups columns.
            </summary>
      <param name="firstIndex">The first column index to be grouped.</param>
      <param name="lastIndex">The last column index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped columns are hidden.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UngroupRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Ungroups rows.
            </summary>
      <param name="firstIndex">The first row index to be ungrouped.</param>
      <param name="lastIndex">The last row index to be ungrouped.</param>
      <param name="isAll">True, removes all grouped info.Otherwise, remove the outter group info.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.UngroupRows(System.Int32,System.Int32)">
      <summary>
            Ungroups rows.
            </summary>
      <param name="firstIndex">The first row index to be ungrouped.</param>
      <param name="lastIndex">The last row index to be ungrouped.</param>
      <remarks>
            Only removes outter group info.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstIndex">The first row index to be grouped.</param>
      <param name="lastIndex">The last row index to be grouped.</param>
      <param name="isHidden">Specifies if the grouped columns are hidden.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.GroupRows(System.Int32,System.Int32)">
      <summary>
            Groups rows.
            </summary>
      <param name="firstIndex">The first row index to be grouped.</param>
      <param name="lastIndex">The last row index to be grouped.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteColumn(System.Int32,System.Boolean)">
      <summary>
            Deletes a column.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteColumn(System.Int32)">
      <summary>
            Deletes a column.
            </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Deletes several columns.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="totalColumns">Number of columns to be deleted.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.IsDeletingRangeEnabled(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Check whether the range could be deleted.
            </summary>
      <param name="startRow">The start row index of the range.</param>
      <param name="startColumn">The start column idnex of the range.</param>
      <param name="totalRows">The number of the rows in the range.</param>
      <param name="totalColumns">The number of the columns in the range.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRows(System.Int32,System.Int32)">
      <summary>
            Deletes several rows.
            </summary>
      <param name="rowIndex">The first row index to be deleted.</param>
      <param name="totalRows">Number of rows to be deleted.</param>
      <remarks>
            If the deleted range contains the top part (not whole) of the table(ListObject),
            the ranged could not be deleted and nothing will be done.It works as MS Excel.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRow(System.Int32)">
      <summary>
            Deletes a row.
            </summary>
      <param name="rowIndex">Row index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Deletes multiple rows in the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="totalRows">Number of rows to be deleted.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteBlankColumns">
      <summary>
            Delete all blank columns which do not contain any data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteBlankColumns(Aspose.Cells.DeleteOptions)">
      <summary>
            Delete all blank columns which do not contain any data.
            </summary>
      <param name="options">The options of deleting range.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.IsBlankColumn(System.Int32)">
      <summary>
            Checks whether given column is blank(does not contain any data).
            </summary>
      <param name="columnIndex">the column index</param>
      <returns>true if given column does not contain any data</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteBlankRows">
      <summary>
            Delete all blank rows which do not contain any data.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteBlankRows(Aspose.Cells.DeleteOptions)">
      <summary>
            Delete all blank rows which do not contain any data.
            </summary>
      <param name="options">The options of deleting range.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertColumns(System.Int32,System.Int32)">
      <summary>
            Inserts some columns into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="totalColumns">The number of columns.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertColumns(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Inserts some columns into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="totalColumns">The number of columns.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertColumn(System.Int32,System.Boolean)">
      <summary>
            Inserts a new column into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertColumn(System.Int32)">
      <summary>
            Inserts a new column into the worksheet.
            </summary>
      <param name="columnIndex">Column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRows(System.Int32,System.Int32,System.Boolean)">
      <summary>
            Inserts multiple rows into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="totalRows">Number of rows to be inserted.</param>
      <param name="updateReference">Indicates if references in other worksheets will be updated.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRows(System.Int32,System.Int32)">
      <summary>
            Inserts multiple rows into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
      <param name="totalRows">Number of rows to be inserted.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRow(System.Int32)">
      <summary>
            Inserts a new row into the worksheet.
            </summary>
      <param name="rowIndex">Row index.</param>
    </member>
    <member name="P:Aspose.Cells.Cells.Ranges">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Range" /> objects created at run time.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearRange(Aspose.Cells.CellArea)">
      <summary>
            Clears contents and formatting of a range.
            </summary>
      <param name="range">Range to be cleared.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearRange(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears contents and formatting of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearContents(Aspose.Cells.CellArea)">
      <summary>
            Clears contents of a range.
            </summary>
      <param name="range">Range to be cleared.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearContents(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears contents of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearFormats(Aspose.Cells.CellArea)">
      <summary>
            Clears formatting of a range.
            </summary>
      <param name="range">Range to be cleared.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ClearFormats(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Clears formatting of a range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
    </member>
    <member name="P:Aspose.Cells.Cells.End">
      <summary>
            Gets the last cell in this worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.LastCell property. 
            This property will be removed 12 months later since December 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.LastCell">
      <summary>
            Gets the last cell in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.LinkToXmlMap(System.String,System.Int32,System.Int32,System.String)">
      <summary>
             Link to a xml map.
             </summary>
      <param name="mapName">name of xml map</param>
      <param name="row">row of the destination cell</param>
      <param name="column">column of the destination cell</param>
      <param name="path">path of xml element in xml map</param>
             e.g. A xml map element structure:
             
                         -RootElement
                             |-Attribute1
                             |-SubElement
                                 |-Attribute2
                                 |-Attribute3
            
             To link "Attribute1", path is "/RootElement/Attribute1"
             To link "Attribute2", path is "/RootElement/SubElement/Attribute2"
             To link whole "SubElement", path is "/RootElement/SubElement"
        </member>
    <member name="P:Aspose.Cells.Cells.MaxDisplayRange">
      <summary>
            Gets the max range which includes data, merged cells and shapes.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Cells.Start">
      <summary>
            Gets the first cell in this worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Cells.FirstCell property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Cells.FirstCell">
      <summary>
            Gets the first cell in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.FindFormula(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="formula">The formula to search for.</param>
      <param name="previousCell">Previous cell with the same formula. This parameter can be set to null if searching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>This method is supported in Standard and above versions of Aspose.Cells.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindFormulaContains(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with formla which contains the input string.
            </summary>
      <param name="formula">The formula to search for.</param>
      <param name="previousCell">Previous cell with the same formula. This parameter can be set to null if searching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>This method is supported in Standard and above versions of Aspose.Cells.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if searching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,Aspose.Cells.CellArea)">
      <summary>
            Finds the cell with the input string in the specified area.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if searching from the start.</param>
      <param name="area">Searched area.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,Aspose.Cells.CellArea,System.Boolean)">
      <summary>
            Finds the cell with the input string in the specified area.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if searching from the start.</param>
      <param name="area">Searched area.</param>
      <param name="upDown">Search order. True: Up. False: Down.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,System.Boolean)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if searching from the start.</param>
      <param name="upDown">Search order. True: Up. False: Down.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindString(System.String,Aspose.Cells.Cell,Aspose.Cells.FindOptions)">
      <summary>
            Finds the cell with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if searching from the start.</param>
      <param name="findOptions">Sets the find options.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringStartsWith(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell starting with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if searching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringEndsWith(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell ending with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if searching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringContains(System.String,Aspose.Cells.Cell)">
      <summary>
            Finds the cell containing with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if searching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringContains(System.String,Aspose.Cells.Cell,System.Boolean,Aspose.Cells.CellArea)">
      <summary>
            Finds the cell containing with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if searching from the start.</param>
      <param name="isCaseSensitive">Indicates if the searched string is case sensitive.</param>
      <param name="area">Searched area.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindStringContains(System.String,Aspose.Cells.Cell,System.Boolean)">
      <summary>
            Finds the cell containing with the input string.
            </summary>
      <param name="inputString">The string to search for.</param>
      <param name="previousCell">Previous cell with the same string. This parameter can be set to null if searching from the start.</param>
      <param name="isCaseSensitive">Indicates if the searched string is case sensitive.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindNumber(System.Int32,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input integer.
            </summary>
      <param name="inputNumber">The integer to search for.</param>
      <param name="previousCell">Previous cell with the same integer. This parameter can be set to null if searching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.FindNumber(System.Double,Aspose.Cells.Cell)">
      <summary>
            Finds the cell with the input double.
            </summary>
      <param name="inputNumber">The double to search for.</param>
      <param name="previousCell">Previous cell with the same double. This parameter can be set to null if searching from the start.</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.
            NOTE: This member is now obsolete. Instead, 
            please use Cells.Find(object,Cell,FindOptions) method. 
            This member will be removed 12 months later since May 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.Find(System.Object,Aspose.Cells.Cell,Aspose.Cells.FindOptions)">
      <summary>
            Finds the cell containing with the input object.
            </summary>
      <param name="what">The object to search for.
            The type should be int,double,DateTime,string,bool.
            </param>
      <param name="previousCell">Previous cell with the same object. 
            This parameter can be set to null if searching from the start.</param>
      <param name="findOptions">Find options</param>
      <returns>Cell object.</returns>
      <remarks>Returns null (Nothing) if no cell is found.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInRow(System.Int32)">
      <summary>
            Gets the last cell in this row.
            </summary>
      <param name="rowIndex">Row index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInColumn(System.Int16)">
      <summary>
            Gets the last cell in this column.
            </summary>
      <param name="columnIndex">Column index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInColumn(System.Int32,System.Int32,System.Int16,System.Int16)">
      <summary>
            Gets the last cell with maximum column index in this range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.EndCellInRow(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets the last cell with maximum row index in this range.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
      <returns>Cell object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.MoveRange(Aspose.Cells.CellArea,System.Int32,System.Int32)">
      <summary>
            Moves the range.
            </summary>
      <param name="sourceArea">The range which should be moved.</param>
      <param name="destRow">The dest row.</param>
      <param name="destColumn">The dest column.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRange(Aspose.Cells.CellArea,System.Int32,Aspose.Cells.ShiftType,System.Boolean)">
      <summary>
            Inserts a range of cells and shift cells according to the shift option.
            </summary>
      <param name="area">Shift area.</param>
      <param name="shiftNumber">Number of rows or columns to be inserted.</param>
      <param name="shiftType">Shift cells option.</param>
      <param name="updateReference">Indicates if update references in other worksheets.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRange(Aspose.Cells.CellArea,Aspose.Cells.ShiftType)">
      <summary>
            Inserts a range of cells and shift cells according to the shift option.
            </summary>
      <param name="area">Shift area.</param>
      <param name="shiftType">Shift cells option.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.InsertRange(Aspose.Cells.CellArea,System.Int32,Aspose.Cells.ShiftType)">
      <summary>
            Inserts a range of cells and shift cells according to the shift option.
            </summary>
      <param name="area">Shift area.</param>
      <param name="shiftNumber">Number of rows or columns to be inserted.</param>
      <param name="shiftType">Shift cells option.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.DeleteRange(System.Int32,System.Int32,System.Int32,System.Int32,Aspose.Cells.ShiftType)">
      <summary>
            Deletes a range of cells and shift cells according to the shift option.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endRow">End row index.</param>
      <param name="endColumn">End column index.</param>
      <param name="shiftType">Shift cells option.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportArray(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Exports data in the <see cref="T:Aspose.Cells.Cells" /> collection to a two-dimension array object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be exported</param>
      <param name="totalColumns">Number of columns to be exported</param>
      <returns>Exported cell value array object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ExportTypeArray(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Exports cell value type in the <see cref="T:Aspose.Cells.Cells" /> collection to a two-dimension array object.
            </summary>
      <param name="firstRow">The row number of the first cell to export out.</param>
      <param name="firstColumn">The column number of the first cell to export out.</param>
      <param name="totalRows">Number of rows to be exported.</param>
      <param name="totalColumns">Number of columns to be exported.</param>
      <returns>Exported CellValuetype array object.</returns>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCustomObjects(System.Collections.ICollection,System.String[],System.Boolean,System.Int32,System.Int32,System.Int32,System.Boolean,System.String,System.Boolean)">
      <summary>
            Imports custom objects.
            </summary>
      <param name="list">The custom object</param>
      <param name="propertyNames">The property names.If it is null,we will import all properties of the object.</param>
      <param name="isPropertyNameShown">
            Indicates whether the property name will be imported to the first row.
            </param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="rowNumber">Number of rows to be imported.</param>
      <param name="insertRows">Indicates whether extra rows are added to fit data.</param>
      <param name="dateFormatString">Date format string for cells.</param>
      <param name="convertStringToNumber">Indicates if this method will try to convert string to number.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>The custom objects should be the same type.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.ImportCustomObjects(System.Collections.ICollection,System.Int32,System.Int32,Aspose.Cells.ImportTableOptions)">
      <summary>
            Imports custom objects.
            </summary>
      <param name="list">The custom object</param>
      <param name="firstRow">The row number of the first cell to import in.</param>
      <param name="firstColumn">The column number of the first cell to import in.</param>
      <param name="options"> The import options.</param>
      <returns>Total number of rows imported.</returns>
      <remarks>The custom objects should be the same type.</remarks>
    </member>
    <member name="M:Aspose.Cells.Cells.Subtotal(Aspose.Cells.CellArea,System.Int32,Aspose.Cells.ConsolidationFunction,System.Int32[])">
      <summary>
            Creates subtotals for the range.
            </summary>
      <param name="ca">The range</param>
      <param name="groupBy">The field to group by, as a zero-based integer offset</param>
      <param name="function">The subtotal function.</param>
      <param name="totalList">An array of zero-based field offsets, indicating the fields to which the subtotals are added.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.Subtotal(Aspose.Cells.CellArea,System.Int32,Aspose.Cells.ConsolidationFunction,System.Int32[],System.Boolean,System.Boolean,System.Boolean)">
      <summary>
            Creates subtotals for the range.
            </summary>
      <param name="ca">The range</param>
      <param name="groupBy">The field to group by, as a zero-based integer offset</param>
      <param name="function">The subtotal function.</param>
      <param name="totalList">An array of zero-based field offsets, indicating the fields to which the subtotals are added.</param>
      <param name="replace">Indicates whether replace the current subtotals</param>
      <param name="pageBreaks">Indicates whether add page break between groups</param>
      <param name="summaryBelowData">Indicates whether add summarry below data.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.RemoveFormulas">
      <summary>
            Removes all formula and replaces with the value of the formula.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.RemoveDuplicates(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Remove duplicate values in the range.
            </summary>
      <param name="startRow">The start row.</param>
      <param name="startColumn">The start column</param>
      <param name="endRow">The end row index.</param>
      <param name="endColumn">The end column index.</param>
    </member>
    <member name="M:Aspose.Cells.Cells.ConvertStringToNumericValue">
      <summary>
            Converts string data in cells to numeric value if possible.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Cells.GetDependents(System.Boolean,System.Int32,System.Int32)">
      <summary>
            Get all cells which refer to the specific cell.
            </summary>
      <param name="isAll">Indicates whether check other worksheets</param>
      <param name="row">The row index.</param>
      <param name="column">The column index.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Cells.GetCellStyle(System.Int32,System.Int32)">
      <summary>
            Get the style of given cell.
            </summary>
      <param name="row">row index</param>
      <param name="column">column</param>
      <returns>the style of given cell.</returns>
    </member>
    <member name="T:Aspose.Cells.CellsException">
      <summary>
            The exception that is thrown when Aspose.Cells specified error occurs.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CellsException.#ctor(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
      <summary>
      </summary>
      <param name="info">
      </param>
      <param name="context">
      </param>
    </member>
    <member name="P:Aspose.Cells.CellsException.Code">
      <summary>
            Represenets custom exception code.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CellValueType">
      <summary>
            Specifies a cell value type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsBool">
      <summary>
            Cell value is boolean.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsDateTime">
      <summary>
            Cell value is datetime.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsError">
      <summary>
            Cell contains error value
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsNull">
      <summary>
            Blank cell.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsNumeric">
      <summary>
            Cell value is numeric.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsString">
      <summary>
            Cell value is string.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CellValueType.IsUnknown">
      <summary>
            Cell value type is unknown.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FontSetting">
      <summary>
             Represents a range of characters within the cell text.
             </summary>
      <example>
        <code>
             
             [C#]
            
             //Instantiating a Workbook object
             Workbook workbook = new Workbook();
             
             //Adding a new worksheet to the Excel object
             workbook.Worksheets.Add();
             
             //Obtaining the reference of the newly added worksheet by passing its sheet index
             Worksheet worksheet = workbook.Worksheets[0];
             
             //Accessing the "A1" cell from the worksheet
             Aspose.Cells.Cell cell = worksheet.Cells["A1"];
             
             //Adding some value to the "A1" cell
             cell.PutValue("Visit Aspose!");
             
             //getting charactor
             FontSetting charactor = cell.Characters(6, 7);
             
             //Setting the font of selected characters to bold
             charactor.Font.IsBold = true;
             
             //Setting the font color of selected characters to blue
             charactor.Font.Color = Color.Blue;
             
             //Saving the Excel file
             workbook.Save("D:\\book1.xls");
             
             [VB.NET]
             
             'Instantiating a Workbook object
             Dim workbook As New Workbook()
             
             'Adding a new worksheet to the Excel object
             workbook.Worksheets.Add()
             
             'Obtaining the reference of the newly added worksheet by passing its sheet index
             Dim worksheet As Worksheet = workbook.Worksheets(0)
             
             'Accessing the "A1" cell from the worksheet
             Dim cell As Aspose.Cells.Cell = worksheet.Cells("A1")
             
             'Adding some value to the "A1" cell
             cell.PutValue("Visit Aspose!")
             
             'getting charactor
             Dim charactor As FontSetting = cell.Characters(6, 7)
             
             'Setting the font of selected characters to bold
             charactor.Font.IsBold = True
             
             'Setting the font color of selected characters to blue
             charactor.Font.Color = Color.Blue
             
             'Saving the Excel file
             workbook.Save("D:\book1.xls")
              
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.FontSetting.Type">
      <summary>
            Gets the type of text node.
            </summary>
    </member>
    <member name="M:Aspose.Cells.FontSetting.#ctor(System.Int32,System.Int32,Aspose.Cells.WorksheetCollection)">
      <summary>
      </summary>
      <param name="startIndex">
      </param>
      <param name="length">
      </param>
      <param name="sheets">
      </param>
    </member>
    <member name="P:Aspose.Cells.FontSetting.StartIndex">
      <summary>
            Gets the start index of the characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FontSetting.Length">
      <summary>
            Gets the length of the characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FontSetting.Font">
      <summary>
            Returns the font of this object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FontSetting.TextOptions">
      <summary>
            Returns the text options.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Column">
      <summary>
            Represents a single column in a worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the first worksheet
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Add new Style to Workbook
            Style style = workbook.Styles[workbook.Styles.Add()];
            
            //Setting the background color to Blue
            style.BackgroundColor = Color.Blue;
            
            //Setting the foreground color to Red
            style.ForegroundColor= Color.Red;
            
            //setting Background Pattern
            style.Pattern = BackgroundType.DiagonalStripe;
            
            //New Style Flag
            StyleFlag styleFlag = new StyleFlag();
            
            //Set All Styles
            styleFlag.All = true;
            
            //Get first Column
            Column column = worksheet.Cells.Columns[0];
            
            //Apply Style to first Column
            column.ApplyStyle(style, styleFlag);
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the first worksheet
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Add new Style to Workbook
            Dim style As Style = workbook.Styles(workbook.Styles.Add())
            
            'Setting the background color to Blue
            style.BackgroundColor = Color.Blue
            
            'Setting the foreground color to Red
            style.ForegroundColor = Color.Red
            
            'setting Background Pattern
            style.Pattern = BackgroundType.DiagonalStripe
            
            'New Style Flag
            Dim styleFlag As New StyleFlag()
            
            'Set All Styles
            styleFlag.All = True
            
            'Get first Column
            Dim column As Column = worksheet.Cells.Columns(0)
            
            'Apply Style to first Column
            column.ApplyStyle(style, styleFlag)
            
            'Saving the Excel file
            workbook.Save("D:\book1.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Column.Index">
      <summary>
            Gets the index of this column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Column.Width">
      <summary>
            Gets and sets the column width in unit of characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Column.GroupLevel">
      <summary>
            Gets the group level of the column.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Column.IsHidden">
      <summary>
            Indicates whether the column is hidden.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Column.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formats for a whole column.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="P:Aspose.Cells.Column.Style">
      <summary>
            Gets the style of this column.
            </summary>
      <remarks>
            You have to call Column.ApplyStyle() method to save your changing with the row style,
            otherwise it will not effect.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.ColumnCollection">
      <summary>
            Collects the <seealso cref="T:Aspose.Cells.Column" /> objects that represent the individual columns in a worksheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the first worksheet
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Add new Style to Workbook
            Style style = workbook.Styles[workbook.Styles.Add()];
            
            //Setting the background color to Blue
            style.ForegroundColor = Color.Blue;
            
            //setting Background Pattern
            style.Pattern = BackgroundType.Solid;
            
            //New Style Flag
            StyleFlag styleFlag = new StyleFlag();
            
            //Set All Styles
            styleFlag.All = true;
            
            //Change the default width of first ten columns
            for (int i = 0; i &lt; 10; i++)
            {
                worksheet.Cells.Columns[i].Width = 20;
            }
            
            //Get the Column with non default formatting
            ColumnCollection columns = worksheet.Cells.Columns;
            
            foreach (Column column in columns)
            {
                //Apply Style to first ten Columns
                column.ApplyStyle(style, styleFlag);
            }
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the first worksheet
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Add new Style to Workbook
            Dim style As Style = workbook.Styles(workbook.Styles.Add())
            
            'Setting the background color to Blue
            style.ForegroundColor = Color.Blue
            
            'setting Background Pattern
            style.Pattern = BackgroundType.Solid
            
            'New Style Flag
            Dim styleFlag As New StyleFlag()
            
            'Set All Styles
            styleFlag.All = True
            
            'Change the default width of first ten columns
            For i As Integer = 0 To 9
                worksheet.Cells.Columns(i).Width = 20
            Next i
            
            'Get the Column with non default formatting
            Dim columns As ColumnCollection = worksheet.Cells.Columns
            
            For Each column As Column In columns
                'Apply Style to first ten Columns
                column.ApplyStyle(style, styleFlag)
            Next column
            
            'Saving the Excel file
            workbook.Save("D:\book1.xls")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ColumnCollection.GetByIndex(System.Int32)">
      <summary>
            Gets the column object by the index.
            </summary>
      <param name="index">
      </param>
      <returns>Returns the column object.</returns>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Columns.GetColumnByIndex() method.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.ColumnCollection.GetColumnByIndex(System.Int32)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Column" /> object by the position in the list.
            </summary>
      <param name="index">The position in the list.</param>
      <returns>Returns the column object.</returns>
    </member>
    <member name="P:Aspose.Cells.ColumnCollection.Item(System.Int32)">
      <summary>
            Gets a <seealso cref="T:Aspose.Cells.Column" /> object by column index. The Column object of given column index will be instantiated if it does not exist before.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ConditionalFormattingCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.FormatCondition" /> objects.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            Worksheet sheet = workbook.Worksheets[0];
            
            //Get Conditional Formattings
            ConditionalFormattingCollection cformattings = sheet.ConditionalFormattings;
            
            //Adds an empty conditional formatting
            int index = cformattings.Add();
            
            //Get newly added Conditional formatting
            FormatConditionCollection fcs = cformattings[index];
            
            //Sets the conditional format range.
            CellArea ca = new CellArea();
            
            ca.StartRow = 0;
            
            ca.EndRow = 0;
            
            ca.StartColumn = 0;
            
            ca.EndColumn = 0;
            
            fcs.AddArea(ca);
            
            ca = new CellArea();
            
            ca.StartRow = 1;
            
            ca.EndRow = 1;
            
            ca.StartColumn = 1;
            
            ca.EndColumn = 1;
            
            fcs.AddArea(ca);
            
            //Add condition.
            int conditionIndex = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100");
            
            //Add condition.
            int conditionIndex2 = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100");
            
            //Sets the background color.
            FormatCondition fc = fcs[conditionIndex];
            
            fc.Style.BackgroundColor = Color.Red;
            
            //Saving the Excel file
            workbook.Save("C:\\output.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            Dim sheet As Worksheet = workbook.Worksheets(0)
            
            'Get Conditional Formattings
            Dim cformattings As ConditionalFormattingCollection = sheet.ConditionalFormattings
            
            'Adds an empty conditional formatting
            Dim index As Integer = cformattings.Add()
            
            'Get newly added Conditional formatting
            Dim fcs As FormatConditionCollection = cformattings(index)
            
            'Sets the conditional format range.
            Dim ca As New CellArea()
            
            ca.StartRow = 0
            
            ca.EndRow = 0
            
            ca.StartColumn = 0
            
            ca.EndColumn = 0
            
            fcs.AddArea(ca)
            
            ca = New CellArea()
            
            ca.StartRow = 1
            
            ca.EndRow = 1
            
            ca.StartColumn = 1
            
            ca.EndColumn = 1
            
            fcs.AddArea(ca)
            
            'Add condition.
            Dim conditionIndex As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100")
            
            'Add condition.
            Dim conditionIndex2 As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100")
            
            'Sets the background color.
            Dim fc As FormatCondition = fcs(conditionIndex)
            
            fc.Style.BackgroundColor = Color.Red
            
            'Saving the Excel file
            workbook.Save("C:\output.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingCollection.RemoveArea(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Remove all conditional formattings in the range.
            </summary>
      <param name="startRow">The start row of the range.</param>
      <param name="startColumn">The start column of the range.</param>
      <param name="totalRows">The number of rows of the range.</param>
      <param name="totalColumns">The number of columns of the range.</param>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingCollection.Copy(Aspose.Cells.ConditionalFormattingCollection)">
      <summary>
            Copies condtional formattings.
            </summary>
      <param name="cfs">The condtional formattings</param>
    </member>
    <member name="P:Aspose.Cells.ConditionalFormattingCollection.Item(System.Int32)">
      <summary>
            Gets the FormatConditions element at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
    </member>
    <member name="M:Aspose.Cells.ConditionalFormattingCollection.Add">
      <summary>
            Adds a FormatConditions to the collection.
            </summary>
      <returns>FormatConditions object index.</returns>
    </member>
    <member name="T:Aspose.Cells.ConsolidationFunction">
      <summary>
            Represents consolidation function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Sum">
      <summary>
            Represents Sum function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Count">
      <summary>
            Represents Count function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Average">
      <summary>
            Represents Average function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Max">
      <summary>
            Represents Max function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Min">
      <summary>
            Represents Min function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Product">
      <summary>
            Represents Product function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.CountNums">
      <summary>
            Represents Count Nums function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.StdDev">
      <summary>
            Represents StdDev function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.StdDevp">
      <summary>
            Represents StdDevp function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Var">
      <summary>
            Represents Var function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.Varp">
      <summary>
            Represents Varp function.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ConsolidationFunction.DistinctCount">
      <summary>
            Represents Distinct Count function.
            </summary>
      <remarks>
            Only valid for PivotTable with Data Module created since by 2013.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.HeaderFooterCommand">
      <summary>
            Represents the command of header/footer
            </summary>
    </member>
    <member name="P:Aspose.Cells.HeaderFooterCommand.Type">
      <summary>
            Gets the header/footer' command type .
            </summary>
    </member>
    <member name="P:Aspose.Cells.HeaderFooterCommand.Font">
      <summary>
            Gets the font of the command's value.
            </summary>
      <remarks>
            Useless for HeaderFooterCommandType.Picture.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.HeaderFooterCommand.Text">
      <summary>
            Gets the text of the command.
            </summary>
      <remarks>
            Only valid for HeaderFooterCommandType.Text.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.CopyOptions">
      <summary>
            Represents the copy options.
            </summary>
    </member>
    <member name="M:Aspose.Cells.CopyOptions.#ctor">
      <summary>
            CopyOptions constructor.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CopyOptions.ExtendToAdjacentRange">
      <summary>
            Indicates whether extend ranges when copying the range to adjacent range. 
            </summary>
      <remarks>
            If it's true, only extends the range of the hyperlink,not adding a new hyperlink when copying hyperlinks to adjacent rows.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.CopyOptions.CopyNames">
      <summary>
            Indicates whether copying the names.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CopyOptions.CopyInvalidFormulasAsValues">
      <summary>
            If the formula is not valid for the dest destination, only copy values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CopyOptions.ColumnCharacterWidth">
      <summary>
            Indicates whether copying column width in unit of characters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CopyOptions.ReferToSheetWithSameName">
      <summary>
            When copying a worksheet to another workbook and the worksheet contains the formulas which refer to other worksheets in MS Excel,
            the copied formulas should refer to source workbook. 
            But sometimes we have copied other worksheets and we hope the copied formulas refer to other worksheets with the name in the same workbook,
            please set this property as true.
            </summary>
      <remarks>
            The default value is true.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.CopyOptions.ReferToDestinationSheet">
      <summary>
            When copying the range in the same file and the chart refers to the source sheet,
            False means the copied chart's data source will not be changed.
            True means the copied chart's data source refers to the destination sheet.
            </summary>
      <remarks>
            The default value is false, it works as MS Excel.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.CountryCode">
      <summary>
            Represents Excel country identifiers.
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Default">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.USA">
      <summary>
            United States
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Canada">
      <summary>
            Canada
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.LatinAmeric">
      <summary>
            Latin America, except Brazil
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Russia">
      <summary>
            Russia
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Egypt">
      <summary>
            Egypt
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Greece">
      <summary>
            Greece
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Netherlands">
      <summary>
            Netherlands
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Belgium">
      <summary>
            Belgium
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.France">
      <summary>
            France
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Spain">
      <summary>
            Spain
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Hungary">
      <summary>
            Hungary
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Italy">
      <summary>
            Italy
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Switzerland">
      <summary>
            Switzerland
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Austria">
      <summary>
            Austria
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.UnitedKingdom">
      <summary>
            United Kingdom
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Denmark">
      <summary>
            Denmark
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Sweden">
      <summary>
            Sweden
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Norway">
      <summary>
            Norway
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Poland">
      <summary>
            Poland
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Germany">
      <summary>
            Germany
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Mexico">
      <summary>
            Mexico
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Brazil">
      <summary>
            Brazil
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Australia">
      <summary>
            Australia
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.NewZealand">
      <summary>
            New Zealand
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Thailand">
      <summary>
            Thailand
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Japan">
      <summary>
            Japan
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.SouthKorea">
      <summary>
            SouthKorea
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.VietNam">
      <summary>
            Viet Nam
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.China">
      <summary>
            People's Republic of China
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Turkey">
      <summary>
            Turkey
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.India">
      <summary>
            India
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Algeria">
      <summary>
            Algeria
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Morocco">
      <summary>
            Morocco
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Libya">
      <summary>
            Libya
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Portugal">
      <summary>
            Portugal
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Iceland">
      <summary>
            Iceland
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Finland">
      <summary>
            Finland
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Czech">
      <summary>
            Czech Republic
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Taiwan">
      <summary>
            Taiwan
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Lebanon">
      <summary>
            Lebanon
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Jordan">
      <summary>
            Jordan
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Syria">
      <summary>
            Syria
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Iraq">
      <summary>
            Iraq
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Kuwait">
      <summary>
            Kuwait
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Saudi">
      <summary>
            Saudi Arabia
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.UnitedArabEmirates">
      <summary>
            United Arab Emirates
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Israel">
      <summary>
            Israel
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Qatar">
      <summary>
            Qatar
            </summary>
    </member>
    <member name="F:Aspose.Cells.CountryCode.Iran">
      <summary>
            Iran
            </summary>
    </member>
    <member name="T:Aspose.Cells.DataSorter">
      <summary>
            Summary description for DataSorter.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiate a new Workbook object.
            Workbook workbook = new Workbook("C:\\Book1.xls");
            //Get the workbook datasorter object.
            DataSorter sorter = workbook.DataSorter;
            //Set the first order for datasorter object.
            sorter.Order1 = Aspose.Cells.SortOrder.Descending;
            //Define the first key.
            sorter.Key1 = 0;
            //Set the second order for datasorter object.
            sorter.Order2 = Aspose.Cells.SortOrder.Ascending;
            //Define the second key.
            sorter.Key2 = 1;
            //Create a cells area (range).
            CellArea ca = new CellArea();
            //Specify the start row index.
            ca.StartRow = 0;
            //Specify the start column index.
            ca.StartColumn = 0;
            //Specify the last row index.
            ca.EndRow = 13;
            //Specify the last column index.
            ca.EndColumn = 1;
            //Sort data in the specified data range (A1:B14)
            sorter.Sort(workbook.Worksheets[0].Cells, ca);
            //Save the excel file.
            workbook.Save("C:\\outBook.xls");
            
            [Visual Basic]
            
            'Instantiate a new Workbook object.
            Dim workbook As Workbook = New Workbook("C:\Book1.xls")
            'Get the workbook datasorter object.
            Dim sorter As DataSorter = workbook.DataSorter
            'Set the first order for datasorter object
            sorter.Order1 = Aspose.Cells.SortOrder.Descending
            'Define the first key.
            sorter.Key1 = 0
            'Set the second order for datasorter object.
            sorter.Order2 = Aspose.Cells.SortOrder.Ascending
            'Define the second key.
            sorter.Key2 = 1
            'Create a cells area (range).
            Dim ca As CellArea = New CellArea
            'Specify the start row index.
            ca.StartRow = 0
            'Specify the start column index.
            ca.StartColumn = 0
            'Specify the last row index.
            ca.EndRow = 13
            'Specify the last column index.
            ca.EndColumn = 1
            'Sort the data in the specified data range (A1:B14)
            sorter.Sort(workbook.Worksheets(0).Cells, ca)
            'Save the excel file.
            workbook.Save("C:\outBook.xls")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.DataSorter.Clear">
      <summary>
            Clear all settings.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.HasHeaders">
      <summary>
            Represents whether the range has headers.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DataSorter.AddKey(System.Int32,Aspose.Cells.SortOrder)">
      <summary>
            Adds sorted column index and sort order.
            </summary>
      <param name="key">The sorted column index.</param>
      <param name="order">The sort order</param>
    </member>
    <member name="M:Aspose.Cells.DataSorter.AddKey(System.Int32,Aspose.Cells.SortOrder,System.String)">
      <summary>
            Adds sorted column index and sort order with custom sort list.
            </summary>
      <param name="key">The sorted column index.</param>
      <param name="order">The sort order.</param>
      <param name="customList">The custom sort list.</param>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Key1">
      <summary>
            Represents first sorted column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Order1">
      <summary>
            Represents sort order of the first key.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Key2">
      <summary>
            Represents second sorted column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Order2">
      <summary>
            Represents sort order of the second key.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Key3">
      <summary>
            Represents third sorted column index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.Order3">
      <summary>
            Represents sort order of the third key.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.SortLeftToRight">
      <summary>
            True means that sorting orientation is from left to right.
            False means that sorting orientation is from top to bottom.
            The default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.CaseSensitive">
      <summary>
            Gets and sets whether case sensitive when comparing string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.DataSorter.SortAsNumber">
      <summary>
            Indicates whether sorting anything that looks like a number.
            </summary>
    </member>
    <member name="M:Aspose.Cells.DataSorter.Sort(Aspose.Cells.Cells,System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sorts the data of the area.
            </summary>
      <param name="cells">The cells contains the data area.</param>
      <param name="startRow">The start row of the area.</param>
      <param name="startColumn">The start column of the area.</param>
      <param name="endRow">The end row of the area.</param>
      <param name="endColumn">The end column of the area.</param>
    </member>
    <member name="M:Aspose.Cells.DataSorter.Sort(Aspose.Cells.Cells,Aspose.Cells.CellArea)">
      <summary>
            Sort the datas of the area.
            </summary>
      <param name="cells">The cells contains the data area.</param>
      <param name="area">The area needed to sort</param>
    </member>
    <member name="M:Aspose.Cells.DataSorter.Sort">
      <summary>
            Sort the data in the range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.DisplayDrawingObjects">
      <summary>
            Represents whether and how to show objects in the workbook.
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayDrawingObjects.DisplayShapes">
      <summary>
            Show all objects
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayDrawingObjects.Placeholders">
      <summary>
            Show placeholders
            </summary>
    </member>
    <member name="F:Aspose.Cells.DisplayDrawingObjects.Hide">
      <summary>
            Hide all shapes.
            </summary>
    </member>
    <member name="T:Aspose.Cells.EncryptionType">
      <summary>
            Encryption Type. 
            Only used by excel2003.
            We will encrypt 2007/2010 workbook using SHA AES the same as Excel does, and this EncryptionType will be ignored. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.EncryptionType.XOR">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.EncryptionType.Compatible">
      <summary>
             Office 97/2000 compatible.
             </summary>
    </member>
    <member name="F:Aspose.Cells.EncryptionType.EnhancedCryptographicProviderV1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.EncryptionType.StrongCryptographicProvider">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.ExceptionType">
      <summary>
            Represents custom exception type code.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Chart">
      <summary>
            Invalid chart setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.DataType">
      <summary>
            Invalid data type setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.DataValidation">
      <summary>
            Invalid data validation setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.ConditionalFormatting">
      <summary>
            Invalid data validation setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.FileFormat">
      <summary>
            Invalid file format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Formula">
      <summary>
            Invalid formula.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.InvalidData">
      <summary>
            Invalid data.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.InvalidOperator">
      <summary>
            Invalid operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.IncorrectPassword">
      <summary>
            Incorrect password.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.License">
      <summary>
            License related errors.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Limitation">
      <summary>
            Out of MS Excel limitation error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.PageSetup">
      <summary>
            Invalid page setup setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.PivotTable">
      <summary>
            Invalid pivotTable setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Shape">
      <summary>
            Invalid drawing object setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Sparkline">
      <summary>
            Invalid sparkline object setting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.SheetName">
      <summary>
            Invalid worksheet name.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.SheetType">
      <summary>
            Invalid worksheet type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.Interrupted">
      <summary>
            The operator is interrupted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.IO">
      <summary>
            The file is invalid.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.UnsupportedFeature">
      <summary>
            Unsupported feature.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.UnsupportedStream">
      <summary>
            Unsupported stream to be opened.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ExceptionType.UndisclosedInformation">
      <summary>
            Files contains some undisclosed information.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalLink">
      <summary>
             Represents an external link in a workbook.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Open a file with external links
             Workbook workbook = new Workbook("d:\\book1.xls");
             
             //Get External Link 
             ExternalLink externalLink = workbook.Worksheets.ExternalLinks[0];
             
             //Change External Link's Data Source
             externalLink.DataSource = "d:\\link.xls";
            
             [VB.NET]
             
             'Open a file with external links
             Dim workbook As New Workbook("d:\book1.xls")
             
             'Get External Link 
             Dim externalLink As ExternalLink = workbook.Worksheets.ExternalLinks(0)
             
             'Change External Link's Data Source
             externalLink.DataSource = "d:\link.xls"
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.ExternalLink.OriginalDataSource">
      <summary>
            Represents stored data source of the external link.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalLink.DataSource">
      <summary>
            Represents data source of the external link.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ExternalLink.AddExternalName(System.String,System.String)">
      <summary>
            Adds an external name.
            </summary>
      <param name="text">The text of the external name.
            If the external name belongs to a worksheet, the text should be as Sheet1!Text.
            </param>
      <param name="referTo">The referTo of the external name. It must be a cell or the range.</param>
    </member>
    <member name="P:Aspose.Cells.ExternalLink.IsReferred">
      <summary>
            Indicates whether this external link is referenced by others.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ExternalLink.IsVisible">
      <summary>
            Indicates whether this external link is visible in MS Excel.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ExternalLinkCollection">
      <summary>
            Represents external links collection in a workbook.
            </summary>
      <example>
        <code>
            [C#]
            //Open a file with external links
            Workbook workbook = new Workbook("d:\\book1.xls");
            
            //Change external link data source
            workbook.Worksheets.ExternalLinks[0].DataSource = "d:\\link.xls";
            
            
            [Visual Basic]
            'Open a file with external links
            Dim workbook As Workbook =  New Workbook("d:\\book1.xls")
            
            'Change external link data source
            workbook.Worksheets.ExternalLinks(0).DataSource = "d:\\link.xls"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.ExternalLinkCollection.Count">
      <summary>
            Gets the number of elements actually contained in the collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ExternalLinkCollection.Add(System.String,System.String[])">
      <summary>
            Adds an external link.
            </summary>
      <param name="fileName">The external file name.</param>
      <param name="sheetNames">All sheet names of the external file.</param>
      <returns>The position of the external name in this list. </returns>
    </member>
    <member name="M:Aspose.Cells.ExternalLinkCollection.Add(Aspose.Cells.DirectoryType,System.String,System.String[])">
      <summary>
            Add an external link .
            </summary>
      <param name="directoryType">The directory type of the file name.</param>
      <param name="fileName">the file name.</param>
      <param name="sheetNames">All sheet names of the external file.</param>
      <returns>The position of the external name in this list. </returns>
    </member>
    <member name="P:Aspose.Cells.ExternalLinkCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.ExternalLink" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="T:Aspose.Cells.FileFormatType">
      <summary>
            Enumerates spreadsheet file format types
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.AsposePdf">
      <summary>
            Saves the spreadsheet in Aspose.Pdf.Xml format that can be read by Aspose.Pdf to produce a PDF file.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Pdf" /> property.
            This property will be removed 6 months later since April 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.CSV">
      <summary>
            Represents a CSV file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Default">
      <summary>
            Represents an Excel 97-2003 xls file.        
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Excel97To2003" />property.
            This property will be removed 12 months later since March 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xlsx">
      <summary>
            Represents an xlsx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xlsx">
      <summary>
            Represents an xlsx file.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Xlsx" /> property.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xlsm">
      <summary>
            Represents an xlsm file which enable macros.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xlsm">
      <summary>
            Represents an xlsm file which enable macros.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Xlsm" /> property.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xltx">
      <summary>
            Represents a template xltx file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xltx">
      <summary>
            Represents a template xltx file.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Xltx" /> property.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xltm">
      <summary>
            Represents a macro-enabled template xltm file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xlam">
      <summary>
            Represents a addinMacro-enabled template xltm file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xltm">
      <summary>
            Represents a macro-enabled template xltm file.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Xltm" /> property.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.TabDelimited">
      <summary>
            Represents a tab delimited text file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Html">
      <summary>
            Represents a html file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.MHtml">
      <summary>
            Represents a mhtml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ODS">
      <summary>
            Represents a ods file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel97To2003">
      <summary>
            Represents an Excel97-2003 xls file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2003XML">
      <summary>
            Represents an Excel 2003 xml file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xlsb">
      <summary>
            Represents an xlsb file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2007Xlsb">
      <summary>
            Represents an xlsb file.
            NOTE: This member is now obsolete. Instead, 
            please use <see cref="F:Aspose.Cells.FileFormatType.Xlsb" /> property.
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Unknown">
      <summary>
            Represents unrecognized format, cannot be loaded. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Pdf">
      <summary>
            Represents a Pdf file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.XPS">
      <summary>
            Represents an XPS file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.TIFF">
      <summary>
            Represents a TIFF file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.SVG">
      <summary>
            Represents a svg file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel95">
      <summary>
            Represents an Excel95 xls file.
            </summary>
      <remarks>
            The file format is not supported
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel4">
      <summary>
            Represents an Excel4.0 xls file.
            </summary>
      <remarks>
            The file format is not supported
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel3">
      <summary>
            Represents an Excel3.0 xls file.
            </summary>
      <remarks>
            The file format is not supported
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Excel2">
      <summary>
            Represents an Excel2.1 xls file.
            </summary>
      <remarks>
            The file format is not supported
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Pptx">
      <summary>
            Represents a pptx file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Docx">
      <summary>
            Represents a docx file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Dif">
      <summary>
            Data Interchange Format.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Doc">
      <summary>
            Represents a doc file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Ppt">
      <summary>
            Represents a ppt file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.MapiMessage">
      <summary>
            Represents a email file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.MSEquation">
      <summary>
            Represents the MS Equation 3.0 object.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Ole10Native">
      <summary>
            Represents the embedded native object.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.VSD">
      <summary>
            Represents MS Visio VSD binary format.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.VSDX">
      <summary>
            MS Visio 2013 VSDX file format.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Docm">
      <summary>
            Represents a docm file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Dotx">
      <summary>
            Represents a dotx file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Dotm">
      <summary>
            Represents a dotm file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Pptm">
      <summary>
            Represents a pptm file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Potx">
      <summary>
            Represents a Potx file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Potm">
      <summary>
            Represents a Potm file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Ppsx">
      <summary>
            Represents a ppsx file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Ppsm">
      <summary>
            Represents a ppsm file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Ooxml">
      <summary>
            Represents office open xml file(such as xlsx, docx,pptx, etc).
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            If the office open xml file is encrypted, it could not be detected as xlsx ,docx, pptx,etc.
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ODT">
      <summary>
            Represents a odt file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ODP">
      <summary>
            Represents a odp file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ODF">
      <summary>
            Represents a odf file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.ODG">
      <summary>
            Represents a odg file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.XML">
      <summary>
            Represents an simple xml file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.Xlt">
      <summary>
            Represents a template xlt file.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.OTT">
      <summary>
            Represents a odt file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.BMP">
      <summary>
            Represents a bmp file.
            </summary>
      <remarks>
            The file format is not supported
            Only for detecting file type. 
            </remarks>
    </member>
    <member name="F:Aspose.Cells.FileFormatType.OTS">
      <summary>
            Represents a ods file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FilterColumn">
      <summary>
            Represents a filter for a single column. The Filter object is a member of the Filters collection
            </summary>
    </member>
    <member name="P:Aspose.Cells.FilterColumn.Visibledropdown">
      <summary>
            Indicates whether the AutoFilter button for this column is visible. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.FilterColumn.Filter">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.FilterColumn.FilterType">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.FilterColumn.FieldIndex">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.FilterOperatorType">
      <summary>
            InnerCustom Filter operator type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.LessOrEqual">
      <summary>
            Represents LessOrEqual operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.LessThan">
      <summary>
            Represents LessThan operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.Equal">
      <summary>
            Represents Equal operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.GreaterThan">
      <summary>
            Represents GreaterThan operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.NotEqual">
      <summary>
            Represents NotEqual operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.GreaterOrEqual">
      <summary>
            Represents GreaterOrEqual operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FilterOperatorType.None">
      <summary>
            Represents no comparision.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FilterColumnCollection">
      <summary>
            A collection of Filter objects that represents all the filters in an autofiltered range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.FilterColumnCollection.RemoveAt(System.Int32)">
      <summary>
      </summary>
      <param name="index">
      </param>
    </member>
    <member name="M:Aspose.Cells.FilterColumnCollection.GetByIndex(System.Int32)">
      <summary>
            Returns a single Filter object from a collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FilterColumnCollection.Item(System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.FilterColumn" /> object at the special field.
            </summary>
      <param name="fieldIndex">The integer offset of the field on which you want to base the filter 
            (from the left of the list; the leftmost field is field 0).
            </param>
      <returns>
            Returens <see cref="T:Aspose.Cells.FilterColumn" /> object.
            </returns>
    </member>
    <member name="T:Aspose.Cells.Font">
      <summary>
            Encapsulates the font object used in a spreadsheet.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Accessing the "A1" cell from the worksheet
            Aspose.Cells.Cell cell = worksheet.Cells["A1"];
            
            //Adding some value to the "A1" cell
            cell.PutValue("Hello Aspose!");
            
            Aspose.Cells.Font font = cell.Style.Font;
            
            //Setting the font name to "Times New Roman"
            font.Name = "Times New Roman";
            
            //Setting font size to 14
            font.Size = 14;
            
            //setting font color as Red
            font.Color = Aspose.Cells.Drawing.Color.Red;           
            
            //Saving the Excel file
            workbook.Save(@"d:\dest.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Accessing the "A1" cell from the worksheet
            Dim cell As Aspose.Cells.Cell = worksheet.Cells("A1")
            
            'Adding some value to the "A1" cell
            cell.PutValue("Hello Aspose!")
            
            Dim font As Aspose.Cells.Font = cell.Style.Font
            
            'Setting the font name to "Times New Roman"
            font.Name = "Times New Roman"
            
            'Setting font size to 14
            font.Size = 14
            
            'setting font color as Red
            font.Color = Aspose.Cells.Drawing.Color.Red
            
            'Saving the Excel file
            workbook.Save("d:\dest.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Font.Charset">
      <summary>
            Represent the character set.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsItalic">
      <summary>
            Gets or sets a value indicating whether the font is italic.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsBold">
      <summary>
            Gets or sets a value indicating whether the font is bold.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.CapsType">
      <summary>
            Gets and sets the text caps type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.StrikeType">
      <summary>
            Gets the strike type of the text.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsStrikeout">
      <summary>
            Gets or sets a value indicating whether the font is single strikeout.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.ScriptOffset">
      <summary>
            Gets and sets the sript offset,in unit of percentage
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsSuperscript">
      <summary>
            Gets or sets a value indicating whether the font is super script.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.IsSubscript">
      <summary>
            Gets or sets a value indicating whether the font is subscript.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.Underline">
      <summary>
            Gets or sets the font underline type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.Name">
      <summary>
            Gets  or sets the name of the <see cref="T:Aspose.Cells.Font" />.
            </summary>
      <example>
        <code>
            [C#]
            
            Style style;
            ..........
            Font font = style.Font;
            font.Name = "Times New Roman";
            
            [Visual Basic]
            
            Dim style As Style
            ..........
            Dim font As Font =  style.Font 
            font.Name = "Times New Roman"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Font.DoubleSize">
      <summary>
            Gets and sets the double size of the font.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.Size">
      <summary>
            Gets or sets the size of the font.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.ThemeColor">
      <summary>
            Gets and sets the theme color.
            </summary>
      <remarks>
            If the font color is not a theme color, NULL will be returned.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Font.Color">
      <summary>
            Gets or sets the <see cref="T:Aspose.Cells.Drawing.Color" /> of the font.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Font.ArgbColor">
      <summary>
            Gets and sets the color with a 32-bit ARGB value.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Font.Equals(Aspose.Cells.Font)">
      <summary>
            Checks if two fonts are equals.
            </summary>
      <param name="font">Compared font object.</param>
      <returns>True if equal to the compared font object.</returns>
    </member>
    <member name="P:Aspose.Cells.Font.IsNormalizeHeights">
      <summary>
            Indicates whether the normalization of height that is to be applied to the text run.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Font.ToString">
      <summary>
            Returns a string represents the current Cell object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.FontUnderlineType">
      <summary>
            Enumerates the font underline types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.None">
      <summary>
            Represents no underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Single">
      <summary>
            Represents single underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Double">
      <summary>
            Represents double underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Accounting">
      <summary>
            Represents single accounting underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DoubleAccounting">
      <summary>
            Represents double accounting underline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Dash">
      <summary>
            Represents Dashed Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DashDotDotHeavy">
      <summary>
            Represents Thick Dash-Dot-Dot Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DashDotHeavy">
      <summary>
            Represents Thick Dash-Dot Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DashedHeavy">
      <summary>
            Represents Thick Dashed Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DashLong">
      <summary>
            Represents Long Dashed Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DashLongHeavy">
      <summary>
            Represents Thick Long Dashed Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DotDash">
      <summary>
            Represents Dash-Dot Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DotDotDash">
      <summary>
            Represents Dash-Dot-Dot Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Dotted">
      <summary>
            Represents Dotted Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.DottedHeavy">
      <summary>
            Represents Thick Dotted Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Heavy">
      <summary>
            Represents Thick Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Wave">
      <summary>
            Represents Wave Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.WavyDouble">
      <summary>
            Represents Double Wave Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.WavyHeavy">
      <summary>
            Represents Heavy Wave Underline
            </summary>
    </member>
    <member name="F:Aspose.Cells.FontUnderlineType.Words">
      <summary>
            Represents Underline Non-Space Characters Only
            </summary>
    </member>
    <member name="T:Aspose.Cells.FormatCondition">
      <summary>
            Represents conditional formatting condition.
            </summary>
      <example>
        <code>
            
            [C#]
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            Worksheet sheet = workbook.Worksheets[0];
             
            //Adds an empty conditional formatting
            int index = sheet.ConditionalFormattings.Add();
            FormatConditionCollection fcs = sheet.ConditionalFormattings[index];
             
            //Sets the conditional format range.
            CellArea ca = new CellArea();
            ca.StartRow = 0;
            ca.EndRow = 0;
            ca.StartColumn = 0;
            ca.EndColumn = 0;
            fcs.AddArea(ca);
             
            ca = new CellArea();
            ca.StartRow = 1;
            ca.EndRow = 1;
            ca.StartColumn = 1;
            ca.EndColumn = 1;
            fcs.AddArea(ca);
             
            //Adds condition.
            int conditionIndex = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100");
             
            //Adds condition.
            int conditionIndex2 = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100");
             
            //Sets the background color.
            FormatCondition fc = fcs[conditionIndex];
            fc.Style.BackgroundColor = Color.Red;
             
            //Saving the Excel file
            workbook.Save("C:\\output.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            Dim sheet As Worksheet = workbook.Worksheets(0)
             
            ' Adds an empty conditional formatting
            Dim index As Integer = sheet.ConditionalFormattings.Add()
            Dim fcs As FormatConditionCollection = sheet.ConditionalFormattings(index)
             
            'Sets the conditional format range.
            Dim ca As CellArea = New CellArea()
            ca.StartRow = 0
            ca.EndRow = 0
            ca.StartColumn = 0
            ca.EndColumn = 0
            fcs.AddArea(ca)
            ca = New CellArea()
            ca.StartRow = 1
            ca.EndRow = 1
            ca.StartColumn = 1
            ca.EndColumn = 1
            fcs.AddArea(ca)
             
            'Adds condition.
            Dim conditionIndex As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100")
             
            'Adds condition.
            Dim conditionIndex2 As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100")
             
            'Sets the background color.
            Dim fc As FormatCondition = fcs(conditionIndex)
            fc.Style.BackgroundColor = Color.Red
             
            'Saving the Excel file
            workbook.Save("C:\output.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Formula1">
      <summary>
            Gets and sets the value or expression associated with conditional formatting.
            </summary>
      <remarks>
            Please add all areas before setting formula.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.FormatCondition.GetFormula1(System.Int32,System.Int32)">
      <summary>
            Gets the formula of the conditional formatting of the cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column">The column index.</param>
      <returns>The formula.</returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Formula2">
      <summary>
            Gets and sets the value or expression associated with conditional formatting.
            </summary>
      <remarks>
            Please add all areas before setting formula.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.FormatCondition.GetFormula2(System.Int32,System.Int32)">
      <summary>
            Gets the formula of the conditional formatting of the cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column">The column index.</param>
      <returns>The formula.</returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Operator">
      <summary>
            Gets and sets the conditional format operator type.
            </summary>
      <see cref="T:Aspose.Cells.OperatorType" />
    </member>
    <member name="P:Aspose.Cells.FormatCondition.StopIfTrue">
      <summary>
            True, no rules with lower priority may be applied over this rule, when this rule evaluates to true.
            Only applies for Excel 2007;
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Priority">
      <summary>
            The priority of this conditional formatting rule. This value is used to determine which
            format should be evaluated and rendered. Lower numeric values are higher priority than
            higher numeric values, where '1' is the highest priority.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Style">
      <summary>
            Gets or setts style of conditional formatted cell ranges.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Type">
      <summary>
            Gets and sets whether the conditional format Type.
            </summary>
      <see cref="T:Aspose.Cells.FormatConditionType" />
    </member>
    <member name="P:Aspose.Cells.FormatCondition.IconSet">
      <summary>
            Get the conditional formatting's "IconSet" instance.
            The default instance's IconSetType is TrafficLights31.
            Valid only for type = IconSet.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.DataBar">
      <summary>
            Get the conditional formatting's "DataBar" instance.
            The default instance's color is blue.
            Valid only for type = DataBar.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.ColorScale">
      <summary>
            Get the conditional formatting's "ColorScale" instance.
            The default instance is a "green-yellow-red" 3ColorScale .
            Valid only for type = ColorScale.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Top10">
      <summary>
            Get the conditional formatting's "Top10" instance.
            The default instance's rule highlights cells whose
            values fall in the top 10 bracket.
            Valid only for type = Top10.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.AboveAverage">
      <summary>
            Get the conditional formatting's "AboveAverage" instance.
            The default instance's rule highlights cells that are 
            above the average for all values in the range.
            Valid only for type = AboveAverage.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.Text">
      <summary>
            The text value in a "text contains" conditional formatting rule. 
            Valid only for type = containsText, notContainsText, beginsWith and endsWith.
            The default value is null.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatCondition.TimePeriod">
      <summary>
            The applicable time period in a "date occurring¡­" conditional formatting rule. 
            Valid only for type = timePeriod.
            The default value is TimePeriodType.Today.
            </summary>
    </member>
    <member name="T:Aspose.Cells.AboveAverage">
      <summary>
            Describe the AboveAverage conditional formatting rule. 
            This conditional formatting rule highlights cells that
            are above or below the average for all values in the range. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.AboveAverage.IsAboveAverage">
      <summary>
            Get or set the flag indicating whether the rule is an "above average" rule. 
            'true' indicates 'above average'.
            Default value is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.AboveAverage.IsEqualAverage">
      <summary>
            Get or set the flag indicating whether the 'aboveAverage' and 'belowAverage' criteria 
            is inclusive of the average itself, or exclusive of that value. 
            'true' indicates to include the average value in the criteria.
            Default value is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.AboveAverage.StdDev">
      <summary>
            Get or set the number of standard deviations to include above or below the average in the
            conditional formatting rule. 
            The input value must between 0 and 3 (include 0 and 3). 
            Setting this value to 0 means stdDev is not set.
            The default value is 0.
            </summary>
    </member>
    <member name="T:Aspose.Cells.FormatConditionCollection">
      <summary>
             Represents conditional formatting.
             The FormatConditions can contain up to three conditional formats. 
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Adds an empty conditional formatting
             int index = sheet.ConditionalFormattings.Add();
             FormatConditionCollection fcs = sheet.ConditionalFormattings[index];
             //Sets the conditional format range.
             CllArea ca = new CellArea();
             ca.StartRow = 0;
             ca.EndRow = 0;
             ca.StartColumn = 0;
             ca.EndColumn = 0;
             fcs.AddArea(ca);
             ca = new CellArea();
             ca.StartRow = 1;
             ca.EndRow = 1;
             ca.StartColumn = 1;
             ca.EndColumn = 1;
             fcs.AddArea(ca);
             //Adds condition.
             int conditionIndex = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100");
             //Adds condition.
             int conditionIndex2 = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100");
             //Sets the background color.
             FormatCondition fc = fcs[conditionIndex];
             fc.Style.BackgroundColor = Color.Red;
             //Saving the Excel file
             workbook.Save("C:\\output.xls");   
             
             [Visual Basic]
            
             'Instantiating a Workbook object
             Dim workbook As Workbook = New Workbook()
             Dim sheet As Worksheet = workbook.Worksheets(0)
             ' Adds an empty conditional formatting
             Dim index As Integer = sheet.ConditionalFormattings.Add()
             Dim fcs As FormatConditionCollection = sheet.ConditionalFormattings(index)
             'Sets the conditional format range.
             Dim ca As CellArea = New CellArea()
             ca.StartRow = 0
             ca.EndRow = 0
             ca.StartColumn = 0
             ca.EndColumn = 0
             fcs.AddArea(ca)
             ca = New CellArea()
             ca.StartRow = 1
             ca.EndRow = 1
             ca.StartColumn = 1
             ca.EndColumn = 1
             fcs.AddArea(ca)
             'Adds condition.
             Dim conditionIndex As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "=A2", "100")
             'Adds condition.
             Dim conditionIndex2 As Integer = fcs.AddCondition(FormatConditionType.CellValue, OperatorType.Between, "50", "100")
             'Sets the background color.
             Dim fc As FormatCondition = fcs(conditionIndex)
             fc.Style.BackgroundColor = Color.Red
             'Saving the Excel file
             workbook.Save("C:\output.xls")
             </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.Add(Aspose.Cells.CellArea,Aspose.Cells.FormatConditionType,Aspose.Cells.OperatorType,System.String,System.String)">
      <summary>
            Adds a formatting condition and effected cell rang to the FormatConditions
             The FormatConditions can contain up to three conditional formats.
             References to the other sheets are not allowed in the formulas of conditional formattin
            </summary>
      <param name="cellArea">Conditional formatted cell range.</param>
      <param name="type">Type of conditional formatting.It could be one of the members of FormatConditionType.</param>
      <param name="operatorType">Comparison operator.It could be one of the members of OperatorType.</param>
      <param name="formula1">The value or expression associated with conditional formatting.</param>
      <param name="formula2">The value or expression associated with conditional formatting</param>
      <returns>[0]:Formatting condition object index;[1] Effected cell rang index.</returns>
      <see cref="T:Aspose.Cells.OperatorType" />
      <set cref="T:Aspose.Cells.FormatConditionType" />
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.AddArea(Aspose.Cells.CellArea)">
      <summary>
            Adds a conditional formatted cell range.
            </summary>
      <param name="cellArea">Conditional formatted cell range.</param>
      <returns>Conditional formatted cell rang index.</returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.AddCondition(Aspose.Cells.FormatConditionType,Aspose.Cells.OperatorType,System.String,System.String)">
      <summary>
            Adds a formatting condition.
            </summary>
      <param name="type">
        <set cref="T:Aspose.Cells.FormatConditionType" /> of conditinal formatting.It could be one of the members of FormatConditionType.</param>
      <param name="operatorType">The comparison <see cref="T:Aspose.Cells.OperatorType" />.It could be one of the members of OperatorType.</param>
      <param name="formula1">The value or expression associated with conditinal formatting.</param>
      <param name="formula2">The value or expression associated with conditinal formatting.</param>
      <returns>Formatting condition object index;</returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.AddCondition(Aspose.Cells.FormatConditionType)">
      <summary>
            Add a format condition.
            </summary>
      <param name="type">Format condition type.</param>
      <returns>Formatting condition object index;</returns>
    </member>
    <member name="P:Aspose.Cells.FormatConditionCollection.Count">
      <summary>
            Gets the count of the conditions.
            </summary>
    </member>
    <member name="P:Aspose.Cells.FormatConditionCollection.RangeCount">
      <summary>
            Gets count of conditionally formatted ranges.
             </summary>
    </member>
    <member name="P:Aspose.Cells.FormatConditionCollection.Item(System.Int32)">
      <summary>
            Gets the formatting conidition by index.
            </summary>
      <param name="index">the index of the formatting conidition to return.</param>
      <returns>the formatting conidition </returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.GetCellArea(System.Int32)">
      <summary>
            Gets the conditional formatted cell range by index.
            </summary>
      <param name="index">the index of the coditional formatted cell range.</param>
      <returns>the conditional formatted cell range</returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.RemoveArea(System.Int32)">
      <summary>
            Removes conditional formatted cell range by index.
            </summary>
      <param name="index">The index of the conditional formatted cell range to be removed.</param>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.RemoveArea(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Remove conditional formatting int the range.
            </summary>
      <param name="startRow">The startRow of the range.</param>
      <param name="startColumn">The startColumn of the range.</param>
      <param name="totalRows">The number of rows of the range.</param>
      <param name="totalColumns">The number of columns of the range.</param>
      <returns>
            Returns TRUE, this FormatCondtionCollection should be removed.
            </returns>
    </member>
    <member name="M:Aspose.Cells.FormatConditionCollection.RemoveCondition(System.Int32)">
      <summary>
            Removes the formatting condition by index.
            </summary>
      <param name="index">The index of the formatting condition to be removed.</param>
    </member>
    <member name="T:Aspose.Cells.FormatConditionType">
      <summary>
            Conditional format rule type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.CellValue">
      <summary>
            This conditional formatting rule compares a cell value
            to a formula calculated result, using an operator.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.Expression">
      <summary>
            This conditional formatting rule contains a formula to
            evaluate. When the formula result is true, the cell is
            highlighted.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.ColorScale">
      <summary>
            This conditional formatting rule creates a gradated
            color scale on the cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.DataBar">
      <summary>
            This conditional formatting rule displays a gradated
            data bar in the range of cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.IconSet">
      <summary>
            This conditional formatting rule applies icons to cells
            according to their values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.Top10">
      <summary>
            This conditional formatting rule highlights cells whose
            values fall in the top N or bottom N bracket, as
            specified.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.UniqueValues">
      <summary>
            This conditional formatting rule highlights unique
            values in the range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.DuplicateValues">
      <summary>
            This conditional formatting rule highlights duplicated
            values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.ContainsText">
      <summary>
            This conditional formatting rule highlights cells
            containing given text. Equivalent to using the SEARCH()
            sheet function to determine whether the cell contains
            the text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.NotContainsText">
      <summary>
            This conditional formatting rule highlights cells that
            are not blank. Equivalent of using LEN(TRIM()). This
            means that if the cell contains only characters that
            TRIM() would remove, then it is considered blank. An
            empty cell is also considered blank.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.BeginsWith">
      <summary>
            This conditional formatting rule highlights cells in the
            range that begin with the given text. Equivalent to
            using the LEFT() sheet function and comparing values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.EndsWith">
      <summary>
            This conditional formatting rule highlights cells ending
            with given text. Equivalent to using the RIGHT() sheet
            function and comparing values.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.ContainsBlanks">
      <summary>
            This conditional formatting rule highlights cells that
            are completely blank. Equivalent of using LEN(TRIM()).
            This means that if the cell contains only characters
            that TRIM() would remove, then it is considered blank.
            An empty cell is also considered blank.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.NotContainsBlanks">
      <summary>
            This conditional formatting rule highlights cells that
            are not blank. Equivalent of using LEN(TRIM()). This
            means that if the cell contains only characters that
            TRIM() would remove, then it is considered blank. An
            empty cell is also considered blank.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.ContainsErrors">
      <summary>
            This conditional formatting rule highlights cells with
            formula errors. Equivalent to using ISERROR() sheet
            function to determine if there is a formula error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.NotContainsErrors">
      <summary>
            This conditional formatting rule highlights cells
            without formula errors. Equivalent to using ISERROR()
            sheet function to determine if there is a formula error.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.TimePeriod">
      <summary>
            This conditional formatting rule highlights cells
            containing dates in the specified time period. The
            underlying value of the cell is evaluated, therefore the
            cell does not need to be formatted as a date to be
            evaluated. For example, with a cell containing the
            value 38913 the conditional format shall be applied if
            the rule requires a value of 7/14/2006.
            </summary>
    </member>
    <member name="F:Aspose.Cells.FormatConditionType.AboveAverage">
      <summary>
            This conditional formatting rule highlights cells that
            are above or below the average for all values in the
            range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.CellsHelper">
      <summary>
            Provides helper functions.
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.SignificantDigits">
      <summary>
            Gets and sets the number of significant digits.
            The default value is 17.
            </summary>
      <remarks>
            Only could be 15 or 17 now.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.DPI">
      <summary>
            Gets the DPI of the machine.
            </summary>
      <remarks>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.GetVersion">
      <summary>
            Get the release version.
            </summary>
      <returns>The release version.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.IsProtectedByRMS(System.String)">
      <summary>
            Gets whether the file is protected by Microsoft Rights Management Server.
            </summary>
      <param name="fileName">The file name.</param>
      <returns>
      </returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.String)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.IsProtectedByRMS(System.IO.Stream)">
      <summary>
            Gets whether the file is protected by Microsoft Rights Management Server.
            </summary>
      <param name="stream">The file stream.</param>
      <returns>
      </returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.IO.Stream)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.CellNameToIndex(System.String,System.Int32@,System.Int32@)">
      <summary>
            Gets the cell row and column indexes according to its name.
            </summary>
      <param name="cellName">Name of cell.</param>
      <param name="row">Output row index</param>
      <param name="column">Output column index</param>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.CellIndexToName(System.Int32,System.Int32)">
      <summary>
            Gets cell name according to its row and column indexes.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <returns>Name of cell.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.ColumnIndexToName(System.Int32)">
      <summary>
            Gets column name according to column index.
            </summary>
      <param name="column">Column index.</param>
      <returns>Name of column.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.ColumnNameToIndex(System.String)">
      <summary>
            Gets column index according to column name.
            </summary>
      <param name="columnName">Column name.</param>
      <returns>Column index.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.RowIndexToName(System.Int32)">
      <summary>
            Gets row name according to row index.
            </summary>
      <param name="row">Row index.</param>
      <returns>Name of row.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.RowNameToIndex(System.String)">
      <summary>
            Gets row index according to row name.
            </summary>
      <param name="rowName">Row name.</param>
      <returns>Row index.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.ConvertR1C1FormulaToA1(System.String,System.Int32,System.Int32)">
      <summary>
            Converts the r1c1 formula of the cell to A1 formula.
            </summary>
      <param name="r1c1Formula">The r1c1 formula.</param>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell.</param>
      <returns>The A1 formula.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.ConvertA1FormulaToR1C1(System.String,System.Int32,System.Int32)">
      <summary>
            Converts A1 formula of the cell to the r1c1 formula.
            </summary>
      <param name="formula">The A1 formula.</param>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell.</param>
      <returns>The R1C1 formula.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.GetDateTimeFromDouble(System.Double,System.Boolean)">
      <summary>
            Convert the double value to the date time value.
            </summary>
      <param name="doubleValue">The double value.</param>
      <param name="date1904">Date 1904 system.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.GetDoubleFromDateTime(System.DateTime,System.Boolean)">
      <summary>
            Convert the date time to double value.
            </summary>
      <param name="dateTime">The date time.</param>
      <param name="date1904">Date 1904 system.</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.DetectLoadFormat(System.String)">
      <summary>
            Detects the file load format.
            </summary>
      <param name="fileName">The file name.</param>
      <returns>The load format.</returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.String)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.DetectLoadFormat(System.IO.Stream)">
      <summary>
            Detects the file load format.
            </summary>
      <param name="stream">The stream.</param>
      <returns>
      </returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.IO.Stream)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.DetectFileFormat(System.String)">
      <summary>
            Detects the file format type.
            </summary>
      <param name="fileName">the file name</param>
      <returns>The file format type.</returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.String)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.DetectFileFormat(System.IO.Stream)">
      <summary>
            Detects the format type of the file stored in the stream.
            </summary>
      <param name="stream">The stream</param>
      <returns>The file format type.</returns>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FileFormatUtil.DetectFileFormat(System.IO.Stream)" /> property.
            This property will be removed 12 months later since December 2013. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.FontDir">
      <summary>
            When generating PDF/XPS, specific font file directory can be set in the property.
            If it is not set , using %WINDOWS%\fonts by default.
            </summary>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FontConfigs.SetFontFolder(System.String,System.Boolean)" /> method with folder recursive to false.
            This property will be removed 12 months later since July 2016. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.FontDirs">
      <summary>
            When generating PDF/XPS, specific font file directories can be set in the property.
            If it is not set , using %WINDOWS%\fonts by default.
            </summary>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FontConfigs.SetFontFolders(System.String[],System.Boolean)" /> method with folder recursive to false.
            This property will be removed 12 months later since July 2016. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.FontFiles">
      <summary>
            When generating PDF/XPS, specific font files can be set in the property.
            Such as "d:\myfonts\myArial.ttf" 
            </summary>
      <remarks>This member is now obsolete. Instead, 
            please use <see cref="M:Aspose.Cells.FontConfigs.SetFontSources(Aspose.Cells.FontSourceBase[])" /> method.
            This property will be removed 12 months later since July 2016. 
            Aspose apologizes for any inconvenience you may have experienced.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.StartupPath">
      <summary>
            Gets or sets the startup path, which is referred to by some external formula references.  
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.AltStartPath">
      <summary>
            Gets or sets the alternate startup path, which is referred to by some external formula references. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.CellsHelper.LibraryPath">
      <summary>
            Gets or sets the library path which is referred to by some external formula references.  
            </summary>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.GetUsedColors(Aspose.Cells.Workbook)">
      <summary>
            Gets all used colors in the workbook.
            </summary>
      <param name="workbook">The workbook object.</param>
      <returns>The used colors.</returns>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.AddAddInFunction(System.String,System.Int32,System.Int32,Aspose.Cells.ParameterType[],Aspose.Cells.ParameterType)">
      <summary>
            Add addin function.
            </summary>
      <param name="function">The function name.</param>
      <param name="minCountOfParameters">Minimum number of parameters this function requires</param>
      <param name="maxCountOfParameters">Maximum number of parameters this function allows.</param>
      <param name="paramersType">The excepted parameters type of the function</param>
      <param name="functionValueType">The function value type.</param>
    </member>
    <member name="M:Aspose.Cells.CellsHelper.MergeFiles(System.String[],System.String,System.String)">
      <summary>
            Merges some large xls files to a xls file.
            </summary>
      <param name="files">The files.</param>
      <param name="cachedFile">The cached file.</param>
      <param name="destFile">The dest file.</param>
      <remarks>
            This method only supports merging data, style and formulas to the new file.
            The cached file is used to store some temporary data.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.HorizontalPageBreak">
      <summary>
            Encapsulates the object that represents a horizontal page break. 
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Add a page break at cell Y30
            int Index = worksheet.HorizontalPageBreaks.Add("Y30");
            
            //get the newly added horizontal page break
            HorizontalPageBreak hPageBreak = worksheet.HorizontalPageBreaks[Index];  
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Add a page break at cell Y30
            Dim Index As Integer = worksheet.HorizontalPageBreaks.Add("Y30")
            
            'get the newly added horizontal page break
            Dim hPageBreak As HorizontalPageBreak = worksheet.HorizontalPageBreaks(Index)
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.HorizontalPageBreak.StartColumn">
      <summary>
            Gets the start column index of this horizontal page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HorizontalPageBreak.EndColumn">
      <summary>
            Gets the end column index of this horizontal page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.HorizontalPageBreak.Row">
      <summary>
            Gets the zero based row index.
            </summary>
    </member>
    <member name="T:Aspose.Cells.HorizontalPageBreakCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.HorizontalPageBreak" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            //Add a pagebreak at G5
            excel.Worksheets[0].HorizontalPageBreaks.Add("G5");
            excel.Worksheets[0].VerticalPageBreaks.Add("G5");
            
            [VB]
            'Add a pagebreak at G5
            excel.Worksheets(0).HorizontalPageBreaks.Add("G5")
            excel.Worksheets(0).VerticalPageBreaks.Add("G5")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.HorizontalPageBreakCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.HorizontalPageBreak" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.HorizontalPageBreakCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.HorizontalPageBreak" /> element with the specified cell name.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>The element with the specified cell name.</returns>
    </member>
    <member name="M:Aspose.Cells.HorizontalPageBreakCollection.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="row">Row index, zero based.</param>
      <param name="startColumn">Start column index, zero based.</param>
      <param name="endColumn">End column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.HorizontalPageBreak" /> object index.</returns>
      <remarks>This method is used to add a horizontal pagebreak within a print area.</remarks>
    </member>
    <member name="M:Aspose.Cells.HorizontalPageBreakCollection.Add(System.Int32)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="row">Cell row index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.HorizontalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.HorizontalPageBreakCollection.Add(System.Int32,System.Int32)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="row">Cell row index, zero based.</param>
      <param name="column">Cell column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.HorizontalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.HorizontalPageBreakCollection.Add(System.String)">
      <summary>
            Adds a horizontal page break to the collection.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>
        <see cref="T:Aspose.Cells.HorizontalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.HorizontalPageBreakCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the HPageBreak element at a specified name.
            </summary>
      <param name="index">Element index, zero based.</param>
    </member>
    <member name="T:Aspose.Cells.Hyperlink">
      <summary>
            Encapsulates the object that represents a hyperlink.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            //Adding a new worksheet to the Workbook object
            workbook.Worksheets.Add();
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[0];
            //Adding a hyperlink to a URL at "A1" cell
            worksheet.Hyperlinks.Add("A1", 1, 1, "http://www.aspose.com");
            //Saving the Excel file
            workbook.Save("C:\\book1.xls");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            'Adding a new worksheet to the Workbook object
            workbook.Worksheets.Add()
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            'Adding a hyperlink to a URL at "A1" cell
            worksheet.Hyperlinks.Add("A1", 1, 1, "http://www.aspose.com")
            'Saving the Excel file
            workbook.Save("C:\book1.xls")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.Address">
      <summary>
            Represents the address of a hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.TextToDisplay">
      <summary>
            Represents the text to be displayed for the specified hyperlink. The default value is the address of the hyperlink. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.Area">
      <summary>
            Gets the range of hyperlink.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Hyperlink.ScreenTip">
      <summary>
            Returns or sets the ScreenTip text for the specified hyperlink.
            </summary>
    </member>
    <member name="T:Aspose.Cells.HyperlinkCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Hyperlink" /> objects.
            </summary>
      <example>
        <code>
            
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            
            //Obtaining the reference of the newly added worksheet by passing its sheet index
            Worksheet worksheet = workbook.Worksheets[0];
            
            //Get Hyperlinks Collection
            HyperlinkCollection hyperlinks = worksheet.Hyperlinks;
            
            //Adding a hyperlink to a URL at "A1" cell
            hyperlinks.Add("A1", 1, 1, "http://www.aspose.com");
            
            //Saving the Excel file
            workbook.Save("D:\\book1.xls");
            
            [VB.NET]
            
            'Instantiating a Workbook object
            Dim workbook As New Workbook()
            
            'Obtaining the reference of the newly added worksheet by passing its sheet index
            Dim worksheet As Worksheet = workbook.Worksheets(0)
            
            'Get Hyperlinks Collection
            Dim hyperlinks As HyperlinkCollection = worksheet.Hyperlinks
            
            'Adding a hyperlink to a URL at "A1" cell
            hyperlinks.Add("A1", 1, 1, "http://www.aspose.com")
            
            'Saving the Excel file
            workbook.Save("D:\book1.xls")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.HyperlinkCollection.Add(System.Int32,System.Int32,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a hyperlink to a specified cell or a range of cells.
            </summary>
      <param name="firstRow">First row of the hyperlink range.</param>
      <param name="firstColumn">First column of the hyperlink range.</param>
      <param name="totalRows">Number of rows in this hyperlink range.</param>
      <param name="totalColumns">Number of columns of this hyperlink range.</param>
      <param name="address">Address of the hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
      <example>
        <code>
            [C#]
            
            Worksheet worksheet = excel.Worksheets[0];
            worksheet.Hyperlinks.Add("A4", 1, 1, "http://www.aspose.com");
            worksheet.Hyperlinks.Add("A5", 1, 1, "c:\\book1.xls");
            
            [Visual Basic]
            
            Dim worksheet as Worksheet = excel.Worksheets(0)
            worksheet.Hyperlinks.Add("A4", 1, 1, "http://www.aspose.com")
            worksheet.Hyperlinks.Add("A5", 1, 1, "c:\\book1.xls")
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.HyperlinkCollection.Add(System.String,System.Int32,System.Int32,System.String)">
      <summary>
            Adds a hyperlink to a specified cell or a range of cells.
            </summary>
      <param name="cellName">Cell name.</param>
      <param name="totalRows">Number of rows in this hyperlink range.</param>
      <param name="totalColumns">Number of columns of this hyperlink range.</param>
      <param name="address">Address of the hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.HyperlinkCollection.Add(System.String,System.String,System.String,System.String,System.String)">
      <summary>
            Adds a hyperlink to a specified cell or a range of cells.
            </summary>
      <param name="startCellName">The top-left cell of the range.</param>
      <param name="endCellName">The bottom-right cell of the range.</param>
      <param name="address">Address of the hyperlink.</param>
      <param name="textToDisplay">The text to be displayed for the specified hyperlink.</param>
      <param name="screenTip">The screenTip text for the specified hyperlink.</param>
      <returns>
        <see cref="T:Aspose.Cells.Hyperlink" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.HyperlinkCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Hyperlink" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:Aspose.Cells.HyperlinkCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the hyperlink  at the specified index.
            </summary>
      <param name="index">The zero based index of the element.</param>
    </member>
    <member name="M:Aspose.Cells.HyperlinkCollection.Clear">
      <summary>
            Clears all hyperlinks.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ICustomFunction">
      <summary>
            Allows users to add their custom formula calculation functions to extend the calculation engine.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ICustomFunction.CalculateCustomFunction(System.String,System.Collections.ArrayList,System.Collections.ArrayList)">
      <summary>
            Calculates the result of custom function.
            </summary>
      <param name="functionName">InnerCustom function name, such as "MyFunc1".</param>
      <param name="paramsList">A list of parameters value for custom functions.</param>
      <param name="contextObjects">A list of context objects.</param>
      <returns>Result of custom function.</returns>
      <remarks>Currently there are 3 fixed context objects and some varialbe context objects:
            <p>1. Current Workbook object.</p><p>2. Current Worksheet object.</p><p>3. Current Cell object.</p><p>Others are custom function parameters text.</p>
            If a custom function name is not supported, please return a null reference.</remarks>
    </member>
    <member name="T:Aspose.Cells.TxtSaveOptions">
      <summary>
            Repesents the save options for csv/tab delimitered/other text format.
            </summary>
    </member>
    <member name="M:Aspose.Cells.TxtSaveOptions.#ctor">
      <summary>
            Creates text file save options.
            </summary>
    </member>
    <member name="M:Aspose.Cells.TxtSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates text file save options.
            </summary>
      <param name="format">The save foramt of the text file.</param>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.Separator">
      <summary>
            Gets and sets char Delimiter of text file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.SeparatorString">
      <summary>
            Gets and sets the a string value as separator.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.Encoding">
      <summary>
            Gets and sets the default encoding.Only applies for csv file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.AlwaysQuoted">
      <summary>
            Indicates whether always adding '"' for each field.
            If true then all values will be quoted;
            If false then only quote values when needed(when values contain special characters such as '"' , '\n' or separator character).
            Default is false.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use QuoteType property instead.
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.QuoteType">
      <summary>
            Gets or sets how to quote values in the exported text file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.FormatStrategy">
      <summary>
            Gets and sets the format strategy when exporting the cell value as string.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.LightCellsDataProvider">
      <summary>
            The Data provider to provide cells data for saving workbook in light mode.
            </summary>
    </member>
    <member name="P:Aspose.Cells.TxtSaveOptions.TrimLeadingBlankRowAndColumn">
      <summary>
            Indicates whether leading blank rows and columns should be trimmed like what ms excel does.
            </summary>
    </member>
    <member name="T:Aspose.Cells.XmlColumnProperty">
      <summary>
            Represents Xml Data Binding information.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Name">
      <summary>
             Represents a defined name for a range of cells.
             </summary>
      <example>
        <code>
             
             [C#]
             
             //Instantiating a Workbook object
             Workbook workbook = new Workbook();
             //Accessing the first worksheet in the Excel file
             Worksheet worksheet = workbook.Worksheets[0];
             //Creating a named range
             Range range = worksheet.Cells.CreateRange("B4", "G14");
             //Setting the name of the named range
             range.Name = "TestRange";
             //Saving the modified Excel file in default (that is Excel 2000) format
             workbook.Save("C:\\output.xls");   
            
             [Visual Basic]
             
             'Instantiating a Workbook object
             Dim workbook As Workbook = New Workbook()
             'Accessing the first worksheet in the Excel file
             Dim worksheet As Worksheet = workbook.Worksheets(0)
             'Creating a named range
             Dim range As Range = worksheet.Cells.CreateRange("B4", "G14")
             'Setting the name of the named range
             range.Name = "TestRange"
             'Saving the modified Excel file in default (that is Excel 2000) format
             workbook.Save("C:\\output.xls")
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Name.Comment">
      <summary>
            Gets and sets the commont of the name.
            Only applies for Excel 2007.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.Text">
      <summary>
            Gets the name text of the object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.FullText">
      <summary>
            Gets the name  full text of the object with the scope setting.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.RefersTo">
      <summary>
            Returns or sets the formula that the name is defined to refer to, beginning with an equal sign.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.R1C1RefersTo">
      <summary>
             Gets or sets a R1C1 reference of the <see cref="T:Aspose.Cells.Name" />.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.IsReferred">
      <summary>
            Indicates whether this name is referred by other formulas.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.IsVisible">
      <summary>
            Indicates whether the name is visible. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Name.SheetIndex">
      <summary>
            Indicates this name belongs to Workbook or Worksheet.
            0 = Global name, otherwise index to sheet (one-based)
            </summary>
    </member>
    <member name="M:Aspose.Cells.Name.ToString">
      <summary>
            Returns a string represents the current Range object.
            </summary>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Name.GetRanges">
      <summary>
            Gets all ranges which referred by this name.
            </summary>
      <returns>All ranges.</returns>
    </member>
    <member name="M:Aspose.Cells.Name.GetRange">
      <summary>
            Gets the range if this name refers to a range.
            </summary>
      <returns>The range.</returns>
    </member>
    <member name="M:Aspose.Cells.Name.GetRange(System.Int32,System.Int32,System.Int32)">
      <summary>
            Gets the range if this name refers to a range.
            If the reference is not absolute reference, the range will be different in different cell.
            </summary>
      <param name="sheetIndex">The according sheet index.</param>
      <param name="row">The according row index.</param>
      <param name="column">The according column index</param>
      <returns>The range.</returns>
    </member>
    <member name="T:Aspose.Cells.NameCollection">
      <summary>
            Represents a collection of all the <see cref="T:Aspose.Cells.Name" /> objects in the spreadsheet. 
            </summary>
    </member>
    <member name="M:Aspose.Cells.NameCollection.Add(System.String)">
      <summary>
            Defines a new name.
            </summary>
      <param name="text">The text to use as the name.</param>
      <returns>
        <see cref="T:Aspose.Cells.Name" /> object index.</returns>
      <remarks>Name cannot include spaces and cannot look like cell references.</remarks>
    </member>
    <member name="P:Aspose.Cells.NameCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Name" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.NameCollection.Item(System.String)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Name" /> element with the specified name.
             </summary>
      <param name="text">Name text.</param>
      <returns>The element with the specified name.</returns>
    </member>
    <member name="M:Aspose.Cells.NameCollection.Remove(System.String[])">
      <summary>
            Remove an array of name
            </summary>
      <param name="names">The names' text.</param>
    </member>
    <member name="M:Aspose.Cells.NameCollection.Remove(System.String)">
      <summary>
            Remove the name.
            </summary>
      <param name="text">The name text.</param>
    </member>
    <member name="M:Aspose.Cells.NameCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the name at the specific index.
            </summary>
      <param name="index">
      </param>
      <remarks>
            Please make sure that the name is not referred by the other formulas before calling the method.
            And if the name is referred,please only set Name.RefersTo as null.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.NameCollection.Clear">
      <summary>
            Remove all defined names which are not referenced by the formulas and data source.
            If the defined name is refered, we only set Name.ReferTo as null and hide them.
            </summary>
    </member>
    <member name="M:Aspose.Cells.NameCollection.RemoveDuplicateNames">
      <summary>
            Remove the duplicate defined names
            </summary>
    </member>
    <member name="M:Aspose.Cells.NameCollection.Sort">
      <summary>
            Sorts defined names.
            </summary>
      <remarks>If you create a large amount of named ranges in the Excel file, please call this method after all named ranges are created and before saving </remarks>
    </member>
    <member name="T:Aspose.Cells.OperatorType">
      <summary>
            Represents the operator type of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.Between">
      <summary>
            Represents Between operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.Equal">
      <summary>
            Represents Equal operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.GreaterThan">
      <summary>
            Represents GreaterThan operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.GreaterOrEqual">
      <summary>
            Represents GreaterOrEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.LessThan">
      <summary>
            Represents LessThan operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.LessOrEqual">
      <summary>
            Represents LessOrEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.None">
      <summary>
            Represents no comparision.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.NotBetween">
      <summary>
            Represents NotBetween operator of conditional format and data validation.
            </summary>
    </member>
    <member name="F:Aspose.Cells.OperatorType.NotEqual">
      <summary>
            Represents NotEqual operator of conditional format and data validation.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Outline">
      <summary>
            Represents an outline on a worksheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Outline.SummaryRowBelow">
      <summary>
            Indicates if the summary row will be positioned below the detail rows in the outline.
            </summary>
    </member>
    <member name="F:Aspose.Cells.Outline.SummaryColumnRight">
      <summary>
            Indicates if the summary column will be positioned to the right of the detail columns in the outline.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PageOrientationType">
      <summary>
            Represents print orientation constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PageOrientationType.Landscape">
      <summary>
            Landscape orientation
            </summary>
    </member>
    <member name="F:Aspose.Cells.PageOrientationType.Portrait">
      <summary>
            Portrait orientation
            </summary>
    </member>
    <member name="T:Aspose.Cells.PageSetup">
      <summary>
            Encapsulates the object that represents the page setup description. 
            The PageSetup object contains all page setup options.
            </summary>
      <example>
        <code>
            [C#]
            sheet.PageSetup.PrintArea = "D1:K13";
            sheet.PageSetup.PrintTitleRows = "$5:$7";
            sheet.PageSetup.PrintTitleColumns = "$A:$B";
            
            [Visual Basic]
            sheet.PageSetup.PrintArea = "D1:K13"
            sheet.PageSetup.PrintTitleRows = "$5:$7"
            sheet.PageSetup.PrintTitleColumns = "$A:$B"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintArea">
      <summary>
            Represents the range to be printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintTitleColumns">
      <summary>
            Represents the columns that contain the cells to be repeated on the left side of each page.
            </summary>
      <example>
        <code>
            [C#]
            
            sheet.PageSetup.PrintTitleColumns = "$A:$A";
            
            [Visula Basic]
            
            sheet.PageSetup.PrintTitleColumns = "$A:$A"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintTitleRows">
      <summary>
            Represents the rows that contain the cells to be repeated at the top of each page.
            </summary>
      <example>
        <code>
            [C#]
            
            sheet.PageSetup.PrintTitleRows = "$1:$1";
            
            [Visula Basic]
            
            sheet.PageSetup.PrintTitleRows = "$1:$1"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.PageSetup.BlackAndWhite">
      <summary>
            Represents if elements of the document will be printed in black and white.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.CenterHorizontally">
      <summary>
            Represent if the sheet is printed centered horizontally.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.CenterVertically">
      <summary>
            Represent if the sheet is printed centered vertically.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintDraft">
      <summary>
            Represents if the sheet will be printed without graphics.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FooterMargin">
      <summary>
            Represents the distance from the bottom of the page to the footer, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FooterMarginInch">
      <summary>
            Represents the distance from the bottom of the page to the footer, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.HeaderMargin">
      <summary>
            Represents the distance from the top of the page to the header, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.HeaderMarginInch">
      <summary>
            Represents the distance from the top of the page to the header, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.LeftMargin">
      <summary>
            Represents the size of the left margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.LeftMarginInch">
      <summary>
            Represents the size of the left margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.RightMargin">
      <summary>
            Represents the size of the right margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.RightMarginInch">
      <summary>
            Represents the size of the right margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.TopMargin">
      <summary>
            Represents the size of the top margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.TopMarginInch">
      <summary>
            Represents the size of the top margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.BottomMargin">
      <summary>
            Represents the size of the bottom margin, in unit of centimeters.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.BottomMarginInch">
      <summary>
            Represents the size of the bottom margin, in unit of inches.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FirstPageNumber">
      <summary>
            Represents the first page number that will be used when this sheet is printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FitToPagesTall">
      <summary>
            Represents  the number of pages tall the worksheet will be scaled to when it's printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.FitToPagesWide">
      <summary>
            Represents the number of pages wide the worksheet will be scaled to when it's printed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.IsPercentScale">
      <summary>
            If this property is False, the FitToPagesWide and FitToPagesTall properties control how the worksheet is scaled.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Order">
      <summary>
            Represents the order that Microsoft Excel uses to number pages when printing a large worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PaperSize">
      <summary>
            Represents the size of the paper.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PaperWidth">
      <summary>
            Represents the width in inches of the paper, considered page orientation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PaperHeight">
      <summary>
            Represents the height in inches of the paper, considered page orientation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Orientation">
      <summary>
            Represents page print orientation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintComments">
      <summary>
            Represents the way comments are printed with the sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintErrors">
      <summary>
            Specifies the type of print error displayed.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintHeadings">
      <summary>
            Represents if row and column headings are printed with this page.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintGridlines">
      <summary>
            Represents if cell gridlines are printed on the page.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.Zoom">
      <summary>
            Represents the scaling factor in percent. It should be between 10 and 400.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.IsAutoFirstPageNumber">
      <summary>
            Indicates whether the first the page number is automatically assigned.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintQuality">
      <summary>
            Represents the print quality.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.PrintCopies">
      <summary>
            Get and sets number of copies to print.
            </summary>
    </member>
    <member name="M:Aspose.Cells.PageSetup.ClearHeaderFooter">
      <summary>
            Clears header and footer setting.
            </summary>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetHeader(System.Int32)">
      <summary>
             Gets a script formatting the header of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetCommands(System.String)">
      <summary>
            Gets all commands of header or footer.
            </summary>
      <param name="headerFooterScript">The header/footer script</param>
      <returns>Returns all commands of header or footer.</returns>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetFooter(System.Int32)">
      <summary>
             Gets a script formatting the footer of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetHeader(System.Int32,System.String)">
      <summary>
             Sets a script formatting the header of an Excel file.
             </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="headerScript">Header format script.</param>
      <remarks>
        <p>Script commands:</p>
        <table class="dtTABLE" cellspacing="0">
          <tr>
            <td width="25%">
              <font color="gray">
                <b>Command</b>
              </font>¡¡</td>
            <td width="75%">
              <font color="gray">
                <b>Description</b>
              </font>¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;P</td>
            <td width="75%">Current page number¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;N</td>
            <td width="75%">Page count¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;D</td>
            <td width="75%">Current date¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;T</td>
            <td width="75%">Current time</td>
          </tr>
          <tr>
            <td width="25%">&amp;A</td>
            <td width="75%">Sheet name</td>
          </tr>
          <tr>
            <td width="25%">&amp;F</td>
            <td width="75%">File name without path</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;"</td>
            <td width="75%">Font name, for exampe: &amp;"Arial"</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;, &lt;FontStyle&gt;"</td>
            <td width="75%">Font name and font style, for exampe: &amp;"Arial,Bold"</td>
          </tr>
          <tr>
            <td width="25%">&amp;&lt;FontSize&gt;</td>
            <td width="75%">Font size. If this command is followed by a plain number to be printed in the header, it will be separated from the font height with a space character.</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;K"</td>
            <td width="75%">Font color, for exampe(RED): &amp;FF0000</td>
          </tr>
          <tr>
            <td width="25%">&amp;G</td>
            <td width="75%">Image script</td>
          </tr>
        </table>
            For example: "&amp;Arial,Bold&amp;8Header Note"
             </remarks>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetFooter(System.Int32,System.String)">
      <summary>
             Sets a script formatting the footer of an Excel file.
             </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="footerScript">Footer format script.</param>
      <remarks>
        <p>Script commands:</p>
        <table class="dtTABLE" cellspacing="0">
          <tr>
            <td width="25%">
              <font color="gray">
                <b>Command</b>
              </font>¡¡</td>
            <td width="75%">
              <font color="gray">
                <b>Description</b>
              </font>¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;P</td>
            <td width="75%">Current page number¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;N</td>
            <td width="75%">Page count¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;D</td>
            <td width="75%">Current date¡¡</td>
          </tr>
          <tr>
            <td width="25%">&amp;T</td>
            <td width="75%">Current time</td>
          </tr>
          <tr>
            <td width="25%">&amp;A</td>
            <td width="75%">Sheet name</td>
          </tr>
          <tr>
            <td width="25%">&amp;F</td>
            <td width="75%">File name without path</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;"</td>
            <td width="75%">Font name, for exampe: &amp;"Arial"</td>
          </tr>
          <tr>
            <td width="25%">&amp;"&lt;FontName&gt;, &lt;FontStyle&gt;"</td>
            <td width="75%">Font name and font style, for exampe: &amp;"Arial,Bold"</td>
          </tr>
          <tr>
            <td width="25%">&amp;&lt;FontSize&gt;</td>
            <td width="75%">Font size. If this command is followed by a plain number to be printed in the header, it will be separated from the font height with a space character.</td>
          </tr>
          <tr>
            <td width="25%">&amp;G</td>
            <td width="75%">Image script</td>
          </tr>
        </table>
            For example: "&amp;Arial,Bold&amp;8Footer Note"
             </remarks>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetEvenHeader(System.Int32,System.String)">
      <summary>
             Sets a script formatting the even page header of an Excel file.
            Only effect in Excel 2007 when IsHFDiffOddEven is true.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="headerScript">Header format script.</param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetEvenHeader(System.Int32)">
      <summary>
             Gets a script formatting the even header of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetEvenFooter(System.Int32,System.String)">
      <summary>
             Sets a script formatting the even page footer of an Excel file.
            Only effect in Excel 2007 when IsHFDiffOddEven is true.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="footerScript">Footer format script.</param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetEvenFooter(System.Int32)">
      <summary>
             Gets a script formatting the even footer of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetFirstPageHeader(System.Int32,System.String)">
      <summary>
             Sets a script formatting the first page header of an Excel file.
            Only effect in Excel 2007 when IsHFDiffFirst is true.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="headerScript">Header format script.</param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetFirstPageHeader(System.Int32)">
      <summary>
             Gets a script formatting the first page header of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.SetFirstPageFooter(System.Int32,System.String)">
      <summary>
             Sets a script formatting the first page footer of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
      <param name="footerScript">Footer format script.</param>
    </member>
    <member name="M:Aspose.Cells.PageSetup.GetFirstPageFooter(System.Int32)">
      <summary>
             Gets a script formatting the first page footer of an Excel file.
            </summary>
      <param name="section">
        <p>0:Left Section.</p>
        <p>1:Center Section</p>
        <p>2:Right Section</p>
      </param>
    </member>
    <member name="P:Aspose.Cells.PageSetup.IsHFDiffOddEven">
      <summary>
            True means that the header/footer of the odd pages is different with odd pages.
            </summary>
    </member>
    <!-- Badly formed XML comment ignored for member "P:Aspose.Cells.PageSetup.IsHFDiffFirst" -->
    <member name="P:Aspose.Cells.PageSetup.IsHFScaleWithDoc">
      <summary>
            Indicates whether header and footer are scaled with document scaling.
            Only applies for Excel 2007.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PageSetup.IsHFAlignMargins">
      <summary>
            Indicates whether header and footer margins are aligned with the page margins.
            Only applies for Excel 2007.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PaneCollection">
      <summary>
            Represents all Pane objects shown in the specified window.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PaneCollection.FirstVisibleRowOfBottomPane">
      <summary>
            Gets and sets the first visible row of the bottom pane.
            </summary>
    </member>
    <member name="P:Aspose.Cells.PaneCollection.FirstVisibleColumnOfRightPane">
      <summary>
            Gets and sets the first visible column of the right pane.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PaperSizeType">
      <summary>
            Represents paper size constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetter">
      <summary>
            Letter (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterSmall">
      <summary>
            Letter Small (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperTabloid">
      <summary>
            Tabloid (11 in. x 17 in.) 
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLedger">
      <summary>
            Ledger (17 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLegal">
      <summary>
            Legal (8-1/2 in. x 14 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperStatement">
      <summary>
            Statement (5-1/2 in. x 8-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperExecutive">
      <summary>
            Executive (7-1/4 in. x 10-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3">
      <summary>
            A3 (297 mm x 420 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4">
      <summary>
            A4 (210 mm x 297 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Small">
      <summary>
            A4 Small (210 mm x 297 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA5">
      <summary>
            A5 (148 mm x 210 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperB4">
      <summary>
            JIS B4 (257 mm x 364 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperB5">
      <summary>
            JIS B5 (182 mm x 257 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFolio">
      <summary>
            Folio (8-1/2 in. x 13 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperQuarto">
      <summary>
            Quarto (215 mm x 275 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper10x14">
      <summary>
            10 in. x 14 in.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper11x17">
      <summary>
            11 in. x 17 in.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperNote">
      <summary>
            Note (8-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope9">
      <summary>
            Envelope #9 (3-7/8 in. x 8-7/8 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope10">
      <summary>
            Envelope #10 (4-1/8 in. x 9-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope11">
      <summary>
            Envelope #11 (4-1/2 in. x 10-3/8 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope12">
      <summary>
            Envelope #12 (4-1/2 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelope14">
      <summary>
            Envelope #14 (5 in. x 11-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperCSheet">
      <summary>
            C size sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperDSheet">
      <summary>
            D size sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperESheet">
      <summary>
            E size sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeDL">
      <summary>
            Envelope DL (110 mm x 220 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC5">
      <summary>
            Envelope C5 (162 mm x 229 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC3">
      <summary>
            Envelope C3 (324 mm x 458 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC4">
      <summary>
            Envelope C4 (229 mm x 324 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC6">
      <summary>
            Envelope C6 (114 mm x 162 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeC65">
      <summary>
            Envelope C65 (114 mm x 229 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeB4">
      <summary>
            Envelope B4 (250 mm x 353 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeB5">
      <summary>
            Envelope B5 (176 mm x 250 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeB6">
      <summary>
            Envelope B6 (176 mm x 125 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeItaly">
      <summary>
            Envelope Italy (110 mm x 230 mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeMonarch">
      <summary>
            Envelope Monarch (3-7/8 in. x 7-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopePersonal">
      <summary>
            Envelope (3-5/8 in. x 6-1/2 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFanfoldUS">
      <summary>
            U.S. Standard Fanfold (14-7/8 in. x 11 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFanfoldStdGerman">
      <summary>
            German Standard Fanfold (8-1/2 in. x 12 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperFanfoldLegalGerman">
      <summary>
            German Legal Fanfold (8-1/2 in. x 13 in.)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperISOB4">
      <summary>
            B4 (ISO) 250 x 353 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapanesePostcard">
      <summary>
            Japanese Postcard (100mm ¡Á 148mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper9x11">
      <summary>
            9? ¡Á 11?
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper10x11">
      <summary>
            10? ¡Á 11?
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper15x11">
      <summary>
            15? ¡Á 11?
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperEnvelopeInvite">
      <summary>
            Envelope Invite(220mm ¡Á 220mm)
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterExtra">
      <summary>
            US Letter Extra 9 \275 x 12 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLegalExtra">
      <summary>
            US Legal Extra 9 \275 x 15 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperTabloidExtra">
      <summary>
            US Tabloid Extra 11.69 x 18 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Extra">
      <summary>
            A4 Extra 9.27 x 12.69 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterTransverse">
      <summary>
            Letter Transverse 8 \275 x 11 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Transverse">
      <summary>
            A4 Transverse 210 x 297 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterExtraTransverse">
      <summary>
            Letter Extra Transverse 9\275 x 12 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperSuperA">
      <summary>
            SuperA/SuperA/A4 227 x 356 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperSuperB">
      <summary>
            SuperB/SuperB/A3 305 x 487 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterPlus">
      <summary>
            US Letter Plus 8.5 x 12.69 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Plus">
      <summary>
            A4 Plus 210 x 330 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA5Transverse">
      <summary>
            A5 Transverse 148 x 210 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJISB5Transverse">
      <summary>
            B5 (JIS) Transverse 182 x 257 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3Extra">
      <summary>
            A3 Extra 322 x 445 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA5Extra">
      <summary>
            A5 Extra 174 x 235 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperISOB5Extra">
      <summary>
            B5 (ISO) Extra 201 x 276 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA2">
      <summary>
            A2 420 x 594 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3Transverse">
      <summary>
            A3 Transverse 297 x 420 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3ExtraTransverse">
      <summary>
            A3 Extra Transverse 322 x 445 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseDoublePostcard">
      <summary>
            Japanese Double Postcard 200 x 148 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA6">
      <summary>
            A6 105 x 148 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeKaku2">
      <summary>
            Japanese Envelope Kaku #2
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeKaku3">
      <summary>
            Japanese Envelope Kaku #3
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeChou3">
      <summary>
            Japanese Envelope Chou #3
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeChou4">
      <summary>
            Japanese Envelope Chou #4
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperLetterRotated">
      <summary>
            11in ¡Á 8.5in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA3Rotated">
      <summary>
            420mm ¡Á 297mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA4Rotated">
      <summary>
            297mm ¡Á 210mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA5Rotated">
      <summary>
            210mm ¡Á 148mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJISB4Rotated">
      <summary>
            B4 (JIS) Rotated 364 x 257 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJISB5Rotated">
      <summary>
            B5 (JIS) Rotated 257 x 182 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapanesePostcardRotated">
      <summary>
            Japanese Postcard Rotated 148 x 100 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseDoublePostcardRotated">
      <summary>
            Double Japanese Postcard Rotated 148 x 200 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperA6Rotated">
      <summary>
            A6 Rotated 148 x 105 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeKaku2Rotated">
      <summary>
            Japanese Envelope Kaku #2 Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeKaku3Rotated">
      <summary>
            Japanese Envelope Kaku #3 Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeChou3Rotated">
      <summary>
            Japanese Envelope Chou #3 Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeChou4Rotated">
      <summary>
            Japanese Envelope Chou #4 Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJISB6">
      <summary>
            B6 (JIS) 128 x 182 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJISB6Rotated">
      <summary>
            B6 (JIS) Rotated 182 x 128 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.Paper12x11">
      <summary>
            12 x 11 in
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeYou4">
      <summary>
            Japanese Envelope You #4
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperJapaneseEnvelopeYou4Rotated">
      <summary>
            Japanese Envelope You #4 Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRC16K">
      <summary>
            PRC 16K 146 x 215 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRC32K">
      <summary>
            PRC 32K 97 x 151 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCBig32K">
      <summary>
            PRC 32K(Big) 97 x 151 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope1">
      <summary>
            PRC Envelope #1 102 x 165 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope2">
      <summary>
            PRC Envelope #2 102 x 176 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope3">
      <summary>
            PRC Envelope #3 125 x 176 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope4">
      <summary>
            PRC Envelope #4 110 x 208 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope5">
      <summary>
            PRC Envelope #5 110 x 220 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope6">
      <summary>
            PRC Envelope #6 120 x 230 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope7">
      <summary>
            PRC Envelope #7 160 x 230 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope8">
      <summary>
            PRC Envelope #8 120 x 309 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope9">
      <summary>
            PRC Envelope #9 229 x 324 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope10">
      <summary>
            PRC Envelope #10 324 x 458 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRC16KRotated">
      <summary>
            PRC 16K Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRC32KRotated">
      <summary>
            PRC 32K Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCBig32KRotated">
      <summary>
            PRC 32K(Big) Rotated
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope1Rotated">
      <summary>
            PRC Envelope #1 Rotated 165 x 102 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope2Rotated">
      <summary>
            PRC Envelope #2 Rotated 176 x 102 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope3Rotated">
      <summary>
            PRC Envelope #3 Rotated 176 x 125 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope4Rotated">
      <summary>
            PRC Envelope #4 Rotated 208 x 110 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope5Rotated">
      <summary>
            PRC Envelope #5 Rotated 220 x 110 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope6Rotated">
      <summary>
            PRC Envelope #6 Rotated 230 x 120 mm
            </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope7Rotated">
      <summary>
            PRC Envelope #7 Rotated 230 x 160 mm
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope8Rotated">
      <summary>
            PRC Envelope #8 Rotated 309 x 120 mm
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope9Rotated">
      <summary>
            PRC Envelope #9 Rotated 324 x 229 mm
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperPRCEnvelope10Rotated">
      <summary>
            PRC Envelope #10 Rotated 458 x 324 mm
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperB3">
      <summary>
            usual B3(13.9 x 19.7 in)
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperBusinessCard">
      <summary>
            Business Card(90mm x 55 mm)
             </summary>
    </member>
    <member name="F:Aspose.Cells.PaperSizeType.PaperThermal">
      <summary>
            Thermal(3 x 11 in)
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintCommentsType">
      <summary>
            Represents the way comments are printed with the sheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintCommentsType.PrintInPlace">
      <summary>
            Represents to print comments as displayed on sheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintCommentsType.PrintNoComments">
      <summary>
            Represents not to print comments.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintCommentsType.PrintSheetEnd">
      <summary>
            Represents to print comments at end of sheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintErrorsType">
      <summary>
            Represents print errors constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsBlank">
      <summary>
            Represents not to print errors.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsDash">
      <summary>
            Represents to print errors as "--".
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsDisplayed">
      <summary>
            Represents to print errors as displayed.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintErrorsType.PrintErrorsNA">
      <summary>
            Represents to print errors as "#N/A".
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintOrderType">
      <summary>
            Represent print order constants.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintOrderType.DownThenOver">
      <summary>
            Down, then over
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintOrderType.OverThenDown">
      <summary>
            Over, then down
            </summary>
    </member>
    <member name="T:Aspose.Cells.PrintSizeType">
      <summary>
            Represents the printed chart size.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintSizeType.Full">
      <summary>
            Use full page.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintSizeType.Fit">
      <summary>
            Scale to fit page.
            </summary>
    </member>
    <member name="F:Aspose.Cells.PrintSizeType.Custom">
      <summary>
            InnerCustom.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Protection">
      <summary>
            Represents the various types of protection options available for a worksheet. 
            Only used in ExcelXP and above version.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Allowing users to select locked cells of the worksheet
            worksheet.Protection.AllowSelectingLockedCell = true;
            //Allowing users to select unlocked cells of the worksheet
            worksheet.Protection.AllowSelectingUnlockedCell = true;  
            
            [Visual Basic]
            
            'Allowing users to select locked cells of the worksheet
            worksheet.Protection.AllowSelectingLockedCell = True
            'Allowing users to select unlocked cells of the worksheet
            worksheet.Protection.AllowSelectingUnlockedCell = True
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Protection.Copy(Aspose.Cells.Protection)">
      <summary>
            Copy protection info.
            </summary>
      <param name="source">
      </param>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowDeletingColumn">
      <summary>
            Represents if the deletion of columns is allowed on a protected worksheet.
            </summary>
      <remarks>The columns containing the cells to be deleted must be unlocked when the sheet is protected,
            and "Select unlocked cells" option must be enabled. </remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.IsDeletingColumnsAllowed">
      <summary>
            Represents if the deletion of columns is allowed on a protected worksheet.
            </summary>
      <remarks>The columns containing the cells to be deleted must be unlocked when the sheet is protected,
            and "Select unlocked cells" option must be enabled. </remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowDeletingColumn property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowDeletingRow">
      <summary>
            Represents if the deletion of rows is allowed on a protected worksheet.
            </summary>
      <remarks>The rows containing the cells to be deleted must be unlocked when the sheet is protected,
            and "Select unlocked cells" option must be enabled. </remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.IsDeletingRowsAllowed">
      <summary>
            Represents if the deletion of rows is allowed on a protected worksheet.
            </summary>
      <remarks>The rows containing the cells to be deleted must be unlocked when the sheet is protected,
            and "Select unlocked cells" option must be enabled. </remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowDeletingRow property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowFiltering">
      <summary>
            Represents if the user is allowed to make use of an AutoFilter that was created before the sheet was protected. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFilteringAllowed">
      <summary>
            Represents if the user is allowed to make use of an AutoFilter that was created before the sheet was protected. 
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowFiltering property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowFormattingCell">
      <summary>
            Represents if the formatting of cells is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFormattingCellsAllowed">
      <summary>
            Represents if the formatting of cells is allowed on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowFormattingCell property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowFormattingColumn">
      <summary>
            Represents if the formatting of columns is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFormattingColumnsAllowed">
      <summary>
            Represents if the formatting of columns is allowed on a protected worksheet
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowFormattingColumn property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowFormattingRow">
      <summary>
            Represents if the formatting of rows is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsFormattingRowsAllowed">
      <summary>
            Represents if the formatting of rows is allowed on a protected worksheet
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowFormattingRow property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowInsertingColumn">
      <summary>
            Represents if the insertion of columns is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsInsertingColumnsAllowed">
      <summary>
            Represents if the insertion of columns is allowed on a protected worksheet
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowInsertingColumn property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowInsertingHyperlink">
      <summary>
            Represents if the insertion of hyperlinks is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsInsertingHyperlinksAllowed">
      <summary>
            Represents if the insertion of hyperlinks is allowed on a protected worksheet
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowInsertingHyperlink property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowInsertingRow">
      <summary>
            Represents if the insertion of rows is allowed on a protected worksheet
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsInsertingRowsAllowed">
      <summary>
            Represents if the insertion of rows is allowed on a protected worksheet
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowInsertingRow property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowSorting">
      <summary>
            Represents if the sorting option is allowed on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsSortingAllowed">
      <summary>
            Represents if the sorting option is allowed on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowSorting property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowUsingPivotTable">
      <summary>
            Represents if the user is allowed to manipulate pivot tables on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsUsingPivotTablesAllowed">
      <summary>
            Represents if the user is allowed to manipulate pivot tables on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowUsingPivotTable property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowEditingContent">
      <summary>
            Represents if the user is allowed to edit contents of locked cells on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsEditingContentsAllowed">
      <summary>
            Represents if the user is allowed to edit contents of locked cells on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowEditingContent property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowEditingObject">
      <summary>
            Represents if the user is allowed to manipulate drawing objects on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsEditingObjectsAllowed">
      <summary>
            Represents if the user is allowed to manipulate drawing objects on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowEditingObject property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowEditingScenario">
      <summary>
            Represents if the user is allowed to edit scenarios on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsEditingScenariosAllowed">
      <summary>
            Represents if the user is allowed to edit scenarios on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowEditingScenario property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.Password">
      <summary>
            Represents the password to protect the worksheet.
            </summary>
      <remarks>
            If password is set to null or blank string, you can unprotect the worksheet or workbook without using a password. Otherwise, you must specify the password to unprotect the worksheet or workbook.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Protection.GetPasswordHash">
      <summary>
            Gets the hash of current password.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsProtectedWithPassword">
      <summary>
            Indicates whether the worksheets is protected with password.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Protection.VerifyPassword(System.String)">
      <summary>
             Verifies password.
            </summary>
      <param name="password">The password.</param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowSelectingLockedCell">
      <summary>
            Represents if the user is allowed to select locked cells on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsSelectingLockedCellsAllowed">
      <summary>
            Represents if the user is allowed to select locked cells on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowSelectingLockedCell property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Protection.AllowSelectingUnlockedCell">
      <summary>
            Represents if the user is allowed to select unlocked cells on a protected worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Protection.IsSelectingUnlockedCellsAllowed">
      <summary>
            Represents if the user is allowed to select unlocked cells on a protected worksheet.
            </summary>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Protection.AllowSelectingUnlockedCell property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="T:Aspose.Cells.ProtectionType">
      <summary>
            Represents workbook/worksheet protection type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.All">
      <summary>
            Represents to protect all.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Contents">
      <summary>
            Represents to protect contents, used in Worksheet protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Objects">
      <summary>
            Represents to protect objects, used in Worksheet protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Scenarios">
      <summary>
            Represents to protect scenarios, used in Worksheet protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Structure">
      <summary>
            Represents to protect structure, used in Workbook protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.Windows">
      <summary>
            Represents to protect window, used in Workbook protection.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ProtectionType.None">
      <summary>
            Represents no protection. Only for Reading property.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Range">
      <summary>
            Encapsulates the object that represents a range of cells within a spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Range.GetEnumerator">
      <summary>
            Gets the cells enumerator
            </summary>
      <returns>The cells enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.Range.IsIntersect(Aspose.Cells.Range)">
      <summary>
            Indicates whether the range is intersect.
            </summary>
      <param name="range">The range.</param>
      <returns> Whether the range is intersect.</returns>
      <remarks>If the two rangs are not in the same worksheet, return false.</remarks>
    </member>
    <member name="M:Aspose.Cells.Range.Intersect(Aspose.Cells.Range)">
      <summary>
            Returns a Range object that represents the rectangular intersection of two ranges.
            </summary>
      <param name="range">The intersecting range.</param>
      <returns>a Range object</returns>
      <remarks>If the two ranges are not intersected, returns null.</remarks>
    </member>
    <member name="M:Aspose.Cells.Range.Union(Aspose.Cells.Range)">
      <summary>
            Returns the union of two ranges.
            </summary>
      <param name="range">The range</param>
      <returns>The union of two ranges.
            </returns>
    </member>
    <member name="P:Aspose.Cells.Range.RowCount">
      <summary>
            Gets the count of rows in the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.ColumnCount">
      <summary>
            Gets the count of columns in the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.Name">
      <summary>
            Gets or sets the name of the range.
            </summary>
      <remarks>Named range is supported. For example,
            <p>range.Name = "Sheet1!MyRange";</p></remarks>
    </member>
    <member name="P:Aspose.Cells.Range.RefersTo">
      <summary>
            Gets the range's refers to.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.FirstRow">
      <summary>
            Gets the index of the first row of the range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.FirstColumn">
      <summary>
            Gets the index of the first column of the range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Range.Merge">
      <summary>
             Combines a range of cells into a single cell. 		
             </summary>
      <remarks>
             Reference the merged cell via the address of the upper-left cell in the range.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Range.UnMerge">
      <summary>
            Unmerges merged cells of this range.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Range.PutValue(System.String,System.Boolean,System.Boolean)">
      <summary>
            Puts a value into the range, if appropriate the value will be converted to other data type and cell's number format will be reset.
            </summary>
      <param name="stringValue">Input value</param>
      <param name="isConverted">True: converted to other data type if appropriate.</param>
      <param name="setStyle">True: set the number format to cell's style when converting to other data type</param>
    </member>
    <member name="P:Aspose.Cells.Range.Value">
      <summary>
            Gets and sets the value of the range.
            </summary>
      <remarks>
            If the range contains multiple cells, return a two-dimension <see cref="T:System.Array" /> object.
            If applies object array to the range, it should be a two-dimension <see cref="T:System.Array" /> object.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Range.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formats for a whole range.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
      <remarks>Each cell in this range will contains a <see cref="T:Aspose.Cells.Style" /> object. 
            So this is a memory-consuming method. Please use it carefully.</remarks>
    </member>
    <member name="M:Aspose.Cells.Range.SetStyle(Aspose.Cells.Style)">
      <summary>
            Sets the style of the range.
            </summary>
      <param name="style">The Style object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.SetOutlineBorders(Aspose.Cells.CellBorderType,Aspose.Cells.Drawing.Color)">
      <summary>
            Sets the outline borders around a range of cells with same border style and color.
            </summary>
      <param name="borderStyle">Border style.</param>
      <param name="borderColor">Border color.</param>
    </member>
    <member name="M:Aspose.Cells.Range.SetOutlineBorders(Aspose.Cells.CellBorderType[],Aspose.Cells.Drawing.Color[])">
      <summary>
            Sets out line borders around a range of cells.
            </summary>
      <param name="borderStyles">Border styles.</param>
      <param name="borderColors">Border colors.</param>
      <remarks>
            Both the length of borderStyles and borderStyles must be 4.
            The order of of borderStyles and borderStyles must be top,bottom,left,right
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Range.SetOutlineBorder(Aspose.Cells.BorderType,Aspose.Cells.CellBorderType,Aspose.Cells.Drawing.Color)">
      <summary>
            Sets outline border around a range of cells.
            </summary>
      <param name="borderEdge">Border edge.</param>
      <param name="borderStyle">Border style.</param>
      <param name="borderColor">Border color.</param>
    </member>
    <member name="P:Aspose.Cells.Range.ColumnWidth">
      <summary>
             Sets or gets the column width of this range
            </summary>
    </member>
    <member name="P:Aspose.Cells.Range.RowHeight">
      <summary>
            Sets or gets the height of rows in this range
            </summary>
    </member>
    <member name="M:Aspose.Cells.Range.MoveTo(System.Int32,System.Int32)">
      <summary>
            Move the current range to the dest range.
            </summary>
      <param name="destRow">The start row of the dest range.</param>
      <param name="destColumn">The start column of the dest range.</param>
    </member>
    <member name="M:Aspose.Cells.Range.CopyData(Aspose.Cells.Range)">
      <summary>
            Copies cell data (including formulas) from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.CopyValue(Aspose.Cells.Range)">
      <summary>
            Copies cell value from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.CopyStyle(Aspose.Cells.Range)">
      <summary>
            Copies style settings from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="M:Aspose.Cells.Range.Copy(Aspose.Cells.Range,Aspose.Cells.PasteOptions)">
      <summary>
            Copying the range with paste special options.
            </summary>
      <param name="range">The soure range.</param>
      <param name="options">The paste special options.</param>
    </member>
    <member name="M:Aspose.Cells.Range.Copy(Aspose.Cells.Range)">
      <summary>
            Copies data (including formulas), formatting, drawing objects etc. from a source range.
            </summary>
      <param name="range">Source <see cref="T:Aspose.Cells.Range" /> object.</param>
    </member>
    <member name="P:Aspose.Cells.Range.Item(System.Int32,System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Cell" /> object in this range.
            </summary>
      <param name="rowIndex">Row index in this range, zero based.</param>
      <param name="columnIndex">Column index in this range, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.Cell" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.Range.GetCellOrNull(System.Int32,System.Int32)">
      <summary>
            Gets <see cref="T:Aspose.Cells.Cell" /> object or null in this range.
            </summary>
      <param name="rowIndex">Row index in this range, zero based.</param>
      <param name="columnIndex">Column index in this range, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.Cell" /> object.</returns>
    </member>
    <member name="P:Aspose.Cells.Range.Worksheet">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Range.Worksheet" />object which contains this range.
            </summary>
    </member>
    <member name="T:Aspose.Cells.RangeCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Range" /> objects.
            </summary>
    </member>
    <member name="P:Aspose.Cells.RangeCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Range" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:Aspose.Cells.RangeCollection.Add(Aspose.Cells.Range)">
      <summary>
            Adds a <see cref="T:Aspose.Cells.Range" /> item to the collection.
            </summary>
      <param name="range">Range object</param>
      <returns>
      </returns>
    </member>
    <member name="T:Aspose.Cells.Row">
      <summary>
            Represents a single row in a worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Row.GetCellByIndex(System.Int32)">
      <summary>
            Get the cell by specific index in the list.
            </summary>
      <param name="index">The position.</param>
      <returns>The Cell object.</returns>
      <remarks>NOTE: This member is now obsolete. 
            Instead, please use Row.GetEnumerator() method to iterate all cells in this row.
            This property will be removed 12 months later since February 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Row.IsBlank">
      <summary>
            Indicates whether the row contains any data
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.Item(System.Int32)">
      <summary>
            Gets the cell.
            </summary>
      <param name="column">The column index</param>
      <returns>
      </returns>
    </member>
    <member name="M:Aspose.Cells.Row.GetEnumerator">
      <summary>
            Gets the cells enumerator
            </summary>
      <returns>The cells enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.Row.GetCellOrNull(System.Int32)">
      <summary>
            Gets the cell or null in the specific index.
            </summary>
      <param name="column">The column index</param>
      <returns>Returns the cell object if the cell exists.
            Or returns null if the cell object does not exist.</returns>
    </member>
    <member name="P:Aspose.Cells.Row.Height">
      <summary>
            Gets and sets the row height in unit of Points.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.IsHidden">
      <summary>
            Indicates whether the row is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.Index">
      <summary>
            Gets the index of this row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.GroupLevel">
      <summary>
            Gets the group level of the row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.IsHeightMatched">
      <summary>
            Indicates that row height and default font height matches
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.Style">
      <summary>
            Represents the style of this row.
            </summary>
      <remarks> You have to call Row.ApplyStyle() method to save your changing with the row style,
            otherwise it will not effect.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Row.FirstCell">
      <summary>
            Gets the first cell in the row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.LastCell">
      <summary>
            Gets the last cell in the row.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Row.LastDataCell">
      <summary>
            Gets the last cell in the row.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Row.ApplyStyle(Aspose.Cells.Style,Aspose.Cells.StyleFlag)">
      <summary>
            Applies formats for a whole row.
            </summary>
      <param name="style">The style object which will be applied.</param>
      <param name="flag">Flags which indicates applied formatting properties.</param>
    </member>
    <member name="M:Aspose.Cells.Row.Equals(Aspose.Cells.Row)">
      <summary>
            Checks whether this object refers to the same row with another row object.
            </summary>
      <param name="row">another row object</param>
      <returns>true if two row objects refers to the same row.</returns>
    </member>
    <member name="T:Aspose.Cells.RowCollection">
      <summary>
            Collects the <seealso cref="T:Aspose.Cells.Row" /> objects that represent the individual rows in a worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.RowCollection.Count">
      <summary>
            Gets the number of rows in this collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.RowCollection.GetEnumerator">
      <summary>
            Gets an enumerator that iterates through this collection
            </summary>
      <returns>enumerator</returns>
    </member>
    <member name="M:Aspose.Cells.RowCollection.GetRowByIndex(System.Int32)">
      <summary>
            Gets the row object by the position in the list.
            </summary>
      <param name="index">The position.</param>
      <returns>The Row object at given position.</returns>
    </member>
    <member name="P:Aspose.Cells.RowCollection.Item(System.Int32)">
      <summary>
            Gets a <seealso cref="T:Aspose.Cells.Row" /> object by given row index. The Row object of given row index will be instantiated if it does not exist before.
            </summary>
    </member>
    <member name="M:Aspose.Cells.RowCollection.Clear">
      <summary>
            Clear all rows and cells.
            </summary>
    </member>
    <member name="M:Aspose.Cells.RowCollection.RemoveAt(System.Int32)">
      <summary>
            Remove the row at the specified index
            </summary>
      <param name="index">zero-based row index</param>
    </member>
    <member name="T:Aspose.Cells.SaveOptions">
      <summary>
            Represents all save options
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveOptions.m_SaveFormat">
      <summary>
      </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.SaveFormat">
      <summary>
            Gets the save file format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.ClearData">
      <summary>
            Make the workbook empty after saving the file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.CachedFileFolder">
      <summary>
            The cached file folder is used to store some large data.
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.ValidateMergedAreas">
      <summary>
            Indicates whether validate merged cells before saving the file.
            </summary>
      <remarks>
            The default value is false.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.MergeAreas">
      <summary>
            Indicates whether merge the areas of conditional formatting and validation before saving the file.
            </summary>
      <remarks>
            The default value is false.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.CreateDirectory">
      <summary>
            If true and the directory does not exist, the directory will be automatically created before saving the file.
            </summary>
      <remarks>
            The default value is false.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.SortNames">
      <summary>
            Indicates whether sorting defined names before saving file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.RefreshChartCache">
      <summary>
            Indicates whether refreshing chart cache data
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.PdfExportImagesFolder">
      <summary>
            The physical folder where images will be saved when exporting a workbook to Aspose.Pdf XML format.
            Default is an empty string. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.EnableHTTPCompression">
      <summary>
            Indicates if http compression is to be used in user's IIS.
            </summary>
      <remarks>Please specify this property to true if http compression is used.</remarks>
    </member>
    <member name="P:Aspose.Cells.SaveOptions.WarningCallback">
      <summary>
            Gets or sets warning callback.
            </summary>
    </member>
    <member name="T:Aspose.Cells.SaveType">
      <summary>
            Enumerates spreadsheet creation and saving types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveType.Default">
      <summary>
            Writes the spreadsheet directly to the hard disk. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveType.OpenInExcel">
      <summary>
            Returns the spreadsheet as a stream of binary data and 
            asks the user to either save or open it.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SaveType.OpenInBrowser">
      <summary>
            Sends the spreadsheet to browser and opens it in browser. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.SheetType">
      <summary>
            Specifies the worksheet type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.VB">
      <summary>
            Visual Basic module
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.Worksheet">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.Chart">
      <summary>
            Chart
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.BIFF4Macro">
      <summary>
            BIFF4 Macro sheet
            </summary>
    </member>
    <member name="F:Aspose.Cells.SheetType.Other">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.ShiftType">
      <summary>
            Represent the shift options when deleting a range of cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Down">
      <summary>
            Shift cells down.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Left">
      <summary>
            Shift cells left.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.None">
      <summary>
            Do not shift cells.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Right">
      <summary>
            Shift cells right.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ShiftType.Up">
      <summary>
            Shift cells up.
            </summary>
    </member>
    <member name="T:Aspose.Cells.SortOrder">
      <summary>
            Represents sort order for the data range.
            </summary>
    </member>
    <member name="F:Aspose.Cells.SortOrder.Ascending">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.SortOrder.Descending">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.Style">
      <summary>
            Represents display style of excel document,such as font,color,alignment,border,etc.
            </summary>	
            The Style object contains all style attributes (font, number format, alignment, and so on) as properties.
            There are two methods to set a cell's style.	
            <example>	
            //First method
            <code>	
            [C#]
            int styleIndex = excel.CreateStyle();
            Style style = excel.Styles[styleIndex];
            style.Font.Name = "Times New Roman";
            style.Font.Color = Color.Blue;
            for(int i = 0; i &lt; 100; i ++)
            {
            	excel.Worksheets[0].Cells[0, i].SetStyle(style);
            }
            </code>
            //Second method
            <code>	
            [C#]
            Style style =  excel.Worksheets[0].Cells["A1"].GetStyle();
            style.Font.Name = "Times New Roman";
            style.Font.Color = Color.Blue;
            excel.Worksheets[0].Cells["A1"].SetStyle(style);
            </code>
            First method is a fast and efficient way to change several cell-formatting properties on multiple cells at the same time.
            If you want to change a single cell's style properties, second method can be used.
            </example></member>
    <member name="P:Aspose.Cells.Style.BackgroundThemeColor">
      <summary>
            Gets and sets the background theme color.
            </summary>
      <remarks>
            If the background color is not a theme color, NULL will be returned.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.ForegroundThemeColor">
      <summary>
            Gets and sets the foreground theme color.
            </summary>
      <remarks>
            If the forground color is not a theme color, NULL will be returned.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.Name">
      <summary>
            Gets or sets the name of the style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.Pattern">
      <summary>
            Gets or sets the cell background pattern type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.Borders">
      <summary>
            Gets the <see cref="T:Aspose.Cells.BorderCollection" /> of the style.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Style.#ctor">
      <summary>
            Initializes a new instance of the <see cref="T:Aspose.Cells.Style" /> class.
            </summary>
      <remarks>NOTE: This constructor is now obsolete. 
            Instead, please use CellsFactory.CreateStyle() method.
            This property will be removed 6 months later since October 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.BackgroundColor">
      <summary>
            Gets or sets a style's background color.
            </summary>
      <remarks>If you want to set a cell's color, please use Style.ForegroundColor property. 
            Only if the cell style pattern is other than none or solid, this property will take effect.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.BackgroundArgbColor">
      <summary>
            Gets and sets the background color with a 32-bit ARGB value.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.ForegroundColor">
      <summary>
            Gets or sets a style's foreground color.
            </summary>
      <remarks>It means no color setting if Color.Empty is returned.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.ForegroundArgbColor">
      <summary>
            Gets and sets the foreground color with a 32-bit ARGB value.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Style.Copy(Aspose.Cells.Style)">
      <summary>
            Copies data from another style object
            </summary>
      <param name="style">Source Style object</param>
      <remarks>
            This method does not copy the name of the style.
            If you want to copy the name, please call the following codes after copying style:
            destStyle.Name = style.Name.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.ParentStyle">
      <summary>
            Gets the parent style of this style.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Style.Update">
      <summary>
            Apply the named style to the styles of the cells which use this named style.
            It works like clicking the "ok" button after you finished modifying the style.
            Only applies for named style.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Style.IsModified(Aspose.Cells.StyleModifyFlag)">
      <summary>
            Checks whether the specified properties of the style have been modified.
            Used for style of ConditionalFormattings to check whether the specified properties of this style should be used when applying the ConditionalFormattings on a cell.
            </summary>
      <param name="modifyFlag">Style modified flags</param>
      <returns>true if the specified properties have been modified</returns>
    </member>
    <member name="M:Aspose.Cells.Style.Equals(System.Object)">
      <summary>
            Determines whether two Style instances are equal.
            </summary>
      <param name="obj">The Style object to compare with the current Style object. </param>
      <returns>true if the specified Object is equal to the current Object; otherwise, false.
            </returns>
    </member>
    <member name="M:Aspose.Cells.Style.GetHashCode">
      <summary>
            Serves as a hash function for a Style object.
            </summary>
      <returns>A hash code for the current Object.</returns>
      <remarks>This method is only for internal use.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.IndentLevel">
      <summary>
            Represents the m_IndentLevel level for the cell or range. Can only be an integer from 0 to 15.
            </summary>
      <remarks>
            If text horizontal alignment type is set to value other than left or right, m_IndentLevel level will
            be reset to zero.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.Font">
      <summary>
            Gets a <see cref="P:Aspose.Cells.Style.Font" /> object.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.RotationAngle">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <p>0: Not rotated.</p>
        <p>255: Top to Bottom.</p>
        <p>-90: Downward.</p>
        <p>90: Upward.</p>
            You can set 255 or value ranged from -90 to 90.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.Rotation">
      <summary>
            Represents text rotation angle.
            </summary>
      <remarks>
        <p>0: Not rotated.</p>
        <p>255: Top to Bottom.</p>
        <p>-90: Downward.</p>
        <p>90: Upward.</p>
            You can set 255 or value ranged from -90 to 90.</remarks>
      <remarks>NOTE: This member is now obsolete. Instead, 
            please use Style.RotationAngle property. 
            This property will be removed 12 months later since June 2010. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Style.VerticalAlignment">
      <summary>
             Gets or sets the vertical alignment type of the text in a cell. 
             </summary>
    </member>
    <member name="P:Aspose.Cells.Style.HorizontalAlignment">
      <summary>
             Gets or sets the horizontal alignment type of the text in a cell. 
             </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsTextWrapped">
      <summary>
            Gets or sets a value indicating whether the text within a cell is wrapped.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.Number">
      <summary>
             Gets or sets the display format of numbers and dates.
             </summary>
      <remarks>
        <table class="dtTABLE" cellspacing="0">
          <tr>
            <td width="33%">
              <font color="gray">
                <b>Value</b>
              </font>¡¡</td>
            <td width="33%">
              <font color="gray">
                <b>Type</b>
              </font>¡¡</td>
            <td width="33%">
              <font color="gray">
                <b>Format String</b>
              </font>¡¡</td>
          </tr>
          <tr>
            <td width="33%">0</td>
            <td width="33%">General</td>
            <td width="33%">General</td>
          </tr>
          <tr>
            <td width="33%">1</td>
            <td width="33%">Decimal</td>
            <td width="33%">0</td>
          </tr>
          <tr>
            <td width="33%">2</td>
            <td width="33%">Decimal</td>
            <td width="33%">0.00</td>
          </tr>
          <tr>
            <td width="33%">3</td>
            <td width="33%">Decimal</td>
            <td width="33%">#,##0</td>
          </tr>
          <tr>
            <td width="33%">4</td>
            <td width="33%">Decimal</td>
            <td width="33%">#,##0.00</td>
          </tr>
          <tr>
            <td width="33%">5</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0;($#,##0)</td>
          </tr>
          <tr>
            <td width="33%">6</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0;[Red]($#,##0)</td>
          </tr>
          <tr>
            <td width="33%">7</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0.00;($#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">8</td>
            <td width="33%">Currency</td>
            <td width="33%">$#,##0.00;[Red]($#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">9</td>
            <td width="33%">Percentage</td>
            <td width="33%">0%</td>
          </tr>
          <tr>
            <td width="33%">10</td>
            <td width="33%">Percentage</td>
            <td width="33%">0.00%</td>
          </tr>
          <tr>
            <td width="33%">11</td>
            <td width="33%">Scientific</td>
            <td width="33%">0.00E+00</td>
          </tr>
          <tr>
            <td width="33%">12</td>
            <td width="33%">Fraction</td>
            <td width="33%"># ?/?</td>
          </tr>
          <tr>
            <td width="33%">13</td>
            <td width="33%">Fraction</td>
            <td width="33%"># ??/??</td>
          </tr>
          <tr>
            <td width="33%">14</td>
            <td width="33%">Date</td>
            <td width="33%">m/d/yyyy</td>
          </tr>
          <tr>
            <td width="33%">15</td>
            <td width="33%">Date</td>
            <td width="33%">d-mmm-yy</td>
          </tr>
          <tr>
            <td width="33%">16</td>
            <td width="33%">Date</td>
            <td width="33%">d-mmm</td>
          </tr>
          <tr>
            <td width="33%">17</td>
            <td width="33%">Date</td>
            <td width="33%">mmm-yy</td>
          </tr>
          <tr>
            <td width="33%">18</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm AM/PM</td>
          </tr>
          <tr>
            <td width="33%">19</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm:ss AM/PM</td>
          </tr>
          <tr>
            <td width="33%">20</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm</td>
          </tr>
          <tr>
            <td width="33%">21</td>
            <td width="33%">Time</td>
            <td width="33%">h:mm:ss</td>
          </tr>
          <tr>
            <td width="33%">22</td>
            <td width="33%">Time</td>
            <td width="33%">m/d/yyyy h:mm</td>
          </tr>
          <tr>
            <td width="33%">37</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0;(#,##0)</td>
          </tr>
          <tr>
            <td width="33%">38</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0;[Red](#,##0)</td>
          </tr>
          <tr>
            <td width="33%">39</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0.00;(#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">40</td>
            <td width="33%">Accounting</td>
            <td width="33%">#,##0.00;[Red](#,##0.00)</td>
          </tr>
          <tr>
            <td width="33%">41</td>
            <td width="33%">Accounting</td>
            <td width="33%">_ * #,##0_ ;_ * (#,##0)_ ;_ * "-"_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">42</td>
            <td width="33%">Currency</td>
            <td width="33%">_ $* #,##0_ ;_ $* (#,##0)_ ;_ $* "-"_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">43</td>
            <td width="33%">Accounting</td>
            <td width="33%">_ * #,##0.00_ ;_ * (#,##0.00)_ ;_ * "-"??_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">44</td>
            <td width="33%">Currency</td>
            <td width="33%">_ $* #,##0.00_ ;_ $* (#,##0.00)_ ;_ $* "-"??_ ;_ @_</td>
          </tr>
          <tr>
            <td width="33%">45</td>
            <td width="33%">Time</td>
            <td width="33%">mm:ss</td>
          </tr>
          <tr>
            <td width="33%">46</td>
            <td width="33%">Time</td>
            <td width="33%">[h]:mm:ss</td>
          </tr>
          <tr>
            <td width="33%">47</td>
            <td width="33%">Time</td>
            <td width="33%">mm:ss.0</td>
          </tr>
          <tr>
            <td width="33%">48</td>
            <td width="33%">Scientific</td>
            <td width="33%">##0.0E+00</td>
          </tr>
          <tr>
            <td width="33%">49</td>
            <td width="33%">Text</td>
            <td width="33%">@</td>
          </tr>
        </table>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Style.SetBorder(Aspose.Cells.BorderType,Aspose.Cells.CellBorderType,Aspose.Cells.Drawing.Color)">
      <summary>
            Sets the border of the style.
            </summary>
      <param name="borderEdge">
      </param>
      <param name="borderStyle">
      </param>
      <param name="borderColor">
      </param>
      <returns>
      </returns>
    </member>
    <member name="P:Aspose.Cells.Style.IsLocked">
      <summary>
             Gets or sets a value indicating whether a cell can be modified or not.
             </summary>
      <remarks>Locking cells has no effect unless the worksheet is protected. </remarks>
    </member>
    <member name="M:Aspose.Cells.Style.SetCustom(System.String,System.Boolean)">
      <summary>
            Sets the Custom number format string of a cell.
            </summary>
      <param name="custom">_Custom number format string, should be InvariantCulture pattern.</param>
      <param name="builtinPreference">If given Custom number format string matches one of the built-in number formats
            corresponding to current regional settings, whether set the number format as built-in instead of _Custom.</param>
    </member>
    <member name="P:Aspose.Cells.Style.Custom">
      <summary>
            Represents the Custom number format string of a cell.
            If the Custom number format is not set, we will return "".
            </summary>
      <remarks>
            It should be InvariantCulture .
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.CultureCustom">
      <summary>
            Gets and sets the culture Custom number format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsFormulaHidden">
      <summary>
            Represents if the formula will be hidden when the worksheet is protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.ShrinkToFit">
      <summary>
            Represents if text automatically shrinks to fit in the available column width.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.TextDirection">
      <summary>
             Represents text reading order.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsJustifyDistributed">
      <summary>
            Indicates if the cells justified or distributed alignment should be used on the last line of text.     
            </summary>
      <remarks>
            This is typical for East Asian alignments but not typical in other contexts.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Style.QuotePrefix">
      <summary>
            Indicates whether the cell's value starts with single quote mark.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsGradient">
      <summary>
            Indicates whether the cell shading is a gradient pattern.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Style.SetTwoColorGradient(Aspose.Cells.Drawing.Color,Aspose.Cells.Drawing.Color,Aspose.Cells.Drawing.GradientStyleType,System.Int32)">
      <summary>
            Sets the specified fill to a two-color gradient.
            </summary>
      <param name="color1">One gradient color.</param>
      <param name="color2">Two gradient color.</param>
      <param name="gradientStyleType">Gradient shading style.</param>
      <param name="variant">The gradient variant. Can be a value from 1 through 4, corresponding to one of the four variants on the Gradient tab in the Fill Effects dialog box. If style is GradientStyle.FromCenter, the Variant argument can only be 1 or 2.</param>
    </member>
    <member name="M:Aspose.Cells.Style.GetTwoColorGradient(Aspose.Cells.Drawing.Color@,Aspose.Cells.Drawing.Color@,Aspose.Cells.Drawing.GradientStyleType@,System.Int32@)">
      <summary>
            Get the two-color gradient setting.
            </summary>
      <param name="color1">One gradient color.</param>
      <param name="color2">Two gradient color.</param>
      <param name="gradientStyleType">Gradient shading style.</param>
      <param name="variant">The gradient variant.</param>
    </member>
    <member name="P:Aspose.Cells.Style.IsPercent">
      <summary>
            Indicates whether the number format is a percent format.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Style.IsDateTime">
      <summary>
            Indicates whether the number format is a date format.
            </summary>
    </member>
    <member name="T:Aspose.Cells.StyleFlag">
      <summary>
            Represents flags which indicates applied formatting properties.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.All">
      <summary>
            All properties will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.Borders">
      <summary>
            All borders settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.LeftBorder">
      <summary>
            Left border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.RightBorder">
      <summary>
            Right border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.TopBorder">
      <summary>
            Top border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.BottomBorder">
      <summary>
            Bottom border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.DiagonalDownBorder">
      <summary>
            Diagonal down border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.DiagonalUpBorder">
      <summary>
            Diagonal up border settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.Font">
      <summary>
            Font settings will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontSize">
      <summary>
            Font size setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontName">
      <summary>
            Font name setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontColor">
      <summary>
            Font color setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontBold">
      <summary>
            Font bold setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontItalic">
      <summary>
            Font italic setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontUnderline">
      <summary>
            Font underline setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontStrike">
      <summary>
            Font strikeout setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.FontScript">
      <summary>
            Font script setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.NumberFormat">
      <summary>
            Number format setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.HorizontalAlignment">
      <summary>
            Horizontal alignment setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.VerticalAlignment">
      <summary>
            Vertical alignment setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.Indent">
      <summary>
            Indent level setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.Rotation">
      <summary>
            Rotation setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.WrapText">
      <summary>
            Wrap text setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.ShrinkToFit">
      <summary>
            Shrink to fit setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.TextDirection">
      <summary>
            Text direction setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.CellShading">
      <summary>
            Cell shading setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.Locked">
      <summary>
            Locked setting will be applied.
            </summary>
    </member>
    <member name="P:Aspose.Cells.StyleFlag.HideFormula">
      <summary>
            Hide formula setting will be applied.
            </summary>
    </member>
    <member name="T:Aspose.Cells.StyleModifyFlag">
      <summary>
            The style mofied flags.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.All">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Borders">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.LeftBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.RightBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.TopBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.BottomBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.HorizontalBorder">
      <summary>
            Only for dynamic style,such as conditional formatting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.VerticalBorder">
      <summary>
            Only for dynamic style,such as conditional formatting.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Diagonal">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.DiagonalDownBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.DiagonalUpBorder">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Font">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontSize">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontName">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontFamily">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontCharset">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontColor">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontWeight">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontItalic">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontUnderline">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontStrike">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontSubscript">
      <summary>
      </summary>
      <remarks>NOTE: This member is now obsolete. Instead, please use FontScript. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontSuperscript">
      <summary>
      </summary>
      <summary>
      </summary>
      <remarks>NOTE: This member is now obsolete. Instead, please use FontScript. 
            This property will be removed 12 months later since August 2012. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontScript">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.NumberFormat">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.HorizontalAlignment">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.VerticalAlignment">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Indent">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Rotation">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.WrapText">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.ShrinkToFit">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.TextDirection">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.CellShading">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Pattern">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.ForegroundColor">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.BackgroundColor">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.Locked">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.HideFormula">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.AlignmentSettings">
      <summary>
            Includes horizontal/vertical Alignment, rotation,wrap Text,indent,shrinkToFit,Text Direction 
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontScheme">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontDirty">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontSpellingError">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontUFillTx">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontSpacing">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontKerning">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontEqualize">
      <summary>
            unused.
            </summary>
    </member>
    <member name="F:Aspose.Cells.StyleModifyFlag.FontCap">
      <summary>
            unused.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TextAlignmentType">
      <summary>
            Enumerates text alignment types. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Bottom">
      <summary>
            Represents bottom text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Center">
      <summary>
            Represents center text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.CenterAcross">
      <summary>
            Represents center across text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Distributed">
      <summary>
            Represents distributed text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Fill">
      <summary>
            Represents fill text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.General">
      <summary>
            Represents general text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Justify">
      <summary>
            Represents justify text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Left">
      <summary>
            Represents left text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Right">
      <summary>
            Represents right text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.Top">
      <summary>
            Represents top text alignment.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.JustifiedLow">
      <summary>
            Aligns the text with an adjusted kashida length for Arabic text.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextAlignmentType.ThaiDistributed">
      <summary>
            Distributes Thai text specially, because each character is treated as a word.
            </summary>
    </member>
    <member name="T:Aspose.Cells.TextDirectionType">
      <summary>
            Represents the direction of the text flow for this paragraph.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextDirectionType.Context">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TextDirectionType.LeftToRight">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.TextDirectionType.RightToLeft">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.TextOrientationType">
      <summary>
            Enumerates text orientation types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.ClockWise">
      <summary>
            text is rotated 90 degrees clockwise
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.CounterClockWise">
      <summary>
            text is rotated 90 degrees counterclockwise
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.NoRotation">
      <summary>
            Represents the default value.
            </summary>
    </member>
    <member name="F:Aspose.Cells.TextOrientationType.TopToBottom">
      <summary>
            Displays text from top to bottom of the cell. Stacked text.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ThemeColor">
      <summary>
            Represents a theme color.
            </summary>
      <example>
        <code>
            
            [C#]
            
            //Instantiating a Workbook object
            Workbook workbook = new Workbook();
            Cells cells = workbook.Worksheets[0].Cells;
            cells["A1"].PutValue("Hello World");
            Style style = cells["A1"].GetStyle();
            //Set ThemeColorType.Text2 color type with 40% lighten as the font color.
            style.Font.ThemeColor = new ThemeColor(ThemeColorType.Text2, 0.4);
            style.Pattern = BackgroundType.Solid;
            //Set ThemeColorType.Background2 color type with 75% darken as the foreground color
            style.ForegroundThemeColor = new ThemeColor(ThemeColorType.Background2, -0.75);
            cells["A1"].SetStyle(style);
            //Saving the Excel file
            workbook.Save("C:\\book1.xlsx");
            
            [Visual Basic]
            
            'Instantiating a Workbook object
            Dim workbook As Workbook = New Workbook()
            Dim cells As Cells = workbook.Worksheets(0).Cells
            cells("A1").PutValue("Hello World")
            'Get the cell style
            Dim style As Style = cells("A1").GetStyle()
            'Set ThemeColorType.Text2 color type with 40% lighten as the font color.
            Style.Font.ThemeColor = New ThemeColor(ThemeColorType.Text2, 0.4)
            Style.Pattern = BackgroundType.Solid
            'Set ThemeColorType.Background2 color type with 75% darken as the foreground color
            style.ForegroundThemeColor = New ThemeColor(ThemeColorType.Background2, -0.75)
            'Set the cell style
            cells("A1").SetStyle(style)
            'Saving the Excel file
            Workbook.Save("C:\\book1.xlsx")
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.ThemeColor.#ctor(Aspose.Cells.ThemeColorType,System.Double)">
      <summary>
      </summary>
      <param name="type">The theme type.</param>
      <param name="tint">The tint value.</param>
    </member>
    <member name="P:Aspose.Cells.ThemeColor.ColorType">
      <summary>
            Gets and sets the theme type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.ThemeColor.Tint">
      <summary>
            Gets and sets the tint value.
            </summary>
      <remarks>
            The tint value is stored as a double from -1.0 .. 1.0, where -1.0 means 100% darken 
            and 1.0 means 100% lighten. Also, 0.0 means no change.
            </remarks>
    </member>
    <member name="T:Aspose.Cells.ThemeColorType">
      <summary>
            Enumerates  the theme color types.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Background1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Text1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Background2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Text2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent1">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent2">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent3">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent4">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent5">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Accent6">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.Hyperlink">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.FollowedHyperlink">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ThemeColorType.StyleColor">
      <summary>
            Inner used.
            A color used in theme definitions which means to use the color of the style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Validation">
      <summary>
             Represents data validation.settings.
             </summary>
      <example>
        <code>
             [C#]
             Workbook workbook = new Workbook();
            	ValidationCollection validations = workbook.Worksheets[0].Validations;
            	Validation validation = validations[validations.Add()];
            	validation.Type = Aspose.Cells.ValidationType.WholeNumber;
            	validation.Operator = OperatorType.Between;
            	validation.Formula1 = "3";
            	validation.Formula2 = "1234";
            			
            	CellArea area;
            	area.StartRow = 0;
            	area.EndRow = 1;
            	area.StartColumn = 0;
            	area.EndColumn = 1;
            
            	validation.AreaList.Add(area);
            	
            	[Visual Basic]
            	Dim workbook as Workbook = new Workbook()
            	Dim validations as ValidationCollection  = workbook.Worksheets(0).Validations
            	Dim validation as Validation = validations(validations.Add())
            	validation.Type = ValidationType.WholeNumber
            	validation.Operator = OperatorType.Between
            	validation.Formula1 = "3"
            	validation.Formula2 = "1234"
            			
            	Dim area as CellArea
            	area.StartRow = 0
            	area.EndRow = 1
            	area.StartColumn = 0
            	area.EndColumn = 1
            
            	validation.AreaList.Add(area)
            
             </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Validation.Operator">
      <summary>
            Represents the operator for the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.AlertStyle">
      <summary>
            Represents the validation alert style.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Type">
      <summary>
            Represents the data validation type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.InputMessage">
      <summary>
            Represents the data validation input message.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.InputTitle">
      <summary>
            Represents the title of the data-validation input dialog box.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ErrorMessage">
      <summary>
            Represents the data validation error message.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ErrorTitle">
      <summary>
            Represents the title of the data-validation error dialog box. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ShowInput">
      <summary>
            Indicates whether the data validation input message will be displayed whenever the user selects a cell in the data validation range.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.ShowError">
      <summary>
            Indicates whether the data validation error message will be displayed whenever the user enters invalid data. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.IgnoreBlank">
      <summary>
            Indicates whether blank values are permitted by the range data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Formula1">
      <summary>
            Represents the value or expression associated with the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Value1">
      <summary>
            Represents the first value associated with the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Value2">
      <summary>
            Represents the first value associated with the data validation.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.Formula2">
      <summary>
            Represents the value or expression associated with the second part of the data validation. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.InCellDropDown">
      <summary>
            Indicates whether data validation displays a drop-down list that contains acceptable values.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Validation.AreaList">
      <summary>
            Represents a collection of <see cref="T:Aspose.Cells.CellArea" /> which contains the data validation settings.
            </summary>
      <remarks>
            The old validations on the area will not be removed if directly adding are to this list.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Validation.AddArea(Aspose.Cells.CellArea)">
      <summary>
            Applies the validation to the area.
            </summary>
      <param name="cellArea">The area.</param>
      <remarks>
            In this method , we will remove all old validations on this area.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Validation.RemoveArea(Aspose.Cells.CellArea)">
      <summary>
            Remove the validation settings in the range.
            </summary>
      <param name="cellArea">The range which contains the data validation settings.</param>
    </member>
    <member name="M:Aspose.Cells.Validation.RemoveACell(System.Int32,System.Int32)">
      <summary>
            Remove the validation settings in the cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column"> The column index.</param>
    </member>
    <member name="T:Aspose.Cells.ValidationAlertType">
      <summary>
            Represents the data validation alert style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationAlertType.Information">
      <summary>
            Information alert style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationAlertType.Stop">
      <summary>
            Stop alert style.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationAlertType.Warning">
      <summary>
            Warning alert style.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ValidationCollection">
      <summary>
            Represents data validation collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.Add">
      <summary>
            Adds a data validation to the collection.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Validation" /> object index.</returns>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use ValidationCollection.Add(CellArea) method.
            This property will be removed 12 months later since JANUARY 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.Add(Aspose.Cells.CellArea)">
      <summary>
            Adds a data validation to the collection.
            </summary>
      <param name="ca">The area contains this validation.</param>
      <returns>
        <see cref="T:Aspose.Cells.Validation" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.Add(Aspose.Cells.Validation)">
      <summary>
            Add a <see cref="T:Aspose.Cells.Validation" /> to the collection.
            </summary>
      <param name="validation"> A validation object.</param>
      <returns>
        <see cref="T:Aspose.Cells.Validation" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.ValidationCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Validation" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.RemoveACell(System.Int32,System.Int32)">
      <summary>
            Removes all validation setting on the cell.
            </summary>
      <param name="row">The row index of the cell.</param>
      <param name="column">The column index of the cell.</param>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.RemoveArea(Aspose.Cells.CellArea)">
      <summary>
             Removes all validation setting on the range..
             </summary>
      <param name="ca">The range which contains the validations setting.</param>
    </member>
    <member name="M:Aspose.Cells.ValidationCollection.GetValidationInCell(System.Int32,System.Int32)">
      <summary>
            Gets the validation applied to given cell.
            </summary>
      <param name="row">The row index.</param>
      <param name="column">The column index.</param>
      <returns>Returns a <see cref="T:Aspose.Cells.Validation" /> object or null if there is no validation for given cell</returns>
    </member>
    <member name="T:Aspose.Cells.ValidationType">
      <summary>
            Represents data validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.AnyValue">
      <summary>
            Any value validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.WholeNumber">
      <summary>
            Whole number validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Decimal">
      <summary>
            Decimal validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.List">
      <summary>
            List validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Date">
      <summary>
            Date validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Time">
      <summary>
            Time validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.TextLength">
      <summary>
            Text length validation type.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ValidationType.Custom">
      <summary>
            InnerCustom validation type.
            </summary>
    </member>
    <member name="T:Aspose.Cells.ViewType">
      <summary>
            Represents the view type of the worksheet.
            </summary>
    </member>
    <member name="F:Aspose.Cells.ViewType.NormalView">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ViewType.PageBreakPreview">
      <summary>
      </summary>
    </member>
    <member name="F:Aspose.Cells.ViewType.PageLayoutView">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.VerticalPageBreak">
      <summary>
            Encapsulates the object that represents a vertical page break. 
            </summary>
      <example>
        <code>
            [C#]
            //Add a pagebreak at G5
            excel.Worksheets[0].HorizontalPageBreaks.Add("G5");
            excel.Worksheets[0].VerticalPageBreaks.Add("G5");
            
            [VB]
            'Add a pagebreak at G5
            excel.Worksheets(0).HorizontalPageBreaks.Add("G5")
            excel.Worksheets(0).VerticalPageBreaks.Add("G5")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.VerticalPageBreak.StartRow">
      <summary>
            Gets the start row index of the vertical page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.VerticalPageBreak.EndRow">
      <summary>
            Gets the end row index of the vertical page break.
            </summary>
    </member>
    <member name="P:Aspose.Cells.VerticalPageBreak.Column">
      <summary>
            Gets the column index of the vertical page break.
            </summary>
    </member>
    <member name="T:Aspose.Cells.VerticalPageBreakCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.VerticalPageBreak" /> objects.
            </summary>
    </member>
    <member name="P:Aspose.Cells.VerticalPageBreakCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.VerticalPageBreak" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.VerticalPageBreakCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.VerticalPageBreak" /> element with the specified cell name.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>The element with the specified cell name.</returns>
    </member>
    <member name="M:Aspose.Cells.VerticalPageBreakCollection.Add(System.Int32,System.Int32,System.Int32)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="startRow">Start row index, zero based.</param>
      <param name="endRow">End row index, zero based.</param>
      <param name="column">Column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.VerticalPageBreak" /> object index.</returns>
      <remarks>This method is used to add a vertical pagebreak within a print area.</remarks>
    </member>
    <member name="M:Aspose.Cells.VerticalPageBreakCollection.Add(System.Int32)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="column">Cell column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.VerticalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.VerticalPageBreakCollection.Add(System.Int32,System.Int32)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="row">Cell row index, zero based.</param>
      <param name="column">Cell column index, zero based.</param>
      <returns>
        <see cref="T:Aspose.Cells.VerticalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.VerticalPageBreakCollection.Add(System.String)">
      <summary>
            Adds a vertical page break to the collection.
            </summary>
      <param name="cellName">Cell name.</param>
      <returns>
        <see cref="T:Aspose.Cells.VerticalPageBreak" /> object index.</returns>
      <remarks>Page break is added in the top left of the cell.
            Please set a horizontal page break and a vertical page break concurrently.</remarks>
    </member>
    <member name="M:Aspose.Cells.VerticalPageBreakCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the VPageBreak element at a specified name.
            </summary>
      <param name="index">Element index, zero based.</param>
    </member>
    <member name="T:Aspose.Cells.VisibilityType">
      <summary>
            Represents the states for sheet visibility. 
            </summary>
    </member>
    <member name="F:Aspose.Cells.VisibilityType.Hidden">
      <summary>
            Indicates the sheet is hidden, but can be shown by the user via the user interface.  
             </summary>
    </member>
    <member name="F:Aspose.Cells.VisibilityType.VeryHidden">
      <summary>
            Indicates the sheet is hidden and cannot be shown in the user interface (UI). 
            This state is only available programmatically.
            </summary>
    </member>
    <member name="F:Aspose.Cells.VisibilityType.Visible">
      <summary>
            Indicates the sheet is visible. 
            </summary>
    </member>
    <member name="T:Aspose.Cells.WorkbookSettings">
      <summary>
            Represents all settings of the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.EnableMacros">
      <summary>
            Enable macros;
            </summary>
      <remarks>
            Now it only works when copying a worksheet to other worksheet in a workbook.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CheckCustomNumberFormat">
      <summary>
            Indicates whether checking custom number format when setting Style.Custom.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.Date1904">
      <summary>
            Gets or sets a value which represents if the workbook uses the 1904 date system.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.ProtectionType">
      <summary>
            Gets the protection type of the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.PrecisionAsDisplayed">
      <summary>
            True if calculations in this workbook will be done using only the precision of the numbers as they're displayed
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.ReCalculateOnOpen">
      <summary>
            Indicates whether re-calculate all formulas on opening file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CreateCalcChain">
      <summary>
            Indicates whether create calculated formulas chain.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.DisplayDrawingObjects">
      <summary>
            Indicates whether and how to show objects in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.Iteration">
      <summary>
            Indicates if Aspose.Cells will use iteration to resolve circular references.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.MaxIteration">
      <summary>
            Returns or sets the maximum number of iterations that Aspose.Cells can use to resolve a circular reference.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.MaxChange">
      <summary>
            Returns or sets the maximum number of change that Microsoft Excel can use to resolve a circular reference.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CalcMode">
      <summary>
            It specifies whether to calculate formulas manually,
            automatically or automatically except for multiple table operations.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CalculationId">
      <summary>
            Specifies the version of the calculation engine used to calculate values in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CalcStackSize">
      <summary>
            Specifies the stack size for calculating cells recursively.
            The large value for this size will give better performance when there are lots of cells need to be calculated recursively.
            On the other hand, larger value will raise the risk of StackOverflowException.
            If user gets StackOverflowException when calculating formulas, this value should be decreased.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.RecalculateBeforeSave">
      <summary>
            Indicates whether to recalculate before saving the document.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.SheetTabBarWidth">
      <summary>
            Width of worksheet tab bar (in 1/1000 of window width).
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.ShowTabs">
      <summary>
            Get or sets a value whether the Workbook tabs are displayed.
            </summary>
      <remarks>The default value is true.</remarks>
      <example>The following code hides the Sheet Tabs and Tab Scrolling Buttons for the spreadsheet.
            <code>
            [C#]
            // Hide the spreadsheet tabs.
            workbook.ShowTabs = false;
             
            [Visual Basic]
            ' Hide the spreadsheet tabs.
            workbook.ShowTabs = False
            </code></example>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.FirstVisibleTab">
      <summary>
            Gets or sets the first visible worksheet tab.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsHScrollBarVisible">
      <summary>
            Gets or sets a value indicating whether the generated spreadsheet will contain a horizontal scroll bar.
            </summary>
      <remarks>The default value is true.</remarks>
      <example>
            The following code makes the horizontal scroll bar invisible for the spreadsheet.
            <code>
            [C#]
            // Hide the horizontal scroll bar of the Excel file.
            workbook.IsHScrollBarVisible = false;
            
            [Visual Basic]
            ' Hide the horizontal scroll bar of the Excel file.
            workbook.IsHScrollBarVisible = False
            </code></example>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsVScrollBarVisible">
      <summary>
             Gets or sets a value indicating whether the generated spreadsheet will contain a vertical scroll bar.
             </summary>
      <remarks>The default value is true.</remarks>
      <example>The following code makes the vertical scroll bar invisible for the spreadsheet.
             <code>
             [C#]
            	// Hide the vertical scroll bar of the Excel file.
             workbook.IsVScrollBarVisible = false;
             
             [Visual Basic]
             ' Hide the vertical scroll bar of the Excel file.
             workbook.IsVScrollBarVisible = False
            </code></example>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.Shared">
      <summary>
            Gets or sets a value that indicates whether the Workbook is shared. 
            </summary>
      <remarks>The default value is false.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.LanguageCode">
      <summary>
            Gets or sets the user interface language of the Workbook version based on CountryCode that has saved the file. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.Region">
      <summary>
            Gets or sets the regional settings for workbook.
            </summary>
      <remarks>
            1. Regional settings used by Aspose.Cells component for a workbook loaded from template file:
            i). For an XLS file, there are fields defined for regional settings and MS Excel does save regional settings data into the file when saving the XLS file.
            So, we use the saved region in the template file for the workbook.
            If you do not want to use the region saved in the XLS file, please reset it to the expected one (such as, CountryCode.Default) after loading the template file.
            And, we save the user specified value (by this method) into the file too when saving an XLS file.
            ii). For other file formats, such as, XLSX, XLSB...etc., there is no field defined for regional settings in the file format specification.
            So, we use the regional settings of application's environment for the workbook.
            And, the user specified value (by this method) cannot be kept for the generated files with those file formats.
            2. For the view effect in MS Excel:
            The applied regional settings here can take effect only at runtime with Aspose.Cells component and not when viewing the generated file with MS Excel.
            Even for the generated XLS file in which the specified regional settings data has been saved, when viewing/editing it with MS Excel,
            the used region to perform formatting by MS Excel is always the default regional settings of the environment where MS Excel is running,
            not the one saved in the file. It is MS Excel's behavior and cannot be changed by code.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CultureInfo">
      <summary>
            Gets or sets the system culture info.
            </summary>
      <remarks>
            Returns null if culture info is not set and <see cref="P:Aspose.Cells.WorkbookSettings.Region" /> is not set. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.GlobalizationSettings">
      <summary>
            Gets and sets the globalization settings.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.NumberDecimalSeparator">
      <summary>
            Gets or sets the decimal separator for formatting/parsing numeric values. Default is the decimal separator of current Region.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.NumberGroupSeparator">
      <summary>
            Gets or sets the character that separates groups of digits to the left of the decimal in numeric values. Default is the group separator of current Region.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.Password">
      <summary>
            Represents Workbook file encryption password.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WriteProtection">
      <summary>
            Provides access to the workbook write protection options. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.RecommendReadOnly">
      <summary>
            Indicates if the Read Only Recommended option is selected.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use WorkbookSettings.WriteProtection.RecommendReadOnly property.
            This property will be removed 12 months later since October 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsWriteProtected">
      <summary>
            Indicates whether this workbook is write protected.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use WorkbookSettings.WriteProtection.IsWriteProtected property.
            This property will be removed 12 months later since October 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WriteProtectedPassword">
      <summary>
            Sets the protected password to modify the file.
            </summary>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use WorkbookSettings.WriteProtection.Password property.
            This property will be removed 12 months later since October 2015. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsEncrypted">
      <summary>
            Gets a value that indicates whether a password is required to open this workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsProtected">
      <summary>
            Gets a value that indicates whether the structure or window of the Workbook is protected. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsDefaultEncrypted">
      <summary>
            Indicates whether encrypting the workbook with default password if Structure and Windows of the workbook are locked.
            </summary>
      <remarks>
            The default value is false now. It's same as MS Excel 2013.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsMinimized">
      <summary>
            Represents whether the generated spreadsheet will be opened Minimized.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.IsHidden">
      <summary>
            Indicates whether this workbook is hidden.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.AutoCompressPictures">
      <summary>
            Specifies a boolean value that indicates the application automatically compressed pictures in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.RemovePersonalInformation">
      <summary>
            True if personal information can be removed from the specified workbook. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.HidePivotFieldList">
      <summary>
            Gets and sets whether hide the field list for the PivotTable.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.UpdateLinksType">
      <summary>
            Gets and sets how updates external links when the workbook is opened.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.ParsingFormulaOnOpen">
      <summary>
            Indicates whether parsing the formula when reading the file.
            </summary>
      <remarks>
            Only applies for Excel Xlsx, Xltx, Xltm and Xlsm file
            because the formulas in the files are stored with a string formula.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowLeft">
      <summary>
            The distance from the left edge of the client area to the left edge of the window, in unit of point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowLeftInch">
      <summary>
            The distance from the left edge of the client area to the left edge of the window.
            In unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowLeftCM">
      <summary>
            The distance from the left edge of the client area to the left edge of the window.
            In unit of centimeter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowTop">
      <summary>
            The distance from the top edge of the client area to the top edge of the window, in unit of point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowTopInch">
      <summary>
            The distance from the top edge of the client area to the top edge of the window, in unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowTopCM">
      <summary>
            The distance from the top edge of the client area to the top edge of the window, in unit of centimeter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowWidth">
      <summary>
            The width of the window, in unit of point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowWidthInch">
      <summary>
            The width of the window, in unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowWidthCM">
      <summary>
            The width of the window, in unit of centimeter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowHeight">
      <summary>
            The height of the window, in unit of point.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowHeightInch">
      <summary>
            The height of the window, in unit of inch.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WindowHeightCM">
      <summary>
            The height of the window, in unit of centimeter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.UpdateAdjacentCellsBorder">
      <summary>
            Indicates whether update adjacent cells' border.
            </summary>
      <remarks>
            The default value is false.
            For example: the bottom border of the cell A1 is update, 
            the top border of the cell A2 should be changed too. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CheckComptiliblity">
      <summary>
            Indicates whether check compatiliblity when saving workbook.
            </summary>
      <remarks>
            The default value is true.
            NOTE: This member is now obsolete. Instead, please use CheckCompatibility.
            This property will be removed 12 months later since November 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CheckCompatibility">
      <summary>
            Indicates whether check compatiliblity when saving workbook.
            </summary>
      <remarks>
            The default value is true.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CheckExcelRestriction">
      <summary>
            Whether check restriction of excel file when user modify cells related objects.
            For example, excel does not allow inputting string value longer than 32K.
            When you input a value longer than 32K such as by Cell.PutValue(string), if this property is true, you will get an Exception.
            If this property is false, we will accept your input string value as the cell's value so that later
            you can output the complete string value for other file formats such as CSV.
            However, if you have set such kind of value that is invalid for excel file format,
            you should not save the workbook as excel file format later. Otherwise there may be unexpected error for the generated excel file.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.AutoRecover">
      <summary>
            Indicates whether the file is mark for auto-recovery.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.CrashSave">
      <summary>
            indicates whether the application last saved the workbook file after a crash.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.DataExtractLoad">
      <summary>
            indicates whether the application last opened the workbook for data recovery.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.RepairLoad">
      <summary>
            Indicates whether the application last opened the workbook in safe or repair mode.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.BuildVersion">
      <summary>
            Specifies the incremental public release of the application.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.MemorySetting">
      <summary>
            Gets or sets the memory usage options. The new option will be taken as the default option for newly created worksheets but does not take effect for existing worksheets.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.PaperSize">
      <summary>
            Gets and sets the default print paper size.
            </summary>
      <remarks>
            If there is no setting about paper size,MS Excel will use default printer's setting.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.WorkbookSettings.WarningCallback">
      <summary>
            Gets or sets warning callback.
            </summary>
    </member>
    <member name="T:Aspose.Cells.Worksheet">
      <summary>
             Encapsulates the object that represents a single worksheet.
             </summary>
      <example>
        <code>
             [C#]
             
             Workbook workbook = new Workbook();
             
             Worksheet sheet = workbook.Worksheets[0];
             
             //Freeze panes at "AS40" with 10 rows and 10 columns
             sheet.FreezePanes("AS40", 10, 10);
             
             //Add a hyperlink in Cell A1
             sheet.Hyperlinks.Add("A1", 1, 1, "http://www.aspose.com");
             
             [Visual Basic]
             
             Dim workbook as Workbook = new Workbook()
             
             Dim sheet as Worksheet = workbook.Worksheets(0)
             
             'Freeze panes at "AS40" with 10 rows and 10 columns
             sheet.FreezePanes("AS40", 10, 10)
             
             'Add a hyperlink in Cell A1
             sheet.Hyperlinks.Add("A1", 1, 1, "http://www.aspose.com")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Protection">
      <summary>
            Represents the various types of protection options available for a worksheet. Supports advanced protection options in ExcelXP and above version.
            </summary>
      <remarks>This property can protect worksheet in all versions of Excel file and support advanced protection options in ExcelXP and above version.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.GetPanes">
      <summary>
            Gets the window panes.
            </summary>
      <remarks>
            If the window is not splitted or frozen.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Workbook">
      <summary>
            Gets the workbook object which contains this sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Cells">
      <summary>
            Gets the <see cref="P:Aspose.Cells.Worksheet.Cells" /> collection.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.QueryTables">
      <summary>
            Gets the queryTables in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.PivotTables">
      <summary>
            Gets all pivot tables in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Type">
      <summary>
            Represents worksheet type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Name">
      <summary>
            Gets or sets the name of the worksheet.
            </summary>
      <remarks>The max length of sheet name is 31. And you cannot assign same name(case insensitive) to two worksheets. 
            For example, you cannot set "SheetName1" to the first worksheet and set "SHEETNAME1" to the second worksheet.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ShowFormulas">
      <summary>
            Indicates whether to show formulas or their results.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsGridlinesVisible">
      <summary>
            Gets or sets a value indicating whether the gridelines are visible.Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsRowColumnHeadersVisible">
      <summary>
            Gets or sets a value indicating whether the worksheet will display row and column headers.
            Default is true.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.DisplayZeros">
      <summary>
            True if zero values are displayed. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.DisplayRightToLeft">
      <summary>
            Indicates if the specified worksheet is displayed from right to left instead of from left to right.
            Default is false.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsOutlineShown">
      <summary>
            Indicates whether to show outline.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsSelected">
      <summary>
            Indicates whether this worksheet is selected when the workbook is opened.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.FreezePanes(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Freezes panes at the specified cell in the worksheet.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <remarks>
        <p>Row index and column index cannot all be zero. Number of rows and number of columns
            also cannot all be zero.</p>
        <p>The first two parameters specify the freezed position and the last two parameters specify the area freezed on the left top pane.</p>
      </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.GetFreezedPanes(System.Int32@,System.Int32@,System.Int32@,System.Int32@)">
      <summary>
            Gets the freeze panes.
            </summary>
      <param name="row">Row index.</param>
      <param name="column">Column index.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <returns>Return whether the worksheet is frozen</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Split">
      <summary>
            Splits window.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.FreezePanes(System.String,System.Int32,System.Int32)">
      <summary>
            Freezes panes at the specified cell in the worksheet.
            </summary>
      <param name="cellName">Cell name.</param>
      <param name="freezedRows">Number of visible rows in top pane, no more than row index.</param>
      <param name="freezedColumns">Number of visible columns in left pane, no more than column index.</param>
      <remarks>Row index and column index cannot all be zero. Number of rows and number of columns
            also cannot all be zero.</remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.UnFreezePanes">
      <summary>
            Unfreezes panes in the worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.RemoveSplit">
      <summary>
            Removes splitted window.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ListObjects">
      <summary>
            Gets all ListObjects in this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.HorizontalPageBreaks">
      <summary>
            Gets the <see cref="T:Aspose.Cells.HorizontalPageBreakCollection" /> collection. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.VerticalPageBreaks">
      <summary>
            Gets the <see cref="T:Aspose.Cells.VerticalPageBreakCollection" /> collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.AddPageBreaks(System.String)">
      <summary>
            Adds page break.
            </summary>
      <param name="cellName">
      </param>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Hyperlinks">
      <summary>
            Gets the <see cref="T:Aspose.Cells.HyperlinkCollection" /> collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Copy(Aspose.Cells.Worksheet)">
      <summary>
            Copies contents and formats from another worksheet.
            </summary>
      <param name="sourceSheet">Source worksheet.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Copy(Aspose.Cells.Worksheet,Aspose.Cells.CopyOptions)">
      <summary>
            Copies contents and formats from another worksheet.
            </summary>
      <param name="sourceSheet">Source worksheet.</param>
      <param name="copyOptions">
      </param>
      <remarks>You can copy data from another worksheet in the same file or another file. However, this method does not support to copy drawing objects, such as comments, images and charts.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.PageSetup">
      <summary>
            Represents the page setup description in this sheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.AutoFilter">
      <summary>
            Represents auto filter for the specified worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.RemoveAutoFilter">
      <summary>
            Removes the auto filter of the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.HasAutofilter">
      <summary>
            Indicates whether this worksheet has auto filter.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.TransitionEvaluation">
      <summary>
            Indicates whether the Transition Formula Evaluation (Lotus compatibility) option is enabled.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.TransitionEntry">
      <summary>
            Indicates whether the Transition Formula Entry (Lotus compatibility) option is enabled.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.VisibilityType">
      <summary>
            Indicates the visible state for this sheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.SetVisible(System.Boolean,System.Boolean)">
      <summary>
            Sets the visible options.
            </summary>
      <param name="isVisible">Whether the worksheet is visible</param>
      <param name="ignoreError">Whether to ignore error if this option is not valid.</param>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsVisible">
      <summary>
            Represents if the worksheet is visible.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.SelectRange(System.Int32,System.Int32,System.Int32,System.Int32,System.Boolean)">
      <summary>
            Selects a range.
            </summary>
      <param name="startRow">The start row.
            </param>
      <param name="startColumn">The start column</param>
      <param name="totalRows">The number of rows.</param>
      <param name="totalColumns">The number of columns</param>
      <param name="removeOthers">True means removing other selected range and only select this range.
            </param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.RemoveAllDrawingObjects">
      <summary>
            Removes all drawing objects in this worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.ClearComments">
      <summary>
            Clears all comments in designer spreadsheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Protect(Aspose.Cells.ProtectionType)">
      <summary>
             Protects worksheet.
             </summary>
      <param name="type">Protection type.</param>
      <remarks>This method protects worksheet without password. It can protect worksheet in all versions of Excel file. 
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Protect(Aspose.Cells.ProtectionType,System.String,System.String)">
      <summary>
            Protects worksheet.
            </summary>
      <param name="type">Protection type.</param>
      <param name="password">Password.</param>
      <param name="oldPassword">If the worksheet is already protected by a password, please supply the old password.
            Otherwise, you can set a null value or blank string to this parameter.</param>
      <remarks>This method can protect worksheet in all versions of Excel file. 
            </remarks>
      <example>
        <code>
            
            [C#]
            
            
            
            //Creating a file stream containing the Excel file to be opened
            FileStream fstream = new FileStream("C:\\book1.xls", FileMode.Open);
            //Instantiating a Workbook object and Opening the Excel file through the file stream
            Workbook excel = new Workbook(fstream);
            //Accessing the first worksheet in the Excel file
            Worksheet worksheet = excel.Worksheets[0];
            //Protecting the worksheet with a password
            worksheet.Protect(ProtectionType.All, "aspose", null);
            //Saving the modified Excel file in default (that is Excel 20003) format
            excel.Save("C:\\output.xls");
            //Closing the file stream to free all resources
            fstream.Close();
            
            [Visual Basic]
            
            'Creating a file stream containing the Excel file to be opened
            Dim fstream As FileStream = New FileStream("C:\\book1.xls", FileMode.Open)
            'Instantiating a Workbook object and Opening the Excel file through the file stream
            Dim excel As Workbook = New Workbook(fstream)
            'Accessing the first worksheet in the Excel file
            Dim worksheet As Worksheet = excel.Worksheets(0)
            'Protecting the worksheet with a password
            worksheet.Protect(ProtectionType.All, "aspose", DBNull.Value.ToString())
            'Saving the modified Excel file in default (that is Excel 20003) format
            excel.Save("C:\\output.xls")
            'Closing the file stream to free all resources
            fstream.Close()
            
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Unprotect">
      <summary>
            Unprotects worksheet.
            </summary>
      <remarks> This method unprotects worksheet which is protected without password.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Unprotect(System.String)">
      <summary>
            Unprotects worksheet.
            </summary>
      <param name="password">Password</param>
      <remarks>If the worksheet is protected without a password, you can set a null value or blank string to password parameter.
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Index">
      <summary>
            Gets the index of sheet in the worksheet collection.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.MoveTo(System.Int32)">
      <summary>
            Moves the sheet to another location in the spreadsheet.
            </summary>
      <param name="index">Destination sheet index.</param>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsProtected">
      <summary>
            Indicates if the worksheet is protected.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Validations">
      <summary>
            Gets the data validation setting collection in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.AllowEditRanges">
      <summary>
            Gets the allow edit range collection in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ErrorCheckOptions">
      <summary>
            Gets error check setting applied on certain ranges.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Outline">
      <summary>
            Gets the outline on this worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.FirstVisibleRow">
      <summary>
            Represents first visible row index.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.FirstVisibleColumn">
      <summary>
            Represents first visible column index.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Replace(System.String,System.String)">
      <summary>
            Replaces all cells' text with a new string.
            </summary>
      <param name="oldString">Old string value.</param>
      <param name="newString">New string value.</param>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Zoom">
      <summary>
            Represents the scaling factor in percentage. It should be between 10 and 400.
            </summary>
      <remarks>Please set the view type first.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ViewType">
      <summary>
            Gets and sets the view type.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsPageBreakPreview">
      <summary>
            Indicates whether the specified worksheet is shown in normal view or page break preview.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.IsRulerVisible">
      <summary>
            Indicates whether the ruler is visible. This property is only applied for page break preview.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.GetSelectedRanges">
      <summary>
            Gets selected ranges of cells in the designer spreadsheet.
            </summary>
      <returns>An <see cref="T:System.Collections.ArrayList" /> which contains selected ranges.</returns>
    </member>
    <member name="P:Aspose.Cells.Worksheet.TabColor">
      <summary>
            Represents worksheet tab color.
            </summary>
      <remarks>This feature is only supported in ExcelXP(Excel2002) and later versions. 
            If you save file as Excel97 or Excel2000 format, it will be omitted.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.CodeName">
      <summary>
            Gets and sets worksheet code name.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.SetBackground(System.Byte[])">
      <summary>
            Sets worksheet background image.
            </summary>
      <param name="pictureData">Picture data.</param>
      <remarks>
            NOTE: This member is now obsolete. Instead, 
            please use Worksheet.BackgroundImage property.
            This property will be removed 12 months later since August 2016. 
            Aspose apologizes for any inconvenience you may have experienced.</remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.BackgroundImage">
      <summary>
            Gets and sets worksheet background image.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ConditionalFormattings">
      <summary>
            Gets the ConditionalFormattings in the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.ActiveCell">
      <summary>
            Gets or sets the active cell in the worksheet. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.CustomProperties">
      <summary>
            Gets an object representing 
            the identifier information associated with a worksheet. 
            </summary>
      <remarks>
            Worksheet.CustomProperties provide a preferred mechanism for storing arbitrary data. 
            It supports legacy third-party document components, as well as those situations that have a stringent need for binary parts. 
            </remarks>
    </member>
    <member name="P:Aspose.Cells.Worksheet.SmartTagSetting">
      <summary>
            Gets all <see cref="T:Aspose.Cells.Markup.SmartTagCollection" /> objects of the worksheet.
            </summary>
    </member>
    <member name="P:Aspose.Cells.Worksheet.Scenarios">
      <summary>
            Gets the collection of <see cref="T:Aspose.Cells.Scenario" />.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.CalculateFormula(System.String)">
      <summary>
            Calculates a formula.
            </summary>
      <param name="formula">Formula to be calculated.</param>
      <returns>Calculated formula result.</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheet.CalculateFormula(System.String,Aspose.Cells.CalculationOptions)">
      <summary>
            Calculates a formula.
            </summary>
      <param name="formula">Formula to be calculated.</param>
      <param name="opts">Options for calculating formula</param>
      <returns>Calculated formula result.</returns>
    </member>
    <member name="M:Aspose.Cells.Worksheet.RefreshPivotTables">
      <summary>
            Refreshes all PivotTables in this Worksheet.
            </summary>
    </member>
    <member name="M:Aspose.Cells.Worksheet.CalculateFormula(System.Boolean,System.Boolean,Aspose.Cells.ICustomFunction)">
      <summary>
            Calculates all formulas in this worksheet.
            </summary>
      <param name="recursive">True means if the worksheet' cells depend on the cells of other worksheets,
             the dependant cells in other worksheets will be calculated too.
             False means all the formulas in the worksheet have been calculated and the values are right.</param>
      <param name="ignoreError">Indicates if hide the error in calculating formulas.
            The error may be unsupported function, external links, etc.</param>
      <param name="customFunction">The custom formula calculation functions to extend the calculation engine.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.CalculateFormula(Aspose.Cells.CalculationOptions,System.Boolean)">
      <summary>
            Calculates all formulas in this worksheet.
            </summary>
      <param name="options">Options for calculation</param>
      <param name="recursive">True means if the worksheet' cells depend on the cells of other worksheets,
             the dependant cells in other worksheets will be calculated too.
             False means all the formulas in the worksheet have been calculated and the values are right.</param>
    </member>
    <member name="M:Aspose.Cells.Worksheet.Dispose">
      <summary>
      </summary>
    </member>
    <member name="T:Aspose.Cells.WorksheetCollection">
      <summary>
            Encapsulates a collection of <see cref="T:Aspose.Cells.Worksheet" /> objects.
            </summary>
      <example>
        <code>
            [C#]
            
            Workbook workbook = new Workbook();
            
            WorksheetCollection sheets = workbook.Worksheets;
            
            //Add a worksheet
            sheets.Add();
            
            //Change the name of a worksheet
            sheets[0].Name = "First Sheet";
            
            //Set the active sheet to the second worksheet
            sheets.SetActiveSheet(1);
            
            	
            [Visual Basic]
            
            Dim excel as Workbook = new Workbook()
            
            Dim sheets as WorksheetCollection = excel.Worksheets
            
            'Add a worksheet
            sheets.Add()
            
            'Change the name of a worksheet
            sheets(0).Name = "First Sheet"
            
            'Set the active sheet to the second worksheet
            sheets.SetActiveSheet(1)
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.IsRefreshAllConnections">
      <summary>
            Indicates whether refresh all connections on opening file in MS Excel.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.CreateRange(System.String,System.Int32)">
      <summary>
             Creates a <see cref="T:Aspose.Cells.Range" /> object from an address of the range.
            </summary>
      <param name="address">The address of the range.</param>
      <param name="sheetIndex">The sheet index.</param>
      <returns>A <see cref="T:Aspose.Cells.Range" /> object</returns>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.Names">
      <summary>
            Gets the collection of all the Name objects in the spreadsheet. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.Item(System.Int32)">
      <summary>
             Gets the <see cref="T:Aspose.Cells.Worksheet" /> element at the specified index.
             </summary>
      <param name="index">The zero based index of the element.</param>
      <returns>The element at the specified index.</returns>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.Item(System.String)">
      <summary>
            Gets the <see cref="T:Aspose.Cells.Worksheet" /> element with the specified name.
            </summary>
      <param name="sheetName">Worksheet name</param>
      <returns>The element with the specified name.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.GetSheetByCodeName(System.String)">
      <summary>
            Gets the worksheet by the code name.
            </summary>
      <param name="codeName">Worksheet code name.</param>
      <returns>The element with the specified code name.</returns>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.ActiveSheetIndex">
      <summary>
            Represents the index of active worksheet when the spreadsheet is opened.
            </summary>
      <remarks>Sheet index is zero based.</remarks>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.SortNames">
      <summary>
            Sorts defined names.
            </summary>
      <remarks>If you create a large amount of named ranges in the Excel file, 
            please call this method after all named ranges are created and before saving </remarks>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Insert(System.Int32,Aspose.Cells.SheetType)">
      <summary>
            Insert a worksheet.
            </summary>
      <param name="index">The sheet index</param>
      <param name="sheetType">The sheet type.</param>
      <returns>Returns an inserted worksheet.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Insert(System.Int32,Aspose.Cells.SheetType,System.String)">
      <summary>
            Insert a worksheet.
            </summary>
      <param name="index">The sheet index</param>
      <param name="sheetType">The sheet type.</param>
      <param name="sheetName">The sheet name.</param>
      <returns>Returns an inserted worksheet.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Add(Aspose.Cells.SheetType)">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <param name="type">Worksheet type.</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
      <example>
        <code>
            [C#]
            Workbook workbook = new Workbook();
            workbook.Worksheets.Add(SheetType.Chart);
            Cells cells = workbook.Worksheets[0].Cells;
            cells["c2"].PutValue(5000);
            cells["c3"].PutValue(3000);
            cells["c4"].PutValue(4000);
            cells["c5"].PutValue(5000);
            cells["c6"].PutValue(6000);
            Charts charts = workbook.Worksheets[1].Charts;
            int chartIndex = charts.Add(ChartType.Column, 10,10,20,20);
            Chart chart = charts[chartIndex];
            chart.NSeries.Add("Sheet1!C2:C6", true);
            
            [Visual Basic]
            Dim workbook As Workbook =  New Workbook() 
            workbook.Worksheets.Add(SheetType.Chart)
            Dim cells As Cells = workbook.Worksheets(0).Cells 
            cells("c2").PutValue(5000)
            cells("c3").PutValue(3000)
            cells("c4").PutValue(4000)
            cells("c5").PutValue(5000)
            cells("c6").PutValue(6000)
            Dim charts As Charts = workbook.Worksheets(1).Charts
            Dim chartIndex As Integer = charts.Add(ChartType.Column,10,10,20,20) 
            Dim chart As Chart = charts(chartIndex) 
            chart.NSeries.Add("Sheet1!C2:C6", True)
            </code>
      </example>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.SwapSheet(System.Int32,System.Int32)">
      <summary>
            Swaps the two sheets.
            </summary>
      <param name="sheetIndex1">The first worksheet.</param>
      <param name="sheetIndex2">The second worksheet.</param>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Add">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Add(System.String)">
      <summary>
            Adds a worksheet to the collection.
            </summary>
      <param name="sheetName">Worksheet name</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.RemoveAt(System.String)">
      <summary>
            Removes the element at a specified name.
            </summary>
      <param name="name">The name of the element to remove.</param>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.RemoveAt(System.Int32)">
      <summary>
            Removes the element at a specified index.
            </summary>
      <param name="index">The index value of the element to remove.</param>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.Clear">
      <summary>
            Clear all worksheets.
            </summary>
      <remarks>
            A workbook must contains a worksheet.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.AddCopy(System.String)">
      <summary>
            Adds a worksheet to the collection and copies data from an existed worksheet.
            </summary>
      <param name="sheetName">Name of source worksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
      <exception cref="T:Aspose.Cells.CellsException">Specifies an invalid worksheet name.</exception>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.AddCopy(System.Int32)">
      <summary>
            Adds a worksheet to the collection and copies data from an existed worksheet.
            </summary>
      <param name="sheetIndex">Index of source worksheet.</param>
      <returns>
        <see cref="T:Aspose.Cells.Worksheet" /> object index.</returns>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.Dxfs">
      <summary>
             Gets the master differential formatting records.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.GetRangeByName(System.String)">
      <summary>
            Gets Range object by pre-defined name.
            </summary>
      <param name="rangeName">Name of range.</param>
      <returns>Range object.<p></p>Returns null if the named range does not exist.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.GetNamedRanges">
      <summary>
            Gets all pre-defined named ranges in the spreadsheet.
            </summary>
      <returns>An array of Range objects.<p></p>Returns null if the named range does not exist.</returns>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.GetNamedRangesAndTables">
      <summary>
            Gets all pre-defined named ranges in the spreadsheet.
            </summary>
      <returns>An array of Range objects.<p></p>Returns null if the named range does not exist.</returns>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.XmlMaps">
      <summary>
            Gets and sets the XML maps in the workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.BuiltInDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the built-in document properties of the spreadsheet. 
            </summary>
      <remarks>A new property cannot be added to built-in document properties list. You can only get a built-in property and change its value.
            The following is the built-in properties name list:
            <p>Title</p><p>Subject</p><p>Author</p><p>Keywords</p><p>Comments</p><p>Template</p><p>Last Author</p><p>Revision Number</p><p>Application Name</p><p>Last Print Date</p><p>Creation Date</p><p>Last Save Time</p><p>Total Editing Time</p><p>Number of Pages</p><p>Number of Words</p><p>Number of Characters</p><p>Security</p><p>Category</p><p>Format</p><p>Manager</p><p>Company</p><p>Number of Bytes</p><p>Number of Lines</p><p>Number of Paragraphs</p><p>Number of Slides</p><p>Number of Notes</p><p>Number of Hidden Slides</p><p>Number of Multimedia Clips</p></remarks>
      <example>
        <code>
            [C#]
            DocumentProperty doc = workbook.Worksheets.BuiltInDocumentProperties["Author"];
            doc.Value = "John Smith";
            
            [Visual Basic]
            Dim doc as DocumentProperty = workbook.Worksheets.BuiltInDocumentProperties("Author")
            doc.Value = "John Smith"
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.CustomDocumentProperties">
      <summary>
            Returns a DocumentProperties collection that represents all the custom document properties of the spreadsheet. 
            </summary>
      <example>
        <code>
            [C#]
            excel.Worksheets.CustomDocumentProperties.Add("Checked by", "Jane");
            
            [Visual Basic]
            excel.Worksheets.CustomDocumentProperties.Add("Checked by", "Jane")
            </code>
      </example>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.OleSize">
      <summary>
            Gets and Sets displayed size when Workbook file is used as an Ole object.
            </summary>
      <remarks>
            Null means no ole size setting.
            </remarks>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.SetOleSize(System.Int32,System.Int32,System.Int32,System.Int32)">
      <summary>
            Sets displayed size when Workbook file is used as an Ole object.
            </summary>
      <param name="startRow">Start row index.</param>
      <param name="endRow">End row index.</param>
      <param name="startColumn">Start column index.</param>
      <param name="endColumn">End column index.</param>
      <remarks>This method is generally used to adjust display size in ppt file or doc file.</remarks>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.ExternalLinks">
      <summary>
            Represents external links in a workbook.
            </summary>
    </member>
    <member name="P:Aspose.Cells.WorksheetCollection.TableStyles">
      <summary>
            Gets <see cref="P:Aspose.Cells.WorksheetCollection.TableStyles" /> object.
            </summary>
    </member>
    <member name="M:Aspose.Cells.WorksheetCollection.ClearPivottables">
      <summary>
            Clears pivot tables from the spreadsheet.
            </summary>
    </member>
    <member name="T:Aspose.Cells.XlsbSaveOptions">
      <summary>
            Represents the options for saving xlsb file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.XlsbSaveOptions.#ctor">
      <summary>
            Creates xlsb file save options.
            </summary>
    </member>
    <member name="M:Aspose.Cells.XlsbSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates xlsb file save options.
            </summary>
      <param name="saveFormat">The save format . It must be xlsb.</param>
    </member>
    <member name="T:Aspose.Cells.XlsSaveOptions">
      <summary>
            Represents the save options for the Excel 97-2003 file format: xls and xlt.
            </summary>
    </member>
    <member name="M:Aspose.Cells.XlsSaveOptions.#ctor">
      <summary>
            Creates options for saving Excel 97-2003 xls/xlt file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.XlsSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates options for saving Excel 97-2003 xls/xlt file.
            </summary>
      <param name="format">The file format. It must be xls/xlt.</param>
    </member>
    <member name="P:Aspose.Cells.XlsSaveOptions.LightCellsDataProvider">
      <summary>
            The Data provider to provide cells data for saving workbook in light mode.
            </summary>
    </member>
    <member name="P:Aspose.Cells.XlsSaveOptions.IsTemplate">
      <summary>
            Indicates whether saving a template file.
            </summary>
    </member>
    <member name="T:Aspose.Cells.OoxmlSaveOptions">
      <summary>
            Represents the options of saving office open xml file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.OoxmlSaveOptions.#ctor">
      <summary>
            Creates the options for saving office open xml file.
            </summary>
    </member>
    <member name="M:Aspose.Cells.OoxmlSaveOptions.#ctor(Aspose.Cells.SaveFormat)">
      <summary>
            Creates the options for saving office open xml file.
            </summary>
      <param name="saveFormat">The file format.
            It must be xlsx,xltx,xlsm,xltm.</param>
    </member>
    <member name="P:Aspose.Cells.OoxmlSaveOptions.ExportCellName">
      <summary>
            Indicates if export cell name to Excel2007 .xlsx (.xlsm, .xltx, .xltm) file. 
            If the output file may be accessed by SQL Server DTS, this value must be true.
            Setting the value to false will highly increase the performance and reduce the file size when creating large file.
            Default value is false. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.OoxmlSaveOptions.LightCellsDataProvider">
      <summary>
            The Data provider to provide cells data for saving workbook in light mode.
            </summary>
    </member>
    <member name="P:Aspose.Cells.OoxmlSaveOptions.UpdateZoom">
      <summary>
            Indicates whether update scaling factor before saving the file 
            if the PageSetup.FitToPagesWide and PageSetup.FitToPagesTall properties control how the worksheet is scaled.
            </summary>
      <remarks>
            The default value is false for permance.
            
            </remarks>
    </member>
    <member name="T:Aspose.Cells.XmlMap">
      <summary>
            Represents Xml map information.
            </summary>
    </member>
    <member name="P:Aspose.Cells.XmlMap.Name">
      <summary>
            Returns or sets the name of the object.
            </summary>
    </member>
    <member name="T:Aspose.Cells.XmlMapCollection">
      <summary>
            A collection of <see cref="T:Aspose.Cells.XmlMap" /> objects that represent XmlMap information. 
            </summary>
    </member>
    <member name="P:Aspose.Cells.XmlMapCollection.Item(System.Int32)">
      <summary>
            Gets the xml map by the specific index.
            </summary>
      <param name="index">The index.</param>
      <returns>The xml map</returns>
    </member>
  </members>
</doc>